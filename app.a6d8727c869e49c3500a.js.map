{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable/fable-core.2.0.0-beta-002/Int32.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Long.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Date.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Util.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Option.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Seq.js","webpack:///./.fable/fable-core.2.0.0-beta-002/String.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Set.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Array.js","webpack:///./.fable/fable-core.2.0.0-beta-002/List.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Map.js","webpack:///./.fable/fable-core.2.0.0-beta-002/Types.js","webpack:///.fable/Fable.React.4.0.0-alpha-001/Fable.Helpers.React.fs","webpack:///src/Fabulosa/Extensions/PropExtension.fs","webpack:///src/Fabulosa/Components/Button.fs","webpack:///docs/Fabulosa.Docs/Renderer.fs","webpack:///docs/Fabulosa.Docs/Pages/Index.fs","webpack:///src/Fabulosa/Components/Icon.fs","webpack:///./.fable/fable-core.2.0.0-beta-002/Reflection.js","webpack:///src/Fabulosa/Components/Table.fs","webpack:///docs/Fabulosa.Docs/PropTable.fs","webpack:///docs/Fabulosa.Docs/Pages/Button.fs","webpack:///src/Fabulosa/Components/Form/Select.fs","webpack:///src/Fabulosa/Components/Form/Input.fs","webpack:///src/Fabulosa/Components/Form/Label.fs","webpack:///src/Fabulosa/Components/Form/Radio.fs","webpack:///src/Fabulosa/Components/Form/Switch.fs","webpack:///src/Fabulosa/Components/Form/Checkbox.fs","webpack:///src/Fabulosa/Components/Form/Validation.fs","webpack:///src/Fabulosa/Components/Form/Group.fs","webpack:///src/Fabulosa/Components/Form/Textarea.fs","webpack:///docs/Fabulosa.Docs/Pages/Form.fs","webpack:///src/Fabulosa/Components/Accordion.fs","webpack:///docs/Fabulosa.Docs/Pages/Accordion.fs","webpack:///src/Fabulosa/Components/Avatar.fs","webpack:///docs/Fabulosa.Docs/Pages/Avatar.fs","webpack:///src/Fabulosa/Components/Badge.fs","webpack:///docs/Fabulosa.Docs/Pages/Badge.fs","webpack:///src/Fabulosa/Components/Image.fs","webpack:///src/Fabulosa/Components/Video.fs","webpack:///src/Fabulosa/Components/Caption.fs","webpack:///src/Fabulosa/Components/Figure.fs","webpack:///docs/Fabulosa.Docs/Pages/Media.fs","webpack:///src/Fabulosa/Components/Grid.fs","webpack:///docs/Fabulosa.Docs/Pages/Grid.fs","webpack:///docs/Fabulosa.Docs/Pages/Icon.fs","webpack:///src/Fabulosa/Components/Navbar.fs","webpack:///docs/Fabulosa.Docs/Pages/Navbar.fs","webpack:///src/Fabulosa/Components/Responsive.fs","webpack:///docs/Fabulosa.Docs/Pages/Responsive.fs","webpack:///docs/Fabulosa.Docs/Pages/Table.fs","webpack:///src/Fabulosa/Components/Bar.fs","webpack:///docs/Fabulosa.Docs/Pages/Bar.fs","webpack:///src/Fabulosa/Components/Tag.fs","webpack:///docs/Fabulosa.Docs/Pages/Tag.fs","webpack:///src/Fabulosa/Components/Card.fs","webpack:///docs/Fabulosa.Docs/Pages/Card.fs","webpack:///src/Fabulosa/Components/Chip.fs","webpack:///docs/Fabulosa.Docs/Pages/Chip.fs","webpack:///src/Fabulosa/Components/Empty.fs","webpack:///docs/Fabulosa.Docs/Pages/Empty.fs","webpack:///src/Fabulosa/Components/Portal.fs","webpack:///src/Fabulosa/Components/Menu.fs","webpack:///docs/Fabulosa.Docs/Pages/Menu.fs","webpack:///src/Fabulosa/Components/Breadcrumb.fs","webpack:///docs/Fabulosa.Docs/Pages/Breadcrumbs.fs","webpack:///src/Fabulosa/Components/Nav.fs","webpack:///docs/Fabulosa.Docs/Pages/Nav.fs","webpack:///src/Fabulosa/Components/Modal.fs","webpack:///docs/Fabulosa.Docs/Pages/Modal.fs","webpack:///src/Fabulosa/Components/Pagination.fs","webpack:///docs/Fabulosa.Docs/Pages/Pagination.fs","webpack:///src/Fabulosa/Components/PageNav.fs","webpack:///docs/Fabulosa.Docs/Pages/Pagenav.fs","webpack:///src/Fabulosa/Components/Tab.fs","webpack:///src/Fabulosa/Components/Panel.fs","webpack:///docs/Fabulosa.Docs/Pages/Panel.fs","webpack:///src/Fabulosa/Components/Popover.fs","webpack:///docs/Fabulosa.Docs/Pages/Popover.fs","webpack:///src/Fabulosa/Components/Step.fs","webpack:///docs/Fabulosa.Docs/Pages/Step.fs","webpack:///docs/Fabulosa.Docs/Pages/Tab.fs","webpack:///src/Fabulosa/Components/Tile.fs","webpack:///docs/Fabulosa.Docs/Pages/Tile.fs","webpack:///src/Fabulosa/Components/Toast.fs","webpack:///docs/Fabulosa.Docs/Pages/Toast.fs","webpack:///src/Fabulosa/Types/BoundingRect.fs","webpack:///src/Fabulosa/Components/Tooltip.fs","webpack:///src/Fabulosa/Extensions/OptionExtension.fs","webpack:///docs/Fabulosa.Docs/Pages/Tooltip.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","parseRadix","invalidRadix2","invalidRadix8","invalidRadix10","isValid","radix","res","exec","test","Error","tryParse","initial","a","_a","_slicedToArray","_a$","prefix","digits","radix_","v","parseInt","Number","isNaN","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","this","GetHashCode","combineHashCodes","Equals","x","equals","CompareTo","compare","toString","Long_toString","toJSON","isLong","obj","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","op_UnaryNegation","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","str","RangeError","indexOf","substring","radixToPower","size","min","op_Addition","op_Multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","op_Division","rem1","op_Subtraction","rem","remDiv","isOdd","other","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","op_LogicalNot","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","op_RightShiftUnsigned","op_LeftShift","op_RightShift","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","fromBytes","bytes","le","fromBytesLE","fromBytesBE","padWithZeros","offsetToString","offset","isMinus","minutes","abs","toHalfUTCString","date","half","toISOString","toStringWithCustomFormat","format","utc","replace","match","rep","y","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","h","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","toStringWithOffset","Date","getTime","dateWithOffset","toISOStringWithOffset","toStringWithKind","kind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","getMilliseconds","getTimezoneOffset","Date_toString","date1","Date_compare","xtime","ytime","THIS_REF","instanceofExtended","cons","downcast","extend","target","_len","arguments","sources","Array","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","source","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","getOwnPropertyDescriptor","err","return","Lazy","factory","_classCallCheck","isValueCreated","_createClass","createdValue","int32ToString","Util_toString","quoteStrings","String","_typeof","JSON","stringify","getPrototypeOf","constructor","isPlainObject","isArray","k","isIterable","from","map","join","ObjectRef","idMap","has","set","count","stringHash","len","charCodeAt","numberHash","hashes","reduce","h1","h2","structuralHash","ar","ArrayBuffer","isView","equalArraysWith","eq","equalArrays","Util_equals","comparePrimitives","compareArraysWith","comp","compareArrays","Util_compare","WeakMap","CaseRules","None","LowerFirst","changeCase","caseRule","charAt","toLowerCase","createObj","fields","fail","kvPair","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","round","toFixed","f","Option_Some","Some","Option_classCallCheck","Option_createClass","some","Option_value","acceptNull","defaultArg","arg","defaultValue","declare","tag","field","Union","Enumerator","iter","Seq_classCallCheck","Seq_createClass","cur","current","getEnumerator","toIterator","en","MoveNext","Current","concat","xs","delay","output","unfold","innerIter","hasFinished","_defineProperty","fold","acc","Seq_length","fst","fsFormatRegExp","toHex","hi","lo","toBytesLE","toBytesBE","toBytes","printf","input","cont","createPrinter","_len2","args","_key2","strCopy","formatOnce","fsFormat","toText","str2","_","flags","pad","precision","toPrecision","toExponential","toUpperCase","plusPrefix","ch","padLeft","delimiter","_len4","_key4","isRight","Set_SetTree$00601","SetTreeModule$$$count","s$$1","SetTreeModule$$$countAux","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","l$$1","r$$1","SetTreeModule$$$height","SetTreeModule$$$tolerance","SetTreeModule$$$mk","l$$2","r$$2","matchValue","hl","hr","SetTreeModule$$$rebalance","t1","k$$1","t2","t1h","t2h","t2r","t2l","t2k","t2lr","t2ll","t2lk","t1r","t1l","t1k","t1rr","t1rl","t1rk","SetTreeModule$$$add","comparer","k$$2","t$$1","k2$$1","c$$1","Compare","r$$3","l$$3","k2","SetTreeModule$$$remove","comparer$$3","k$$4","t$$4","k2$$6","r$$5","l$$5","k2$$7","c$$5","matchValue$$2","patternInput$$3","SetTreeModule$$$spliceOutSuccessor","t$$3","r$$4","l$$4","k2$$5","patternInput$$2","SetTreeModule$$$mem","comparer$$4","k$$5","t$$5","k2$$9","r$$6","l$$6","k2$$8","c$$6","SetTreeModule$002ESetIterator$00601","arg1","arg2","stack","started","Record","SetTreeModule$$$collapseLHS","tail","L","head","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","matchValue$$6","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EGeneric$002EIEnumerator$00601","$this$$41","_extend","_mutatorMap","$this$$42","_ref3","_mutatorMap2","Set_defineProperty","i$$1","matchValue$$7","SetTreeModule$$$moveNext","_defineEnumerableProperties","SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EIEnumerator","$this$$43","_ref4","SetTreeModule$002EmkIEnumerator$00601$$$System$002EIDisposable","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$toSeq","s$$16","en$$1","SetTreeModule$$$compare","comparer$$18","s1","s2","matchValue$$9","comparer$$17","l1","l2","SetTreeModule$$$compareStacks","$target$$44","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","matchValue$$8","c$$7","c$$8","c$$9","c$$10","SetTreeModule$$$ofSeq","comparer$$20","c$$11","ie","comparer$$19","acc$$11","$var$$45","SetTreeModule$$$mkFromEnumerator","Dispose","FSharpSet","comparer$$22","tree","FSharpSet$$get_Comparer","__$$5","FSharpSet$$get_Tree","__$$6","createMutable","comparer$$32","comparer$$31","tree$0027","_ref6","tree$$1","add","x$$33","add_","x$$34","clear","delete","x$$35","x$$36","values","createMutablePrivate","Array_map","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","foldBackIndexed","folder$$4","array$$78","state$$8","acc$$4","size$$1","i$$47","List_head","_arg1","List_fold","$arg$$15","$arg$$16","$arg$$17","f$$2","state$$1","xs$$9","List_reverse","xs$$10","acc$$1","x$$6","List_foldBack","f$$3","xs$$11","state$$2","acc$$2","x$$7","List_ofSeq","xs$$13","acc$$3","x$$9","List_append","xs$$29","ys$$11","acc$$10","x$$15","List_collect","f$$15","xs$$30","collect","List_map","f$$16","xs$$32","x$$16","List_ofArray","xs$$51","folder$$5","array$$79","state$$9","x$$11","acc$$5","Array_foldBack","x$$28","acc$$17","tryPickIndexed","f$$29","xs$$53","$arg$$100","$arg$$101","$arg$$102","tryPickIndexedAux","f$$28","i$$9","_arg1$$9","xs$$52","List_tryPick","f$$30","xs$$54","_arg1$$10","x$$30","List_tryFind","f$$33","xs$$57","_arg1$$11","List_filter","f$$42","xs$$72","x$$38","acc$$18","List_partition","f$$43","xs$$73","tupledArg$$1","x$$39","List_choose","f$$44","xs$$74","acc$$19","x$$40","List_reduce","f$$47","_arg1$$16","Set_toConsumableArray","combineHash","x$$22","y$$4","e$$1","that","that$$1","Map_MapTree$00602","MapTreeModule$$$size","MapTreeModule$$$sizeAux","MapTreeModule$$$empty","MapTreeModule$$$height","MapTreeModule$$$mk","MapTreeModule$$$rebalance","v$$1","t2v","t2lv","t1v","t1rv","MapTreeModule$$$add","v$$2","m$$3","v2","h$$1","MapTreeModule$$$find","comparer$$1","k$$3","m$$4","v2$$1","k2$$2","v2$$2","k2$$3","c$$3","MapTreeModule$$$remove","comparer$$9","k$$11","m$$7","v2$$7","r$$8","l$$8","matchValue$$1","patternInput$$1","MapTreeModule$$$spliceOutSuccessor","m$$6","v2$$5","v2$$6","r$$7","l$$7","patternInput","MapTreeModule$$$mem","comparer$$10","k$$12","m$$8","k2$$10","r$$9","l$$9","k2$$11","MapTreeModule$$$ofSeq","comparer$$16","comparer$$14","$var$$62","MapTreeModule$$$mkFromEnumerator","MapTreeModule$002EMapIterator$00602","MapTreeModule$$$collapseLHS","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","matchValue$$4","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EGeneric$002EIEnumerator$00601","$this$$63","$this$$64","Map_defineProperty","i$$3","matchValue$$5","MapTreeModule$$$moveNext","Map_defineEnumerableProperties","MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EIEnumerator","$this$$65","MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002EIDisposable","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","FSharpMap","FSharpMap$$get_Tree","Map_createMutable","source$$3","comparer$$23","x$$18","entries","k$$42","x$$19","kv$$1","k$$43","v$$29","kv$$2","Map_createMutablePrivate","sameType","superClass","subClass","writable","configurable","inherits","SystemObject","compareList","self","List","recordToJson","record","getFieldNames","recordEquals","thisNames","recordCompare","Map_toConsumableArray","kv","y$$3","res$$3","activePatternResult2372","m2","res$$4","finished","e1","e2","kvp1","kvp2","_this","id","identityHash","tmp","_this2","_this3","contents","Exception","msg","message","getFSharpExceptionFieldNames","filter","FSharpException","_this4","fieldNames","_this5","arg3","Types_Dictionary","__mutableMap","Types_HashSet","__mutableSet","initProps","react","init","props","update","view","children","Fable_Helpers_React_ReactiveCom$00603","ReactiveComponents$002EProps$00603","prop","this$$$1","model","state","newState","setState","ReactiveComponents$002EState$00601","text","prop$$5","_arg1$$2","htmlProps$$3","_arg1$$3","existing","prop$$6","addProp","PropExtension_Unmerged","prop$$7","propList","orElse","unmerged","unmerged$$1","props$$2","classNames","_arg1$$4","htmlAttrs","$arg$$3","propToClassNames","otherProps","list$$9","prop$$9","Fable_Helpers_React_Props$002EHTMLAttr","withoutClassNames","mapping","unmerged$$2","props$$3","opt","PropExtension_className","renderer","_arg1_0","_arg1_1","merge","PropExtension_map","propToClassName","Props$002EHTMLAttr$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","tupledArg","createButton","b","elem","react_dom","document","getElementById","b$$2","c$$2","Button_anchor","ButtonOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Button_ButtonOptional","Button_Kind","Button_button","_arg1$$1","req","Icon_size","addProps","$arg$$1","Icon_kind","CaseInfo","declaringType","Reflection_classCallCheck","TypeInfo","fullname","generics","cases","Reflection_createClass","fullName","Reflection_equals","Reflection_compare","getGenerics","type","Reflection_union","Reflection_tuple","lambda","argType","returnType","Reflection_option","generic","list","Reflection_unit","string","bool","int32","Reflection_name","info","lastIndexOf","substr","gen","Reflection_isArray","endsWith","getUnionCases","getTupleElements","isTuple","isUnion","startsWith","_arg1_0$$2","_arg1_1$$2","rowPropToClassName","_arg2","col$$1","_arg1_0$$1","_arg1_1$$1","tableTitleColumn","col","tableColumn","prop$$2","_arg1_0$$5","_arg1_1$$5","_arg1$$7","tablePropToClassName","_arg2$$1","body","_arg1_0$$4","_arg1_1$$4","_arg1$$5","_arg1$$6","row$$1","tableRow","tableBody","_arg1_0$$3","_arg1_1$$3","row","tableHead","checker","systemType","systemType$$1","typeMatches","systemType$$2","aType","activePatternResult5151","systemType$$3","$007CList$007C_$007C","strType","activePatternResult5152","systemType$$4","$007COption$007C_$007C","flip","systemTypeName","activePatternResult5150","$007CTuple$007C_$007C","x$$1","y$$1","propType","activePatternResult5158","activePatternResult5157","$007CUnion$007C_$007C","more","count$$1","array$$8","count$$2","Array_truncate","union","case$","typ$$2","describeType","uci","getUnionCaseFields","kind$$2","activePatternResult5174","getUnionPropFields","activePatternResult5173","st","kind$$1","getFields","getTuplePropFields","rowValues","table","TableOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Table_TableOptional","Table_TableKind","Table_TableChild","Table_TableHeadOrBodyChild","Table_TableRowChild","width","tupledArg$$2","rowValue_0","rowValue_1","rowValue_2","rowValue","col3","col2","col1","toTableRow","optType","reqType","chiType","fields$$1","typ$$3","kind$$3","renderTable","FabulosaFormSize$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Global_FabulosaFormSize","Global_FabulosaFormFieldSize","Button_Color","icon","Icon_IconRequired","Icon_Kind","Button_Shape","Button_icon","Button_State","txt","_arg3_0","_arg3_1","_arg3","Select_propToClassName","_arg5","selectOption","g","_arg2_0","_arg2_1","_arg4","grp","selectOptionGroup","opt$$2","opt$$1","Input$$$propToClassName","chi$$1","addr","addl","InputGroup$$$propToClassName","text$$2","className","o$$2","InputGroup$$$txt","Select_select","Input$$$input","opt$$3","chi","InputGroup$$$btn","prop$$1","isInline","Radio_propToClassName","Checkbox_isInline","Checkbox_propToClassName","Validation_propToClassName","Radio_radio","s$$2","s$$3","switch$","c$$4","Checkbox_checkbox","message$$1","Validation_ValidationOptional","propToMessage","arg01$0040$$1","InputGroup$$$inputGroup","Label_propToClassName","label","Textarea_textarea","validation","Group_group","Group_GroupChild","Global_FabulosaText","Input_InputGroup$002EInputGroupAddonLeft","Input_InputGroup$002EInputGroupChild","Select_SelectChild","Input_InputGroup$002EInputGroupAddonRight","ValidationOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Validation_ValidationChild","icn$$1","hdr","bod","icn","createIcon","item","arg01$0040","accordionItem","accordion","Accordion_AccordionChild","Accordion_AccordionIcon","Accordion_AccordionHeader","Accordion_AccordionBody","Avatar_AvatarOptional","arg0","presence$$2","presence$$1","presenceIcon","children$$1","Avatar_size","children$$2","url","src","o$$3","Avatar_image","presence","avatar","Avatar_AvatarChildren","AvatarOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Avatar_Size","Avatar_Presence","badge$$1","_arg1_2","value$$1","combine","anchorProps","divProps","children$$4","spanProps","children$$6","badge","Global_FabulosaValue","Badge_BadgeChildren","addOptionOrElse","imageKind","video_0","video_1","video$$1","props$$5","ratio","frameTag","videoTag","direction","renderChildren","cap","caption","Image_image","containerWidth","style","demo","ImageOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Image_ImageOptional","Image_ImageKind","video","Video_VideoRequired","Video_VideoKind","figureCaption","figure","FigureOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Figure_FigureOptional","Caption_CaptionChildren","Figure_FigureChildren","prop$$3","Grid_rowPropToClassName","colPropToClassName","gridColumn","gridRow","grid","Grid_GridChild","Grid_GridRowChild","GridColumnOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Grid_GridColumnOptional","Grid_style","GridRowOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Grid_GridRowOptional","IconOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Icon_IconOptional","Icon_Size","section","navbarSection","center","navbarCenter","brand","navbarBrand","navbar","Navbar_NavbarChild","Responsive_propToClassName","responsive","ResponsiveOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Responsive_ResponsiveOptional","Responsive_Size","Table_head","Table_body","$arg$$2","value$$4","value$$3","toPercent","Bar_style","tooltip","Bar_small","barItem","bar","Bar_BarChild","BarOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Bar_BarOptional","BarItemOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Bar_BarItemOptional","Tag_propToClassName","Tag_tag","TagOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Tag_TagOptional","Tag_Color","Tag_def","Tag_primary","secondary","Tag_success","warning","Tag_error","rounded","img","cardBody","ftr","cardFooter","title","subTitle","cardHeader","card","Card_CardChild","Card_HeaderTitle","Card_HeaderSubTitle","Card_def","fn","filtered","props$$4","Chip_ChipOptional","Chip_filter","Chip_pick","Chip_avatar","o$$1","fn$$1","role","onClick","onRemove","chip","ChipOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","console","emptyTitle","comp$$1","emptySubtitle","comp$$2","emptyAction","emptyIcon","Empty_empty","Empty_EmptyChild","selector","element","root","created","createElement","appendChild","btn","btnOpt","btnChi","withClick","Props$002EDOMAttr$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Fable_Helpers_React_Props$002EDOMAttr","rect","currentTarget","getBoundingClientRect","left","scrollX","bottom","scrollY","onTriggerClicked","y$$2","x$$2","IsOpen","dispatch","trig","menuTrigger","Menu_TriggerChildren","$0192","position","top","menuContainer","Menu_Position","Position","Menu_IsOpen","reactiveCom","req$$1","maybeOpen","Menu_init","Menu_update","Menu_view","menuDividerText","menuDivider","menuItem","menu","Menu_MenuRequired","Menu_MenuChild","MenuDividerOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Menu_MenuDividerOptional","link","hrf","href","breadcrumbLink","txt$$1","breadcrumbText","elements","breadcrumbElements","breadcrumb","Breadcrumb_BreadcrumbChildren","Breadcrumb_BreadcrumbLinkRequired","nav","navItem","Nav_NavChild","header_0","header_1","header$$1","children$$3","footerElement","footer_0","footer_1","footer$$1","children$$5","footer","props$$13","arg00","getOpenValue","modal_0","modal_1","modal$$1","props$$15","children$$15","header$$2","footer$$2","onRequestClose$$3","list$$1","Modal_ModalOptional","onRequestClose","isOpen","sizeClass","props$$14","Modal_Size","Modal_size","onRequestClose$$1","addPropOpt","modalOverLay","headerData","onRequestClose$$2","onClick$$1","header","$0192header","o$$4","$0192footer","o$$6","modal","Modal_ModalHeader","Modal_header","Modal_ModalBody","Modal_body","Modal_ModalFooter","Modal_footer","modalData$$1","modal_0$$1","modal_1$$1","modal$$2","children$$19","Modal_addProps","ModalOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Opened","Modal_Container$002EMessage","content_0","content_1","Container$$$init","Container$$$update","Container$$$view","Container$$$container","modalData","activePatternResult4564","$007CInt$007C_$007C","getAttribute","pc","Pagination_propToClassName","Pagination_onClick","paginationItem","page","Pagination_PaginationChild","FabulosaActive$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Global_FabulosaActive","pagCh","first","last","step","rangeStep","range","pagination","pages","act","action","prv","nxt","pageNavItem","o$$5","pageNav","PageNav_PageNavPrev","PageNav_Title","PageNav_Subtitle","PageNav_Action","PageNav_PageNavNext","Tab_propToClassName","itemPropToClassName","tabItem","subtitle","pg","tb","tab","bc","panelNavChild","panelNav","panelBody","panelFooter","panelHeaderChildren","panelHeader","_arg1$$8","panelChild","panel","Panel_PanelChild","Panel_PanelHeaderChild","Panel_body","Panel_footer","tri","con","Popover_propToClassName","popover","PopoverOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Popover_PopoverOptional","Popover_Position","Popover_PopoverTrigger","Popover_PopoverContent","hasActive","Step_itemPropToClassName","stepItem","Step_StepChild","Tab_TabChild","comp_0$$2","comp_1$$2","opt$$4","compact","Tile_TileOptional","tileIcon","comp_0","comp_1","ttl","sttl","tileContent","comp_0$$1","comp_1$$1","tileAction","tile","TileOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Tile_Content","Tile_TileContentTitle","Tile_TileContentSubtitle","Tile_Action","color","Toast_ToastOptional","Toast_onRequestClose","toast","dispatch$$3","renderToast","opened","Toast_Message","setTimeout","toggler","model$$1","dispatch$$4","renderToast$$1","dispatch$$2","ToastOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Toast_Color","Toast_primary","dispatch$$1","opened$$1","trigger","Toast_update","right","height","tooltip_0","tooltip_1","tooltip$$1","Tooltip_pick","Tooltip_BaseTooltip$002EBaseTooltipOptional","ref","Fable_Helpers_React_Props$002EProp","BaseTooltip$$$reference","Props$002EProp$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","BaseTooltip$$$orientation","refCallBack","this$$$3","hover","OptionExtension_map2","tooltip$$2","this$$$10","targetElement$$1","tooltipElement$$1","orientation$$2","targetBoundaries","BoundingRectModule$$$OfClientRectType","tooltipBoundaries","target$$6","tooltip$$8","this$$$9","target$$4","tooltip$$6","verticalCenter$$1","Top","Height","Left","Width","padding","Hover$002EHoverClass$$rightPosition","target$$7","tooltip$$9","this$$$6","target$$1","tooltip$$3","horizontalCenter","Bottom","Hover$002EHoverClass$$bottomPosition","target$$8","tooltip$$10","this$$$8","target$$3","tooltip$$5","verticalCenter","Hover$002EHoverClass$$leftPosition","target$$5","tooltip$$7","this$$$7","tooltip$$4","horizontalCenter$$1","Hover$002EHoverClass$$topPosition","Hover$002EHoverClass$$calculatePosition","Orientation","targetElement","tooltipElement","this$$$4","Style","ref$$1","this$$$11","ref$$3","Hover$002EHoverClass$$setTooltipRef$$48950228","BaseTooltip$002EBaseTooltipOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","this$$$13","Hover$002EHoverClass$$hoverClassName$$69FC403F","Hover","HTMLProps","tooltip_0$$1","tooltip_1$$1","tooltip_2","tooltip$$11","content","tooltipOrientation","props$$1","Tooltip_TooltipOptional","Tooltip_orientation","Tooltip_Hover$002EHoverClass","Hover$002EProps","Hover$002EHoverClass$$updatePosition$$69FC403F","Tooltip_Hover$002EHover","this$$$5","ref$$2","this$$$12","ref$$4","Hover$002EHoverClass$$setTargetRef$$48950228","onMouseEnter","event","Hover$002EHoverClass$$onMouseEnter$$3CC58196","onMouseLeave","arg00$$1","this$$$2","event$$1","Hover$002EHoverClass$$onMouseLeave$$3CC58196","display","BaseTooltip$$$baseTooltip","Hover$002EHoverClass$$basetooltipProps","TooltipContent","tooltipExample","orientation","tooltipText","buttonText","Tooltip_tooltip","TooltipOptional$$$Fable$002EHelpers$002EReact$002EProps$002EIHTMLProp","Tooltip_TooltipContent","Tooltip_TooltipChildren","Tooltip_Orientation","tryMount","fabulous","def","primary","Button_link","small","medium","large","success","Button_error","squared","Button_round","disabled","active","loading","paramTable","Form_select","$type$$3","$type$$2","$type$$1","Form_textarea","Form_radio","Form_checkbox","Form_switch$","sizes","Form_validation","$type$$6","$type$$5","$type$$7","inputGroup","$type$$11","$type$$10","$type$$8","$type$$9","Accordion_def","custom","Avatar_def","Avatar_source","extraSmall","Avatar_small","Avatar_medium","Avatar_large","extraLarge","Avatar_presence","Badge_div","span","Badge_button","Badge_avatar","imageContainer","contain","cover","videoDemo","youtube","Grid_def","gapless","oneline","Grid_small","Grid_Kind","Icon_def","x4","Navbar_def","hideSmall","showLarge","Table_def","striped","Table_hover","Bar_def","Pages_Bar_small","Bar_tooltip","multiple","Bar_Color","colorDemo","roundedDemo","Card_demo","Chip_def","removable","Pages_Chip_avatar","Empty_def","Menu_def","Breadcrumbs_element","Nav_def","Modal_demo","Modal_HeaderChildren","Modal_FooterChildren","Pagination_def","Pagination_OnPageChanged","Pagination_PaginationItemOptional","Pagenav_def","Panel_def","Panel_PanelNavChild","Popover_def","Step_def","Tab_def","Tab_TabOptional","Tile_def","Tile_compact","Toast_demo","defaultView","primaryView","Tooltip_demo"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,aAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,MAAA,QAEAU,+hBCtJM0C,EAAa,2CACbC,EAAgB,QAChBC,EAAgB,SAChBC,EAAiB,SAChB,SAASC,EAAQtC,EAAGuC,GACvB,IAAMC,EAAMN,EAAWO,KAAKzC,GAC5B,GAAW,MAAPwC,EAAa,CACb,GAAa,MAATD,EACA,OAAQC,EAAI,IACR,IAAK,KACDD,EAAQ,EACR,MACJ,IAAK,KACDA,EAAQ,EACR,MACJ,IAAK,KACDA,EAAQ,GACR,MACJ,QACIA,EAAQ,GAIpB,OAAQA,GACJ,KAAK,EACD,OAAOJ,EAAcO,KAAKF,EAAI,IAAM,MAAQA,EAAK,GACrD,KAAK,EACD,OAAOJ,EAAcM,KAAKF,EAAI,IAAM,MAAQA,EAAK,GACrD,KAAK,GACD,OAAOH,EAAeK,KAAKF,EAAI,IAAM,MAAQA,EAAK,IACtD,KAAK,GACD,OAAQA,EAAK,IACjB,QACI,MAAM,IAAIG,MAAM,kBAG5B,OAAO,KAGJ,SAASC,EAAS5C,EAAGuC,EAAOM,GAC/B,IAAMC,EAAIR,EAAQtC,EAAGuC,GACrB,GAAU,OAANO,EAAY,KAAAC,EAAAC,EAC2BF,EAD3B,GAAAG,EAAAD,EAAAD,EAAA,MACFG,EADED,EAAA,GACQE,EADRF,EAAA,GACiBG,EADjBL,EAAA,GAENM,EAAIC,UAAUJ,GAAU,IAAMC,EAAQC,GAC5C,IAAKG,OAAOC,MAAMH,GACd,QAAQ,EAAMA,GAGtB,QAAQ,EAAOR,GCxCnB,IAAIY,EAAO,KACX,IACIA,EAAO,IAAIC,YAAYC,SAAS,IAAID,YAAYE,OAAO,IAAIC,YACvD,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,UACrnC1D,QAEb,MAAO2D,IAaQ,SAASC,EAAKC,EAAKC,EAAMC,GAKpCC,KAAKH,IAAY,EAANA,EAKXG,KAAKF,KAAc,EAAPA,EAKZE,KAAKD,WAAaA,EAEtBH,EAAK/E,UAAUoF,YAAc,WACzB,OAAOC,IAAkBF,KAAKD,SAAW,EAAI,EAAGC,KAAKF,KAAME,KAAKH,OAEpED,EAAK/E,UAAUsF,OAAS,SAAUC,GAAK,OAAOC,EAAOL,KAAMI,IAC3DR,EAAK/E,UAAUyF,UAAY,SAAUF,GAAK,OAAOG,EAAQP,KAAMI,IAC/DR,EAAK/E,UAAU2F,SAAW,SAAUpC,GAAS,OAAOqC,EAAST,KAAM5B,IACnEwB,EAAK/E,UAAU6F,OAAS,WAAc,OAAOD,EAAST,OA2CtD,SAASW,EAAOC,GACZ,OAAsC,KAA9BA,GAAOA,EAAA,YATnBhB,EAAK/E,UAAUgG,WACfjG,OAAO6B,eAAemD,EAAK/E,UAAW,cAAgBkC,OAAO,IAe7D,IAAI+D,KAMAC,KAOG,SAASC,EAAQjE,EAAOgD,GAC3B,IAAIa,EAAKK,EAAWC,EACpB,OAAInB,GAEImB,EAAS,IADbnE,KAAW,IACgBA,EAAQ,OAC/BkE,EAAYF,EAAWhE,IAEZkE,GAEfL,EAAMO,EAASpE,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5CmE,IACAH,EAAWhE,GAAS6D,GACjBA,IAIHM,GAAU,MADdnE,GAAS,IACqBA,EAAQ,OAClCkE,EAAYH,EAAU/D,IAEXkE,GAEfL,EAAMO,EAASpE,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtCmE,IACAJ,EAAU/D,GAAS6D,GAChBA,GASR,SAASQ,EAAWrE,EAAOgD,GAC9B,GAAIV,MAAMtC,GACN,OAAOgD,EAAWsB,EAAQC,EAC9B,GAAIvB,EAAU,CACV,GAAIhD,EAAQ,EACR,OAAOsE,EACX,GAAItE,GAASwE,EACT,OAAOC,MAEV,CACD,GAAIzE,IAAU0E,EACV,OAAOC,EACX,GAAI3E,EAAQ,GAAK0E,EACb,OAAOE,EAEf,OAAI5E,EAAQ,EACD6E,EAAiBR,GAAYrE,EAAOgD,IACxCoB,EAAUpE,EAAQ8E,EAAkB,EAAI9E,EAAQ8E,EAAkB,EAAG9B,GASzE,SAASoB,EAASW,EAASC,EAAUhC,GACxC,OAAO,IAAIH,EAAKkC,EAASC,EAAUhC,GASvC,IAAIiC,EAAUC,KAAKC,IAQZ,SAASC,EAAWC,EAAKrC,EAAU3B,GACtC,GAA4B,OAAxBD,EAAQiE,EAAKhE,GACb,MAAM,IAAII,MAAM,6CAEpB,GAAmB,IAAf4D,EAAI3H,OACJ,MAAM+D,MAAM,gBAChB,GAAY,QAAR4D,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAOd,EAUX,GATwB,iBAAbvB,GAEP3B,EAAQ2B,EACJA,GAAW,GAGfA,IAAaA,GAEjB3B,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMiE,WAAW,SACrB,IAAI3E,EACJ,IAAKA,EAAI0E,EAAIE,QAAQ,MAAQ,EACzB,MAAM9D,MAAM,mBACX,GAAU,IAANd,EACL,OAAOkE,EAAiBO,EAAWC,EAAIG,UAAU,GAAIxC,EAAU3B,IAMnE,IAFA,IAAIoE,EAAepB,EAAWY,EAAQ5D,EAAO,IACzC9C,EAASgG,EACJ/G,EAAI,EAAGA,EAAI6H,EAAI3H,OAAQF,GAAK,EAAG,CACpC,IAAIkI,EAAOR,KAAKS,IAAI,EAAGN,EAAI3H,OAASF,GAAIwC,EAAQoC,SAASiD,EAAIG,UAAUhI,EAAGA,EAAIkI,GAAOrE,GACrF,GAAIqE,EAAO,EAEPnH,EAASqH,EAAYC,EAAYtH,EADrB8F,EAAWY,EAAQ5D,EAAOqE,KACWrB,EAAWrE,SAI5DzB,EAASqH,EADTrH,EAASsH,EAAYtH,EAAQkH,GACApB,EAAWrE,IAIhD,OADAzB,EAAOyE,SAAWA,EACXzE,EAqBJ,SAASuH,EAAUC,EAAK/C,GAC3B,MAAmB,iBAAR+C,EACA1B,EAAW0B,EAAK/C,GACR,iBAAR+C,EACAX,EAAWW,EAAK/C,GAEpBoB,EAAS2B,EAAIjD,IAAKiD,EAAIhD,KAA0B,kBAAbC,EAAyBA,EAAW+C,EAAI/C,UAStF,IAYI8B,EAAiBkB,WAMjBxB,EAAiBM,EAAiBA,EAMlCJ,EAAiBF,EAAiB,EAMlCyB,EAAahC,EAxBI,GAAK,IA6BfM,EAAON,EAAQ,GAKfK,EAAQL,EAAQ,GAAG,GAKnBiC,EAAMjC,EAAQ,GAKdkC,EAAOlC,EAAQ,GAAG,GAKlBmC,EAAUnC,GAAS,GAKnBW,EAAYR,GAAS,EAAgB,YAAgB,GAKrDK,EAAqBL,GAAS,GAAgB,GAAgB,GAK9DO,EAAYP,EAAS,GAAG,YAAgB,GAK5C,SAASiC,EAAMC,GAClB,OAAOA,EAAMtD,SAAWsD,EAAMxD,MAAQ,EAAIwD,EAAMxD,IAO7C,SAASyD,EAASD,GACrB,OAAIA,EAAMtD,UACGsD,EAAMvD,OAAS,GAAK+B,GAAmBwB,EAAMxD,MAAQ,GAC3DwD,EAAMvD,KAAO+B,GAAkBwB,EAAMxD,MAAQ,GAUjD,SAASY,EAAS4C,EAAOjF,GAE5B,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMiE,WAAW,SACrB,GAAIkB,EAAOF,GACP,MAAO,IACX,GAAIG,EAAWH,GAAQ,CACnB,GAAIhD,EAAOgD,EAAO3B,GAAY,CAG1B,IAAI+B,EAAYrC,EAAWhD,GAAQsF,EAAMC,EAAYN,EAAOI,GAAYG,EAAOC,EAAejB,EAAYc,EAAKD,GAAYJ,GAC3H,OAAO5C,EAASiD,EAAKtF,GAASgF,EAAMQ,GAAMpD,SAASpC,GAGnD,MAAO,IAAMqC,EAASmB,EAAiByB,GAAQjF,GAMvD,IAFA,IAAIoE,EAAepB,EAAWY,EAAQ5D,EAAO,GAAIiF,EAAMtD,UAAW+D,EAAMT,EACpE/H,EAAS,KACA,CACT,IAAIyI,EAASJ,EAAYG,EAAKtB,GAA6FxD,GAArEoE,EAAMS,EAAeC,EAAKlB,EAAYmB,EAAQvB,OAAoB,GAAmBhC,SAASpC,GAEpJ,GAAImF,EADJO,EAAMC,GAEF,OAAO/E,EAAS1D,EAEhB,KAAO0D,EAAOvE,OAAS,GACnBuE,EAAS,IAAMA,EACnB1D,EAAS,GAAK0D,EAAS1D,GAuD5B,SAASiI,EAAOF,GACnB,OAAsB,IAAfA,EAAMvD,MAA4B,IAAduD,EAAMxD,IAO9B,SAAS2D,EAAWH,GACvB,OAAQA,EAAMtD,UAAYsD,EAAMvD,KAAO,EAepC,SAASkE,EAAMX,GAClB,OAA2B,IAAP,EAAZA,EAAMxD,KAgBX,SAASQ,EAAOgD,EAAOY,GAG1B,OAFKtD,EAAOsD,KACRA,EAAQpB,EAAUoB,KAClBZ,EAAMtD,WAAakE,EAAMlE,UAAasD,EAAMvD,OAAS,IAAQ,GAAMmE,EAAMnE,OAAS,IAAQ,KAEvFuD,EAAMvD,OAASmE,EAAMnE,MAAQuD,EAAMxD,MAAQoE,EAAMpE,KAiBrD,SAASqE,EAASb,EAAOY,GAC5B,OAAO1D,EAAQ8C,EAAuBY,GAAS,EAiB5C,SAASE,EAAYd,EAAOY,GAC/B,OAAO1D,EAAQ8C,EAAuBY,GAAS,EAQ5C,SAASG,EAAmBf,EAAOY,GACtC,OAAO1D,EAAQ8C,EAAuBY,IAAU,EAS7C,SAAS1D,EAAQ8C,EAAOY,GAG3B,GAFKtD,EAAOsD,KACRA,EAAQpB,EAAUoB,IAClB5D,EAAOgD,EAAOY,GACd,OAAO,EACX,IAAII,EAAUb,EAAWH,GAAQiB,EAAWd,EAAWS,GACvD,OAAII,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENjB,EAAMtD,SAGHkE,EAAMnE,OAAS,EAAMuD,EAAMvD,OAAS,GAAOmE,EAAMnE,OAASuD,EAAMvD,MAASmE,EAAMpE,MAAQ,EAAMwD,EAAMxD,MAAQ,GAAO,EAAI,EAFnH2D,EAAWK,EAAeR,EAAOY,KAAW,EAAI,EAkBxD,SAASrC,EAAiByB,GAC7B,OAAKA,EAAMtD,UAAYM,EAAOgD,EAAO3B,GAC1BA,EACJiB,EAAY4B,EAAclB,GAAQJ,GAQtC,SAASN,EAAYU,EAAOmB,GAC1B7D,EAAO6D,KACRA,EAAS3B,EAAU2B,IAEvB,IAAIC,EAAMpB,EAAMvD,OAAS,GACrB4E,EAAmB,MAAbrB,EAAMvD,KACZ6E,EAAMtB,EAAMxD,MAAQ,GACpB+E,EAAkB,MAAZvB,EAAMxD,IACZgF,EAAML,EAAO1E,OAAS,GACtBgF,EAAoB,MAAdN,EAAO1E,KACbiF,EAAMP,EAAO3E,MAAQ,GAErBmF,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAFgB,MAAbJ,EAAO3E,QAGF,GAGfoF,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAEN1D,GANP+D,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C5B,EAAMtD,UAQzD,SAAS8D,EAAeR,EAAO+B,GAGlC,OAFKzE,EAAOyE,KACRA,EAAavC,EAAUuC,IACpBzC,EAAYU,EAAOzB,EAAiBwD,IAQxC,SAASxC,EAAYS,EAAOgC,GAC/B,GAAI9B,EAAOF,GACP,OAAOA,EAAMtD,SAAWsB,EAAQC,EAIpC,GAHKX,EAAO0E,KACRA,EAAaxC,EAAUwC,IAEvB/F,EAEA,OAAO6B,EADG7B,EAAKgG,IAAIjC,EAAMxD,IAAKwD,EAAMvD,KAAMuF,EAAWxF,IAAKwF,EAAWvF,MAChDR,EAAKiG,WAAYlC,EAAMtD,UAEhD,GAAIwD,EAAO8B,GACP,OAAOhC,EAAMtD,SAAWsB,EAAQC,EACpC,GAAIjB,EAAOgD,EAAO3B,GACd,OAAOsC,EAAMqB,GAAc3D,EAAYJ,EAC3C,GAAIjB,EAAOgF,EAAY3D,GACnB,OAAOsC,EAAMX,GAAS3B,EAAYJ,EACtC,GAAIkC,EAAWH,GACX,OAAIG,EAAW6B,GACJzC,EAAYhB,EAAiByB,GAAQzB,EAAiByD,IAEtDzD,EAAiBgB,EAAYhB,EAAiByB,GAAQgC,IAEhE,GAAI7B,EAAW6B,GAChB,OAAOzD,EAAiBgB,EAAYS,EAAOzB,EAAiByD,KAEhE,GAAInB,EAASb,EAAOL,IAAekB,EAASmB,EAAYrC,GACpD,OAAO5B,EAAWkC,EAASD,GAASC,EAAS+B,GAAahC,EAAMtD,UAGpE,IAAI0E,EAAMpB,EAAMvD,OAAS,GACrB4E,EAAmB,MAAbrB,EAAMvD,KACZ6E,EAAMtB,EAAMxD,MAAQ,GACpB+E,EAAkB,MAAZvB,EAAMxD,IACZgF,EAAMQ,EAAWvF,OAAS,GAC1BgF,EAAwB,MAAlBO,EAAWvF,KACjBiF,EAAMM,EAAWxF,MAAQ,GACzB2F,EAAuB,MAAjBH,EAAWxF,IACjBmF,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMY,KACE,GAGfP,IADAC,GAAOP,EAAMa,KACE,GACfN,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMc,KACE,GACfP,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMe,EAAMd,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1C1D,GAZP+D,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C5B,EAAMtD,UASzD,SAAS4D,EAAYN,EAAOoC,GAG/B,GAFK9E,EAAO8E,KACRA,EAAU5C,EAAU4C,IACpBlC,EAAOkC,GACP,MAAMjH,MAAM,oBAYZ,IAKAkH,EAAQ5B,EAAKzF,EAfjB,GAAIiB,EAIA,OAAK+D,EAAMtD,WACS,aAAhBsD,EAAMvD,OACW,IAAjB2F,EAAQ5F,MAAgC,IAAlB4F,EAAQ3F,KAK3BqB,GADIkC,EAAMtD,SAAWT,EAAKqG,MAAQrG,EAAKsG,OAAOvC,EAAMxD,IAAKwD,EAAMvD,KAAM2F,EAAQ5F,IAAK4F,EAAQ3F,MAC5ER,EAAKiG,WAAYlC,EAAMtD,UAHjCsD,EAKf,GAAIE,EAAOF,GACP,OAAOA,EAAMtD,SAAWsB,EAAQC,EAEpC,GAAK+B,EAAMtD,SAiCN,CAKD,GAFK0F,EAAQ1F,WACT0F,EAqKL,SAAoBpC,GACvB,OAAIA,EAAMtD,SACCsD,EACJlC,EAASkC,EAAMxD,IAAKwD,EAAMvD,MAAM,GAxKrB+F,CAAWJ,IACrBtB,EAAYsB,EAASpC,GACrB,OAAOhC,EACX,GAAI8C,EAAYsB,EAiIjB,SAA+BpC,EAAOyC,GACrCnF,EAAOmF,KACPA,EAAU1C,EAAM0C,IAEpB,GAAgB,IADhBA,GAAW,IAEP,OAAOzC,EAEP,IAAIvD,EAAOuD,EAAMvD,KACjB,GAAIgG,EAAU,GAAI,CACd,IAAIjG,EAAMwD,EAAMxD,IAChB,OAAOsB,EAAUtB,IAAQiG,EAAYhG,GAAS,GAAKgG,EAAWhG,IAASgG,EAASzC,EAAMtD,UAErF,OACMoB,EADU,KAAZ2E,EACWhG,EAEAA,IAAUgG,EAAU,GAFd,EAAGzC,EAAMtD,UA9IVgG,CAAsB1C,EAAO,IAClD,OAAOH,EACX7E,EAAMgD,MA1CW,CAGjB,GAAIhB,EAAOgD,EAAO3B,GACd,OAAIrB,EAAOoF,EAASxC,IAAQ5C,EAAOoF,EAAStC,GACjCzB,EACFrB,EAAOoF,EAAS/D,GACduB,EAKH5C,EADJqF,EAASM,EAAarC,EADPsC,EAAc5C,EAAO,GACQoC,GAAU,GACnCnE,GACRkC,EAAWiC,GAAWxC,EAAME,EAInC9E,EAAMsE,EAAY+C,EAAQ/B,EAD1BG,EAAMD,EAAeR,EAAOT,EAAY6C,EAASC,IACND,SAKlD,GAAIpF,EAAOoF,EAAS/D,GACrB,OAAO2B,EAAMtD,SAAWsB,EAAQC,EACpC,GAAIkC,EAAWH,GACX,OAAIG,EAAWiC,GACJ9B,EAAY/B,EAAiByB,GAAQzB,EAAiB6D,IAC1D7D,EAAiB+B,EAAY/B,EAAiByB,GAAQoC,IAE5D,GAAIjC,EAAWiC,GAChB,OAAO7D,EAAiB+B,EAAYN,EAAOzB,EAAiB6D,KAChEpH,EAAMiD,EAmBV,IADAwC,EAAMT,EACCe,EAAmBN,EAAK2B,IAAU,CAGrCC,EAASzD,KAAKiE,IAAI,EAAGjE,KAAKkE,MAAM7C,EAASQ,GAAOR,EAASmC,KAOzD,IAJA,IAAIW,EAAOnE,KAAKoE,KAAKpE,KAAKqE,IAAIZ,GAAUzD,KAAKsE,KAAMC,EAASJ,GAAQ,GAAM,EAAIpE,EAAQ,EAAGoE,EAAO,IAGhGK,EAAYrF,EAAWsE,GAASgB,EAAY9D,EAAY6D,EAAWhB,GAC5DjC,EAAWkD,IAAcvC,EAAYuC,EAAW5C,IAGnD4C,EAAY9D,EADZ6D,EAAYrF,EADZsE,GAAUc,EACqBnD,EAAMtD,UACF0F,GAInClC,EAAOkD,KACPA,EAAYxD,GAChB5E,EAAMsE,EAAYtE,EAAKoI,GACvB3C,EAAMD,EAAeC,EAAK4C,GAE9B,OAAOrI,EAuBJ,SAASkG,EAAclB,GAC1B,OAAOlC,GAAUkC,EAAMxD,KAAMwD,EAAMvD,KAAMuD,EAAMtD,UAyC5C,SAASiG,EAAa3C,EAAOyC,GAGhC,OAFInF,EAAOmF,KACPA,EAAU1C,EAAM0C,IACI,IAAnBA,GAAW,IACLzC,EACFyC,EAAU,GACR3E,EAASkC,EAAMxD,KAAOiG,EAAUzC,EAAMvD,MAAQgG,EAAYzC,EAAMxD,MAAS,GAAKiG,EAAWzC,EAAMtD,UAE/FoB,EAAS,EAAGkC,EAAMxD,KAAQiG,EAAU,GAAKzC,EAAMtD,UAQvD,SAASkG,EAAc5C,EAAOyC,GAGjC,OAFInF,EAAOmF,KACPA,EAAU1C,EAAM0C,IACI,IAAnBA,GAAW,IACLzC,EACFyC,EAAU,GACR3E,EAAUkC,EAAMxD,MAAQiG,EAAYzC,EAAMvD,MAAS,GAAKgG,EAAWzC,EAAMvD,MAAQgG,EAASzC,EAAMtD,UAEhGoB,EAASkC,EAAMvD,MAASgG,EAAU,GAAKzC,EAAMvD,MAAQ,EAAI,GAAK,EAAGuD,EAAMtD,UAmG/E,SAAS4G,EAAUC,EAAO7G,EAAU8G,GACvC,OAAOA,EASJ,SAAqBD,EAAO7G,GAC/B,OAAO,IAAIH,EAAKgH,EAAM,GAClBA,EAAM,IAAM,EACZA,EAAM,IAAM,GACZA,EAAM,IAAM,GAAIA,EAAM,GACtBA,EAAM,IAAM,EACZA,EAAM,IAAM,GACZA,EAAM,IAAM,GAAI7G,GAhBR+G,CAAYF,EAAO7G,GAyB5B,SAAqB6G,EAAO7G,GAC/B,OAAO,IAAIH,EAAKgH,EAAM,IAAM,GACxBA,EAAM,IAAM,GACZA,EAAM,IAAM,EACZA,EAAM,GAAIA,EAAM,IAAM,GACtBA,EAAM,IAAM,GACZA,EAAM,IAAM,EACZA,EAAM,GAAI7G,GAhC6BgH,CAAYH,EAAO7G,GC18B3D,SAASiH,EAAazM,EAAGE,GAE5B,IADA,IAAI2H,EAAM7H,EAAEiG,SAAS,IACd4B,EAAI3H,OAASA,GAChB2H,EAAM,IAAMA,EAEhB,OAAOA,EAEJ,SAAS6E,GAAeC,GAC3B,IAAMC,EAAUD,EAAS,EAGnBE,GAFNF,EAASjF,KAAKoF,IAAIH,IAEQ,KAAW,IACrC,OAAQC,EAAU,IAAM,KACpBH,KAHaE,EAAS,MAGF,GAAK,IACzBF,EAAaI,EAAS,GAEvB,SAASE,GAAgBC,EAAMC,GAClC,IAAMpF,EAAMmF,EAAKE,cACjB,MAAgB,UAATD,EACDpF,EAAIG,UAAU,EAAGH,EAAIE,QAAQ,MAC7BF,EAAIG,UAAUH,EAAIE,QAAQ,KAAO,EAAGF,EAAI3H,OAAS,GAuB3D,SAASiN,GAAyBH,EAAMI,EAAQC,GAC5C,OAAOD,EAAOE,QAAQ,WAAY,SAACC,GAC/B,IAAIC,EAAMD,EACV,OAAQA,EAAMvF,UAAU,EAAG,IACvB,IAAK,IACD,IAAMyF,EAAIJ,EAAML,EAAKU,iBAAmBV,EAAKW,cAC7CH,EAAMD,EAAMrN,OAAS,EAAIuN,EAAI,IAAMA,EACnC,MACJ,IAAK,IACDD,GAAOH,EAAML,EAAKY,cAAgBZ,EAAKa,YAAc,EACrD,MACJ,IAAK,IACDL,EAAMH,EAAML,EAAKc,aAAed,EAAKe,UACrC,MACJ,IAAK,IACDP,EAAMH,EAAML,EAAKgB,cAAgBhB,EAAKiB,WACtC,MACJ,IAAK,IACD,IAAMC,EAAIb,EAAML,EAAKgB,cAAgBhB,EAAKiB,WAC1CT,EAAMU,EAAI,GAAKA,EAAI,GAAKA,EACxB,MACJ,IAAK,IACDV,EAAMH,EAAML,EAAKmB,gBAAkBnB,EAAKoB,aACxC,MACJ,IAAK,IACDZ,EAAMH,EAAML,EAAKqB,gBAAkBrB,EAAKsB,aAMhD,OAHId,IAAQD,GAASC,EAAM,IAAMD,EAAMrN,OAAS,IAC5CsN,EAAM,IAAMA,GAETA,IAGR,SAASe,GAAmBvB,EAAMI,GACrC,IAAMtL,EAAI,IAAI0M,KAAKxB,EAAKyB,UAAYzB,EAAKL,QACzC,GAAsB,iBAAXS,EACP,OAAOtL,EAAEoL,cAAcI,QAAQ,QAAS,IAAIA,QAAQ,eAAgB,KAAOZ,GAAeM,EAAKL,QAE9F,GAAsB,IAAlBS,EAAOlN,OAYZ,OAAOiN,GAAyBrL,EAAGsL,GAAQ,GAX3C,OAAQA,GACJ,IAAK,IACL,IAAK,IAAK,OAAOL,GAAgBjL,EAAG,SACpC,IAAK,IACL,IAAK,IAAK,OAAOiL,GAAgBjL,EAAG,UACpC,IAAK,IACL,IAAK,IAAK,OAlDtB,SAA+B4M,EAAgB/B,GAC3C,IAAM9E,EAAM6G,EAAexB,cAC3B,OAAOrF,EAAIG,UAAU,EAAGH,EAAI3H,OAAS,GAAKwM,GAAeC,GAgDhCgC,CAAsB7M,EAAGkL,EAAKL,QAC/C,QAAS,MAAM,IAAI1I,MAAM,mCAO9B,SAAS2K,GAAiB5B,EAAMI,GACnC,IAAMC,EAAoB,IAAdL,EAAK6B,KACjB,GAAsB,iBAAXzB,EACP,OAAOC,EAAML,EAAK8B,cAAgB9B,EAAK+B,iBAEtC,GAAsB,IAAlB3B,EAAOlN,OAgBZ,OAAOiN,GAAyBH,EAAMI,EAAQC,GAf9C,OAAQD,GACJ,IAAK,IACL,IAAK,IACD,OAAOC,EAAMN,GAAgBC,EAAM,SAAWA,EAAKgC,qBACvD,IAAK,IACL,IAAK,IACD,OAAO3B,EAAMN,GAAgBC,EAAM,UAAYA,EAAKiC,qBACxD,IAAK,IACL,IAAK,IACD,OA1FhB,SAAqBnN,EAAGuL,GACpB,GAAIA,EACA,OAAOvL,EAAEoL,cAIT,IAAMgC,EAAwB,MAAVpN,EAAE+M,MAAiC,IAAX/M,EAAE+M,KAC9C,OAAOpC,EAAa3K,EAAE6L,cAAe,GAAK,IACtClB,EAAa3K,EAAE+L,WAAa,EAAG,GAAK,IACpCpB,EAAa3K,EAAEiM,UAAW,GAAK,IAC/BtB,EAAa3K,EAAEmM,WAAY,GAAK,IAChCxB,EAAa3K,EAAEsM,aAAc,GAAK,IAClC3B,EAAa3K,EAAEwM,aAAc,GAAK,IAClC7B,EAAa3K,EAAEqN,kBAAmB,IACjCD,EAAcxC,IAAwC,IAAzB5K,EAAEsN,qBAAgC,IA4ErDlC,CAAYF,EAAMK,GAC7B,QACI,MAAM,IAAIpJ,MAAM,mCAOzB,SAASoL,GAASrC,EAAMI,GAC3B,OAAsB,MAAfJ,EAAKL,OACN4B,GAAmBvB,EAAMI,GACzBwB,GAAiB5B,EAAMI,GA4G1B,SAAST,GAAOK,GACnB,IAAMsC,EAAQtC,EACd,MAA+B,iBAAjBsC,EAAM3C,OACd2C,EAAM3C,OACS,IAAdK,EAAK6B,KACF,GAAgC,IAA5B7B,EAAKoC,oBAgJhB,SAASG,GAAQ1J,EAAG4H,GACvB,IAAI+B,SACAC,SAUJ,MARI,WAAY5J,GAAK,WAAY4H,GAC7B+B,EAAQ3J,EAAE4I,UACVgB,EAAQhC,EAAEgB,YAGVe,EAAQ3J,EAAE4I,UAAY9B,GAAO9G,GAC7B4J,EAAQhC,EAAEgB,UAAY9B,GAAOc,IAE1B+B,IAAUC,EAAQ,EAAKD,EAAQC,GAAS,EAAI,wiBClZhD,IAAMC,GAAWpN,OAAO,QAExB,SAASqN,GAAmBtJ,EAAKuJ,GACpC,OAAOvJ,aAAeuJ,GAAQvJ,EAAIqJ,cAAqBE,EAEpD,SAASC,GAASxJ,GACrB,OAAwB,MAAjBA,EAAIqJ,IAAoBrJ,EAAIqJ,IAAYrJ,EAI5C,SAASyJ,GAAOC,GAAoB,QAAAC,EAAAC,UAAA/P,OAATgQ,EAASC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAATF,EAASE,EAAA,GAAAH,UAAAG,GAAA,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACvC,QAAAC,EAAAC,EAAqBR,EAArB5N,OAAAqO,cAAAN,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,EAA8B,KAAnBS,EAAmBL,EAAAjO,MAAAuO,GAAA,EAAAC,GAAA,EAAAC,OAAAT,EAAA,IAC1B,QAAAU,EAAAC,EAAkB9Q,OAAO+Q,KAAKN,GAA9BxO,OAAAqO,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAAuC,KAA5BjO,EAA4BoO,EAAA1O,MACnCnC,OAAO6B,eAAe6N,EAAQjN,EAAKzC,OAAOgR,yBAAyBP,EAAQhO,KAFrD,MAAAwO,GAAAN,GAAA,EAAAC,EAAAK,EAAA,aAAAP,GAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,KADS,MAAAK,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,aAAAjB,GAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAMvC,OAAOR,GA+DX,WACI,SAAAyB,EAAYC,GAASC,GAAAjM,KAAA+L,GACjB/L,KAAKgM,QAAUA,EACfhM,KAAKkM,gBAAiB,EAH9BC,GAAAJ,IAAA1O,IAAA,QAAAV,IAAA,WAUQ,OAJKqD,KAAKkM,iBACNlM,KAAKoM,aAAepM,KAAKgM,UACzBhM,KAAKkM,gBAAiB,GAEnBlM,KAAKoM,gBAVpB/O,IAAA,iBAAAV,IAAA,WAaQ,OAAOqD,KAAKkM,mBAbpB,GAuBO,SAASG,GAAc9R,EAAG6D,GAE7B,OADA7D,EAAIA,EAAI,GAAc,MAAT6D,GAA2B,KAAVA,EAAe,WAAa7D,EAAI,EAAIA,GACzDiG,SAASpC,GAEf,SAASkO,GAAS1L,GAA2B,IAAtB2L,EAAsB/B,UAAA/P,OAAA,QAAAsQ,IAAAP,UAAA,IAAAA,UAAA,GAChD,GAAW,MAAP5J,EACA,OAAO4L,OAAO5L,GAElB,gBAAeA,EAAf,YAAA6L,GAAe7L,IACX,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,YACD,OAAO4L,OAAO5L,GAClB,IAAK,SACD,OAAO2L,EAAeG,KAAKC,UAAU/L,GAAOA,EAChD,IAAK,WACD,OAAOA,EAAItE,KACf,IAAK,SAKD,IA0GL,SAAuB8D,GAC1B,OAAY,MAALA,GAAaxF,OAAOgS,eAAexM,GAAGyM,cAAgBjS,OA3GjDkS,CAAclM,KAAQ8J,MAAMqC,QAAQnM,GAoBpC,OAAOA,aAAemI,KAAOa,GAAahJ,GAAO4L,OAAO5L,GAnBxD,IACI,OAAO8L,KAAKC,UAAU/L,EAAK,SAACoM,EAAG9N,GAC3B,GAAS,MAALA,EAAW,CACX,GAAIA,aAAa6J,KACb,OAAOa,GAAa1K,GAEnB,GAgG1B,SAAoBkB,GACvB,OAAY,MAALA,GAA2C,mBAAvBA,EAAEvD,OAAOqO,UAjGH+B,CAAW/N,KAAOwL,MAAMqC,QAAQ7N,IAAmB,iBAANA,EAClD,OAAOwL,MAAMwC,KAAKhO,GAG1B,OAAOsN,OAAOtN,KAGtB,MAAO2M,GAEH,MAAO,IAAMjR,OAAO+Q,KAAK/K,GAAKuM,IAAI,SAACH,GAAD,OAAOA,EAAI,KAAOR,OAAO5L,EAAIoM,MAAKI,KAAK,MAAQ,MAQrG,IAAaC,GAAb,oBAAAA,IAAApB,GAAAjM,KAAAqN,GAAA,OAAAlB,GAAAkB,EAAA,OAAAhQ,IAAA,KAAAN,MAAA,SACcP,GAIN,OAHK6Q,EAAUC,MAAMC,IAAI/Q,IACrB6Q,EAAUC,MAAME,IAAIhR,IAAK6Q,EAAUI,OAEhCJ,EAAUC,MAAM3Q,IAAIH,OALnC6Q,EAAA,GAUO,SAASK,GAAW7R,GAIvB,IAHA,IAAItB,EAAI,EACJkO,EAAI,KACFkF,EAAM9R,EAAEpB,OACPF,EAAIoT,GACPlF,EAAS,GAAJA,EAAU5M,EAAE+R,WAAWrT,KAEhC,OAAOkO,EAEJ,SAASoF,GAAWzN,GACvB,OAAW,WAAJA,EAAiB,EAGrB,SAASF,GAAiB4N,GAC7B,OAAsB,IAAlBA,EAAOrT,OACA,EAEJqT,EAAOC,OAAO,SAACC,EAAIC,GACtB,OAASD,GAAM,GAAKA,EAAMC,IAkB3B,SAASC,GAAe9N,GAC3B,GAAS,MAALA,EACA,OAAO,EAEX,gBAAeA,EAAf,YAAAqM,GAAerM,IACX,IAAK,UACD,OAAOA,EAAI,EAAI,EACnB,IAAK,SACD,OAAOyN,GAAWzN,GACtB,IAAK,SACD,OAAOsN,GAAWtN,GACtB,QACI,GAA6B,mBAAlBA,EAAEH,YACT,OAAOG,EAAEH,cAER,GAAI8M,GAAQ3M,GAAI,CAIjB,IAHA,IAAM+N,EAAK/N,EACLuN,EAAMQ,EAAG1T,OACTqT,EAAS,IAAIpD,MAAMiD,GAChBpT,EAAI,EAAGA,EAAIoT,EAAKpT,IACrBuT,EAAOvT,GAAK2T,GAAeC,EAAG5T,IAElC,OAAO2F,GAAiB4N,GAGxB,OAAOJ,GAAWpB,GAASlM,KAKpC,SAAS2M,GAAQ3M,GACpB,OAAOsK,MAAMqC,QAAQ3M,IAAMgO,YAAYC,OAAOjO,GAQ3C,SAASkO,GAAgBlO,EAAG4H,EAAGuG,GAClC,GAAS,MAALnO,EACA,OAAY,MAAL4H,EAEX,GAAS,MAALA,EACA,OAAO,EAEX,GAAI5H,EAAE3F,SAAWuN,EAAEvN,OACf,OAAO,EAEX,IAAK,IAAIF,EAAI,EAAGA,EAAI6F,EAAE3F,OAAQF,IAC1B,IAAKgU,EAAGnO,EAAE7F,GAAIyN,EAAEzN,IACZ,OAAO,EAGf,OAAO,EAEJ,SAASiU,GAAYpO,EAAG4H,GAC3B,OAAOsG,GAAgBlO,EAAG4H,EAAGyG,IAmB1B,SAASA,GAAOrO,EAAG4H,GACtB,OAAI5H,IAAM4H,IAGI,MAAL5H,EACO,MAAL4H,EAEW,iBAAb,IAAO5H,EAAP,YAAAqM,GAAOrM,MAGa,mBAAbA,EAAED,OACPC,EAAED,OAAO6H,GAEX+E,GAAQ3M,GACN2M,GAAQ/E,IAAMwG,GAAYpO,EAAG4H,GAE/B5H,aAAa2I,OACXf,aAAae,MAA+B,IAAvBe,GAAa1J,EAAG4H,MAM7C,SAAS0G,GAAkBtO,EAAG4H,GACjC,OAAO5H,IAAM4H,EAAI,EAAK5H,EAAI4H,GAAK,EAAI,EAEhC,SAAS2G,GAAkBvO,EAAG4H,EAAG4G,GACpC,GAAS,MAALxO,EACA,OAAY,MAAL4H,EAAY,EAAI,EAE3B,GAAS,MAALA,EACA,OAAQ,EAEZ,GAAI5H,EAAE3F,SAAWuN,EAAEvN,OACf,OAAO2F,EAAE3F,OAASuN,EAAEvN,QAAU,EAAI,EAEtC,IAAK,IAAIF,EAAI,EAAGkB,EAAI,EAAGlB,EAAI6F,EAAE3F,OAAQF,IAEjC,GAAU,KADVkB,EAAImT,EAAKxO,EAAE7F,GAAIyN,EAAEzN,KAEb,OAAOkB,EAGf,OAAO,EAEJ,SAASoT,GAAczO,EAAG4H,GAC7B,OAAO2G,GAAkBvO,EAAG4H,EAAG8G,IA8B5B,SAASA,GAAQ1O,EAAG4H,GACvB,OAAI5H,IAAM4H,EACC,EAEG,MAAL5H,EACO,MAAL4H,EAAY,GAAK,EAEN,iBAAb,IAAO5H,EAAP,YAAAqM,GAAOrM,IACLA,EAAI4H,GAAK,EAAI,EAEQ,mBAAhB5H,EAAEE,UACPF,EAAEE,UAAU0H,GAEd+E,GAAQ3M,GACN2M,GAAQ/E,IAAM6G,GAAczO,EAAG4H,GAEjC5H,aAAa2I,KACXf,aAAae,MAAQe,GAAa1J,EAAG4H,GAGrC,EAjNfqF,GAAUC,MAAQ,IAAIyB,QACtB1B,GAAUI,MAAQ,EAqOlB,IAAMuB,IACFC,KAAM,EACNC,WAAY,GAEhB,SAASC,GAAW/M,EAAKgN,GACrB,OAAQA,GACJ,KAAKJ,GAAUE,WACX,OAAO9M,EAAIiN,OAAO,GAAGC,cAAgBlN,EAAItE,MAAM,GACnD,KAAKkR,GAAUC,KACf,QACI,OAAO7M,GAGZ,SAASmN,GAAUC,GAAmC,IAA3BJ,EAA2B5E,UAAA/P,OAAA,QAAAsQ,IAAAP,UAAA,GAAAA,UAAA,GAAhBwE,GAAUC,KACnD,SAASQ,EAAKC,GACV,MAAM,IAAIlR,MAAM,iCAAmC8N,GAASoD,IAEhE,IAAMlT,KAJmDmT,GAAA,EAAAC,GAAA,EAAAC,OAAA9E,EAAA,IAKzD,QAAA+E,EAAAC,EAAmBP,EAAnB3S,OAAAqO,cAAAyE,GAAAG,EAAAC,EAAA5E,QAAAC,MAAAuE,GAAA,EAA2B,KAAlBD,EAAkBI,EAAA/S,MAQvB,GAPc,MAAV2S,GACAD,EAAKC,GAGoB,mBAD7BA,EAAStF,GAASsF,IACAhP,SACdgP,EAASA,EAAOhP,UAEhBgK,MAAMqC,QAAQ2C,GACd,OAAQA,EAAOjV,QACX,KAAK,EACDgV,EAAKC,GACL,MACJ,KAAK,EACDlT,EAAE2S,GAAWO,EAAO,GAAIN,KAAa,EACrC,MACJ,KAAK,EACD,IAAMrS,EAAQ2S,EAAO,GACrBlT,EAAE2S,GAAWO,EAAO,GAAIN,IAAarS,EACrC,MACJ,QACIP,EAAE2S,GAAWO,EAAO,GAAIN,IAAaM,EAAO5R,MAAM,OAGnC,iBAAX4R,EACZlT,EAAE2S,GAAWO,EAAQN,KAAa,EAGlCK,EAAKC,IAjC4C,MAAA7D,GAAA+D,GAAA,EAAAC,EAAAhE,EAAA,aAAA8D,GAAAI,EAAAjE,QAAAiE,EAAAjE,SAAA,WAAA8D,EAAA,MAAAC,GAoCzD,OAAOrT,EAOJ,SAASwT,GAAMjT,GAAmB,IAAZiC,EAAYwL,UAAA/P,OAAA,QAAAsQ,IAAAP,UAAA,GAAAA,UAAA,GAAH,EAC5BrO,EAAI8F,KAAKC,IAAI,GAAIlD,GACjBzB,IAAMyB,EAASjC,EAAQZ,EAAIY,GAAOkT,QAAQ,GAC1C1V,EAAI0H,KAAKkE,MAAM5I,GACf2S,EAAI3S,EAAIhD,EAERqC,EAAKsT,EAAI,GADL,MACgBA,EAAI,GADpB,KACiC3V,EAAI,GAAM,EAAKA,EAAIA,EAAI,EAAK0H,KAAK+N,MAAMzS,GAClF,OAAOyB,EAASpC,EAAIT,EAAIS,4PCzb5B,IAAauT,GAAb,WACI,SAAAC,EAAYrT,gGAAOsT,CAAArQ,KAAAoQ,GACfpQ,KAAKjD,MAAQA,EAFrB,OAAAuT,GAAAF,IAAA/S,IAAA,WAAAN,MAAA,WAMQ,OAAOuP,GAAStM,KAAKjD,UAN7BM,IAAA,SAAAN,MAAA,WASQ,OAAOiD,KAAKjD,SATpBM,IAAA,cAAAN,MAAA,WAYQ,OAAOmR,GAAelO,KAAKjD,UAZnCM,IAAA,SAAAN,MAAA,SAcWkH,GACH,OAAgB,MAATA,GAEDwK,GAAOzO,KAAKjD,MAAOkH,aAAiBmM,EAAOnM,EAAMlH,MAAQkH,MAjBvE5G,IAAA,YAAAN,MAAA,SAmBckH,GACN,OAAgB,MAATA,EACD,EACA6K,GAAQ9O,KAAKjD,MAAOkH,aAAiBmM,EAAOnM,EAAMlH,MAAQkH,OAtBxEmM,EAAA,GAyBO,SAASG,GAAKnQ,GACjB,OAAY,MAALA,GAAaA,aAAa+P,GAAO,IAAIA,GAAK/P,GAAKA,EAEnD,SAASoQ,GAAMpQ,EAAGqQ,GACrB,GAAS,MAALrQ,EAAW,CACX,IAAKqQ,EACD,MAAM,IAAIjS,MAAM,uBAEpB,OAAO,KAGP,OAAO4B,aAAa+P,GAAO/P,EAAErD,MAAQqD,EAGtC,SAASsQ,GAAWC,EAAKC,EAAcV,GAC1C,OAAc,MAAPS,EAAcC,EAAqB,MAALV,EAAYA,EAAEM,GAAMG,IAAQH,GAAMG,GASrDE,GAAQ,SAAgBC,EAAKxU,EAAMyU,GACrDC,GAAMjW,KAAKiF,KAAM8Q,EAAKxU,EAAMyU,IAC7BC,IAcmBH,GAAQ,SAAgBC,EAAKxU,EAAMyU,GACrDC,GAAMjW,KAAKiF,KAAM8Q,EAAKxU,EAAMyU,IAC7BC,uXC5EH,IAAaC,GAAb,WACI,SAAAA,EAAYC,gGAAMC,CAAAnR,KAAAiR,GACdjR,KAAKkR,KAAOA,EAFpB,OAAAE,GAAAH,IAAA5T,IAAA,WAAAN,MAAA,WAKQ,IAAMsU,EAAMrR,KAAKkR,KAAK/F,OAEtB,OADAnL,KAAKsR,QAAUD,EAAItU,OACXsU,EAAIjG,QAPpB/N,IAAA,QAAAN,MAAA,WAaQ,MAAM,IAAIyB,MAAM,mCAbxBnB,IAAA,UAAAN,MAAA,eAAAM,IAAA,UAAAV,IAAA,WAUQ,OAAOqD,KAAKsR,YAVpBL,EAAA,GAmBO,SAASM,GAAc/U,GAC1B,OAAO,IAAIyU,GAAWzU,EAAEK,OAAOqO,aAE5B,SAASsG,GAAWC,GACvB,OACItG,KADG,WAEC,OAAOsG,EAAGC,YACFtG,MAAM,EAAOrO,MAAO0U,EAAGE,UACvBvG,MAAM,EAAMrO,MAAO,QA0DhC,SAAS6U,GAAOC,GACnB,OAAOC,GAAM,WACT,IAAMZ,EAAOW,EAAGhV,OAAOqO,YACnB6G,GAAWhV,MAAO,MACtB,OAAOiV,GAAO,SAACC,GAEX,IADA,IAAIC,GAAc,GACVA,GACJ,GAAiB,MAAbD,EAAmB,CACnB,IAAMZ,EAAMH,EAAK/F,OACZkG,EAAIjG,KAIL8G,GAAc,EAHdD,EAAYZ,EAAItU,MAAMF,OAAOqO,gBAMhC,CACD,IAAMmG,EAAMY,EAAU9G,OACjBkG,EAAIjG,KAKL6G,EAAY,MAJZF,GAAWhV,MAAOsU,EAAItU,OACtBmV,GAAc,GAO1B,OAAoB,MAAbD,GAA+B,MAAVF,GAAkBA,EAAOhV,MAAOkV,GAAa,MAC1E,QAuBJ,SAASH,GAAM5B,GAClB,OAAAiC,MACKtV,OAAOqO,SAAW,kBAAMgF,IAAIrT,OAAOqO,cAiHrC,SAASkH,GAAKlC,EAAGmC,EAAKR,GACzB,GAAInH,MAAMqC,QAAQ8E,IAAOzD,YAAYC,OAAOwD,GACxC,OAAOA,EAAG9D,OAAOmC,EAAGmC,GAIpB,IADA,IAAIhB,SACK9W,EAAI,EAAG2W,EAAOW,EAAGhV,OAAOqO,cAC7BmG,EAAMH,EAAK/F,QACHC,KAFmC7Q,IAK3C8X,EAAMnC,EAAEmC,EAAKhB,EAAItU,MAAOxC,GAE5B,OAAO8X,EAgGR,SAASC,GAAOT,GACnB,OAAOnH,MAAMqC,QAAQ8E,IAAOzD,YAAYC,OAAOwD,GACzCA,EAAGpX,OACH2X,GAAK,SAACC,EAAKjS,GAAN,OAAYiS,EAAM,GAAG,EAAGR,GAEhC,SAAS1E,GAAI+C,EAAG2B,GACnB,OAAOC,GAAM,kBAAME,GAAO,SAACd,GACvB,IAAMG,EAAMH,EAAK/F,OACjB,OAAQkG,EAAIjG,KAA8B,MAAtB8E,EAAEmB,EAAItU,OAAQmU,IACnCW,EAAGhV,OAAOqO,eA+SV,SAAS8G,GAAO9B,EAAGqC,GACtB,OAAAJ,MACKtV,OAAOqO,SAAW,WAGf,IAAImH,EAAME,EACV,OACIpH,KAAM,WACF,IAAM9M,EAAM6R,EAAEmC,GACd,OAAW,MAAPhU,GACAgU,EAAMhU,EAAI,IACD+M,MAAM,EAAOrO,MAAOsB,EAAI,MAE5B+M,MAAM,kDC3qBnC,IAAMoH,GAAiB,4CAmFvB,SAASC,GAAMrS,GACX,OAAIA,aAAaR,EACNa,EAAaL,EAAEL,SAAWK,EAAIuG,EL40BtC,SAAiBtD,EAAOwD,GAC3B,OAAOA,EAOJ,SAAmBxD,GACtB,IAAIqP,EAAKrP,EAAMvD,KAAM6S,EAAKtP,EAAMxD,IAChC,OACS,IAAL8S,EACAA,IAAO,EAAI,IACXA,IAAO,GAAK,IACZA,IAAO,GACF,IAALD,EACAA,IAAO,EAAI,IACXA,IAAO,GAAK,IACZA,IAAO,IAjBCE,CAAUvP,GAyBnB,SAAmBA,GACtB,IAAIqP,EAAKrP,EAAMvD,KAAM6S,EAAKtP,EAAMxD,IAChC,OACI6S,IAAO,GACPA,IAAO,GAAK,IACZA,IAAO,EAAI,IACN,IAALA,EACAC,IAAO,GACPA,IAAO,GAAK,IACZA,IAAO,EAAI,IACN,IAALA,GAnC2BE,CAAUxP,GK70BcyP,CAAY1S,IAAI,GAAO,KAGlEhB,OAAOgB,KAAO,GAAGI,SAAS,IAGnC,SAASuS,GAAOC,GACnB,OACIA,QACAC,KAkED,SAAkB7Q,GACrB,OAAO,SAAC6Q,GACJ,OAAOT,GAAejU,KAAK6D,GAdnC,SAAS8Q,EAAc9Q,EAAK6Q,GACxB,OAAO,WAAa,QAAAE,EAAA3I,UAAA/P,OAAT2Y,EAAS1I,MAAAyI,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,GAAA7I,UAAA6I,GAEhB,IAAIC,EAAUlR,EAFEkJ,GAAA,EAAAC,GAAA,EAAAC,OAAAT,EAAA,IAGhB,QAAAU,EAAAC,EAAkB0H,EAAlBvW,OAAAqO,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAAwB,KAAbqF,EAAalF,EAAA1O,MACpBuW,EAAUC,GAAWD,EAAS3C,IAJlB,MAAA9E,GAAAN,GAAA,EAAAC,EAAAK,EAAA,aAAAP,GAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,GAMhB,OAAOgH,GAAejU,KAAK+U,GACrBJ,EAAcI,EAASL,GACvBA,EAAKK,EAAQzL,QAAQ,MAAO,OAM5BqL,CAAc9Q,EAAK6Q,GACnBA,EAAK7Q,IAtELoR,CAASR,IAUhB,SAASS,GAAO9C,GACnB,OAAOA,EAAIsC,KAAK,SAAC7S,GAAD,OAAOA,IAK3B,SAASmT,GAAWG,EAAM3L,GACtB,OAAO2L,EAAK7L,QAAQ2K,GAAgB,SAACmB,EAAG5U,EAAQ6U,EAAOC,EAAKC,EAAWnM,GACnE,OAAQA,GACJ,IAAK,IACL,IAAK,IACDI,EAAM3I,OAAO2I,GAAKkI,QAAQ6D,GAAa,GACvC,MACJ,IAAK,IACL,IAAK,IACD/L,EAAM3I,OAAO2I,GAAKgM,YAAYD,GAC9B,MACJ,IAAK,IACL,IAAK,IACD/L,EAAM3I,OAAO2I,GAAKiM,cAAcF,GAChC,MACJ,IAAK,IACD/L,EAAMuE,GAASvE,GACf,MACJ,IAAK,IACDA,EAAMuE,GAASvE,GAAK,GACpB,MACJ,IAAK,IACDA,EAAM0K,GAAM1K,GACZ,MACJ,IAAK,IACDA,EAAM0K,GAAM1K,GAAKkM,cAGzB,IAAMC,EAAaN,EAAMtR,QAAQ,MAAQ,GAAKnD,SAAS4I,EAAK,KAAO,EAEnE,GADA8L,EAAM1U,SAAS0U,EAAK,KACfxU,MAAMwU,GAAM,CACb,IAAMM,EAAKN,GAAO,GAAKD,EAAMtR,QAAQ,MAAQ,EAAI,IAAM,IACvDyF,EAAMqM,GAAQ5H,OAAOzE,GAAM9F,KAAKoF,IAAIwM,IAAQK,EAAa,EAAI,GAAIC,EAAIN,EAAM,GAG/E,OADa9U,GAAUmV,EAAa,IAAMnM,EAAMA,IACpCF,QAAQ,KAAM,QA0G3B,SAASuF,GAAKiH,GAAkB,QAAAC,EAAA9J,UAAA/P,OAAJoX,EAAInH,MAAA4J,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ1C,EAAI0C,EAAA,GAAA/J,UAAA+J,GACnC,OAAO1C,EAAG1E,IAAI,SAAC/M,GAAD,OAAOoM,OAAOpM,KAAIgN,KAAKiH,GA2HlC,SAASD,GAAQhS,EAAKuL,EAAKwG,EAAIK,GAClCL,EAAKA,GAAM,IACXxG,GAAYvL,EAAI3H,OAChB,IAAK,IAAIF,EAAI,EAAGA,EAAIoT,EAAKpT,IACrB6H,EAAMoS,EAAUpS,EAAM+R,EAAKA,EAAK/R,EAEpC,OAAOA,yQC3XJ,IAAMqS,GAAgB5D,GAAQ,SAAuBC,EAAKxU,GAAiB,QAAAiO,EAAAC,UAAA/P,OAAR+U,EAAQ9E,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAR6E,EAAQ7E,EAAA,GAAAH,UAAAG,GAChFqG,GAAMjW,KAANK,MAAA4V,IAAWhR,KAAM8Q,EAAKxU,GAAtBsV,OAA+BpC,KAC9BwB,IAmCI,SAAS0D,GAAsBC,GACpC,OAzBK,SAASC,EAAyB/Y,EAAGwW,GAC1CuC,EAA0B,OACxB,OAAQ/Y,EAAEiV,KACR,KAAK,EAED,OAAOuB,EAAM,EAAI,EAGrB,KAAK,EAED,OAAa,EAANA,EAGX,QAEI,IAAMzV,EAAIf,EAAE2T,OAAO,GAEnB3T,EADUA,EAAE2T,OAAO,GAEnB6C,EAAMuC,EAAyBhY,EAAGyV,EAAM,GACxC,SAASuC,GAMVA,CAAyBD,EAAM,GAEjC,SAASE,GAAuBtX,GACrC,OAAO,IAAIkX,GAAc,EAAG,SAAUlX,GAEjC,SAASuX,GAAwB1U,EAAG2U,EAAMC,EAAMvM,GACrD,OAAO,IAAIgM,GAAc,EAAG,UAAWrU,EAAG2U,EAAMC,EAAMvM,GAEjD,SAASwM,GAAuBjY,GACrC,OAAQA,EAAE8T,KACR,KAAK,EAED,OAAO,EAGX,KAAK,EAGD,OAAc,GADa,EAAd9T,EAAEwS,OAAO,IAI1B,QAEI,OAAO,GAIR,IAAM0F,GAA4B,EAClC,SAASC,GAAmBC,EAAMpI,EAAGqI,GAC1C,IAAMC,GAAcF,EAAMC,GAa1B,OAV0B,IAAtBC,EAAW,GAAGxE,KACU,IAAtBwE,EAAW,GAAGxE,IACH,EAKF,GAIb,KAAK,EAED,OAAO+D,GAAuB7H,GAGlC,KAAK,EAED,IAAMuI,EAAoC,EAA/BN,GAAuBG,GAC5BI,EAAoC,EAA/BP,GAAuBI,GAElC,OAAOP,GAAwB9H,EAAGoI,EAAMC,GADR,GAArBE,EAAKC,EAAKA,EAAKD,IACwB,IAInD,SAASE,GAA0BC,EAAIC,EAAMC,GAClD,IAAMC,EAAmC,EAA7BZ,GAAuBS,GAC7BI,EAAmC,EAA7Bb,GAAuBW,GAEnC,GAAIE,EAAMD,EAAMX,GAA2B,CACzC,GAAe,IAAXU,EAAG9E,IAAW,CAChB,IAAMiF,EAAMH,EAAGpG,OAAO,GAChBwG,EAAMJ,EAAGpG,OAAO,GAChByG,EAAML,EAAGpG,OAAO,GAEtB,GAAIyF,GAAuBe,GAAOH,EAAM,EAAG,CACzC,GAAgB,IAAZG,EAAIlF,IAAW,CACjB,IAAMoF,EAAOF,EAAIxG,OAAO,GAClB2G,EAAOH,EAAIxG,OAAO,GAClB4G,EAAOJ,EAAIxG,OAAO,GACxB,OAAO2F,GAAmBA,GAAmBO,EAAIC,EAAMQ,GAAOC,EAAMjB,GAAmBe,EAAMD,EAAKF,IAElG,MAAM,IAAIvX,MAAM,aAGlB,OAAO2W,GAAmBA,GAAmBO,EAAIC,EAAMK,GAAMC,EAAKF,GAGpE,MAAM,IAAIvX,MAAM,aAEb,GAAIqX,EAAMC,EAAMZ,GAA2B,CAChD,GAAe,IAAXQ,EAAG5E,IAAW,CAChB,IAAMuF,EAAMX,EAAGlG,OAAO,GAChB8G,EAAMZ,EAAGlG,OAAO,GAChB+G,EAAMb,EAAGlG,OAAO,GAEtB,GAAIyF,GAAuBoB,GAAOP,EAAM,EAAG,CACzC,GAAgB,IAAZO,EAAIvF,IAAW,CACjB,IAAM0F,EAAOH,EAAI7G,OAAO,GAClBiH,EAAOJ,EAAI7G,OAAO,GAClBkH,EAAOL,EAAI7G,OAAO,GACxB,OAAO2F,GAAmBA,GAAmBmB,EAAKC,EAAKE,GAAOC,EAAMvB,GAAmBqB,EAAMb,EAAMC,IAEnG,MAAM,IAAIpX,MAAM,aAGlB,OAAO2W,GAAmBmB,EAAKC,EAAKpB,GAAmBkB,EAAKV,EAAMC,IAGpE,MAAM,IAAIpX,MAAM,aAGlB,OAAO2W,GAAmBO,EAAIC,EAAMC,GAGjC,SAASe,GAAoBC,EAAUC,EAAMC,GAClD,OAAQA,EAAKhG,KACX,KAAK,EAED,IAAMiG,EAAQD,EAAKtH,OAAO,GACpBwH,EAAuC,EAAhCJ,EAASK,QAAQJ,EAAME,GAEpC,OAAIC,EAAO,EACFlC,GAAwB+B,EAAM,IAAIpC,GAAc,EAAG,YAAaqC,EAAM,GAC3D,IAATE,EACFF,EAEAhC,GAAwB+B,EAAMC,EAAM,IAAIrC,GAAc,EAAG,YAAa,GAInF,KAAK,EAED,OAAOI,GAAuBgC,GAGlC,QAEI,IAAMK,EAAOJ,EAAKtH,OAAO,GACnB2H,EAAOL,EAAKtH,OAAO,GACnB4H,EAAKN,EAAKtH,OAAO,GACjBpT,EAAiC,EAA7Bwa,EAASK,QAAQJ,EAAMO,GAEjC,OAAIhb,EAAI,EACCqZ,GAA0BkB,GAAoBC,EAAUC,EAAMM,GAAOC,EAAIF,GACjE,IAAN9a,EACF0a,EAEArB,GAA0B0B,EAAMC,EAAIT,GAAoBC,EAAUC,EAAMK,KAmJlF,SAASG,GAAuBC,EAAaC,EAAMC,GACxD,OAAQA,EAAK1G,KACX,KAAK,EAED,IAAM2G,EAAQD,EAAKhI,OAAO,GAG1B,OAAa,KAFmC,EAAnC8H,EAAYL,QAAQM,EAAME,IAG9B,IAAIhD,GAAc,EAAG,YAErB+C,EAIb,KAAK,EAED,IAAME,EAAOF,EAAKhI,OAAO,GACnBmI,EAAOH,EAAKhI,OAAO,GACnBoI,EAAQJ,EAAKhI,OAAO,GACpBqI,EAA0C,EAAnCP,EAAYL,QAAQM,EAAMK,GAEvC,GAAIC,EAAO,EACT,OAAOpC,GAA0B4B,GAAuBC,EAAaC,EAAMI,GAAOC,EAAOF,GACpF,GAAa,IAATG,EAAY,CACrB,IAAMC,GAAiBH,EAAMD,GAE7B,GAA6B,IAAzBI,EAAc,GAAGhH,IACnB,OAAO4G,EACF,GAA6B,IAAzBI,EAAc,GAAGhH,IAC1B,OAAO6G,EAEP,IAAMI,EA3DX,SAASC,EAAmCC,GACjD,OAAQA,EAAKnH,KACX,KAAK,EAGD,OADcmH,EAAKzI,OAAO,GACX,IAAIiF,GAAc,EAAG,aAGxC,KAAK,EAED,IAAMyD,EAAOD,EAAKzI,OAAO,GACnB2I,EAAOF,EAAKzI,OAAO,GACnB4I,EAAQH,EAAKzI,OAAO,GAE1B,GAAiB,IAAb2I,EAAKrH,IACP,OAAQsH,EAAOF,GAEf,IAAMG,EAAkBL,EAAmCG,GAC3D,OAAQE,EAAgB,GAAIlD,GAAmBkD,EAAgB,GAAID,EAAOF,IAIhF,QAEI,MAAM,IAAI1Z,MAAM,2CAmCYwZ,CAAmCN,GAC3D,OAAOvC,GAAmBwC,EAAMI,EAAgB,GAAIA,EAAgB,IAGtE,OAAOtC,GAA0BkC,EAAMC,EAAOP,GAAuBC,EAAaC,EAAMG,IAI9F,QAEI,OAAOF,GAIR,SAASc,GAAoBC,EAAaC,EAAMC,GACrDH,EAAqB,OACnB,OAAQG,EAAK3H,KACX,KAAK,EAED,IAAM4H,EAAQD,EAAKjJ,OAAO,GAC1B,OAA4C,IAArC+I,EAAYtB,QAAQuB,EAAME,GAGrC,KAAK,EAED,OAAO,EAGX,QAEI,IAAMC,EAAOF,EAAKjJ,OAAO,GACnBoJ,EAAOH,EAAKjJ,OAAO,GACnBqJ,EAAQJ,EAAKjJ,OAAO,GACpBsJ,EAA0C,EAAnCP,EAAYtB,QAAQuB,EAAMK,GAEvC,GAAIC,EAAO,EAAG,CACZP,EAAcA,EACdC,EAAOA,EACPC,EAAOG,EACP,SAASN,EACJ,GAAa,IAATQ,EACT,OAAO,EAEPP,EAAcA,EACdC,EAAOA,EACPC,EAAOE,EACP,SAASL,GAwiBd,IAAMS,GAAsClI,GAAQ,SAA6CmI,EAAMC,GAC5GjZ,KAAKkZ,MAAQF,EACbhZ,KAAKmZ,QAAUF,GACdG,IACI,SAASC,GAA4BH,GACb,OAAa,CACxC,GAAkB,MAAdA,EAAMI,KAWR,OAAOC,KAVP,GAAuB,IAAnBL,EAAMM,KAAK1I,IACb,OAAOoI,EACqB,IAAnBA,EAAMM,KAAK1I,IAIpBoI,EAAQA,EAAMI,KAHdJ,EAAQK,GAAEL,EAAMM,KAAKhK,OAAO,GAAI+J,GAAE1E,GAAuBqE,EAAMM,KAAKhK,OAAO,IAAK+J,GAAEL,EAAMM,KAAKhK,OAAO,GAAI0J,EAAMI,SAW/G,SAASG,GAA2BC,GACzC,OAAO,IAAIX,GAAoCM,GAA4BE,GAAEG,EAAOH,QAAO,GAQtF,SAASI,GAAwBpf,GACtC,GAAIA,EAAE4e,QAAS,CACb,IAAMS,EAAgBrf,EAAE2e,MAExB,GAA0B,MAAtBU,EAAcN,KAChB,OARC,WACL,MAAM,IAAI9a,MAAM,+BAOLqb,GACF,GAA+B,IAA3BD,EAAcJ,KAAK1I,IAC5B,OAAO8I,EAAcJ,KAAKhK,OAAO,GAEjC,MAAM,IAAIhR,MAAM,mEAGlB,OAlBG,WACL,MAAM,IAAIA,MAAM,2BAiBPsb,GAoBJ,IAAMC,GAAwClJ,GAAQ,SAA+CmJ,GACzFha,KACRnE,EAAIme,EADIha,KAERzF,EAAIkf,GAFIzZ,KAEgCnE,KAK5C,SAASoe,GAAiGC,GAAW,IAAAC,EAAAC,EAC1H,OAAO/P,GASF,SAAwFgQ,GAAW,IAAAC,EAAAC,EACxG,OAAAC,GAAAF,KACGrQ,GAAWoQ,IADdE,MAAA,WAAAA,EAAA,YAAAA,EAAA,QAAA5d,IAAA,WAII,OAAOgd,GAAwBU,EAAU9f,IAJ7CigB,GAAAF,EAAA,sBAQI,OA5CC,SAAkCG,GACvC,GAAIA,EAAKtB,QAAS,CAChB,IAAMuB,EAAgBD,EAAKvB,MAE3B,GAA0B,MAAtBwB,EAAcpB,KAChB,OAAO,EACF,GAA+B,IAA3BoB,EAAclB,KAAK1I,IAE5B,OADA2J,EAAKvB,MAAQG,GAA4BqB,EAAcpB,QAC3B,MAAnBmB,EAAKvB,MAAMI,MAEpB,MAAM,IAAI9a,MAAM,oEAIlB,OADAic,EAAKtB,SAAU,IACa,MAAnBsB,EAAKvB,MAAMI,MA8BXqB,CAAyBN,EAAU9f,KAR9CigB,GAAAF,EAAA,mBAYID,EAAU9f,EAAIkf,GAA2BY,EAAUxe,KAZvD+e,GAAAN,EAAAC,GAAAD,EAVcO,CAA+EX,GA2BxF,SAAwEY,GAAW,IAAAC,EACxF,OAAAP,GAAAO,KACG9Q,GAAW6Q,GADdN,GAAAO,EAAA,wBAAAA,EA5ByGC,CAA+Dd,IAAjKM,GAAAL,KACJlQ,GAAWiQ,GADP,WAAAE,MAAA,QAAAA,EAAA,YAAAA,EAAA,QAAAzd,IAAA,WAIH,OAAOgd,GAAwBO,EAAU3f,IAJtCqgB,GAAAT,EAAAC,GAAAD,IAmCF,SAASc,GAA8BC,GAC5C,OAAOjB,GAxCF,SAAsED,GAC3E,OAAe,MAARha,KAAe+Z,GAAsChf,KAAKiF,KAAMga,GAAS,IAAID,GAAsCC,GAuClBmB,CAA6DD,IAEhK,SAASE,GAAsBC,GAEpC,OAAOrJ,GAAO,SAAmBsJ,GAC/B,OAAIA,EAAM5J,YACA4J,EAAM3J,QAAS2J,GAEhB,MALAL,GAA8BI,IAuOpC,SAASE,GAAwBC,EAAcC,EAAIC,GACxD,IAAMC,GAAiBF,EAAIC,GAE3B,OAA6B,IAAzBC,EAAc,GAAG7K,IACU,IAAzB6K,EAAc,GAAG7K,IACZ,GAEA,EAEyB,IAAzB6K,EAAc,GAAG7K,IACnB,EAEsE,EA1O1E,SAAuC8K,EAAcC,EAAIC,GAC9DC,EAA+B,OAAa,CAC1C,IACIC,EAAaC,EAAOC,EAAOC,EAAKC,EAAKC,EAAOC,EAAOC,EAAQC,EAAQC,EAAKC,EAAOC,EAAOC,EAAKC,EAAQC,EAAKC,EAAQC,EAAOC,EAAOC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAKC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAKC,EAAQC,EAD9PC,GAAiBvC,EAAIC,GA0G3B,OAvG6B,MAAzBsC,EAAc,GAAG9E,KACU,MAAzB8E,EAAc,GAAG9E,KACe,IAA9B8E,EAAc,GAAG5E,KAAK1I,IACU,IAA9BsN,EAAc,GAAG5E,KAAK1I,KACxBkL,EAAc,EACdG,EAAMiC,EAAc,GAAG5E,KAAKhK,OAAO,GACnC4M,EAAMgC,EAAc,GAAG5E,KAAKhK,OAAO,GACnC6M,EAAQ+B,EAAc,GAAG9E,KACzBgD,EAAQ8B,EAAc,GAAG9E,MACc,IAA9B8E,EAAc,GAAG5E,KAAK1I,IACa,IAAxCsN,EAAc,GAAG5E,KAAKhK,OAAO,GAAGsB,KAClCkL,EAAc,EACdY,EAAMwB,EAAc,GAAG5E,KAAKhK,OAAO,GACnCqN,EAASuB,EAAc,GAAG5E,KAAKhK,OAAO,GACtCsN,EAAMsB,EAAc,GAAG5E,KAAKhK,OAAO,GACnCuN,EAASqB,EAAc,GAAG5E,KAAKhK,OAAO,GACtCwN,EAAQoB,EAAc,GAAG9E,KACzB2D,EAAQmB,EAAc,GAAG9E,OAEzB0C,EAAc,EACd0B,EAASU,EAAc,GAAG5E,KAAKhK,OAAO,GACtCmO,EAAMS,EAAc,GAAG5E,KAAKhK,OAAO,GACnCoO,EAASQ,EAAc,GAAG5E,KAAKhK,OAAO,GACtCqO,EAASO,EAAc,GAAG9E,OAG5B0C,EAAc,GACd8B,EAASM,EAAc,GAAG5E,KAAKhK,OAAO,GACtCuO,EAASK,EAAc,GAAG9E,MAEW,IAA9B8E,EAAc,GAAG5E,KAAK1I,IACa,IAAxCsN,EAAc,GAAG5E,KAAKhK,OAAO,GAAGsB,IACA,IAA9BsN,EAAc,GAAG5E,KAAK1I,KACxBkL,EAAc,EACdO,EAAS6B,EAAc,GAAG5E,KAAKhK,OAAO,GACtCgN,EAAS4B,EAAc,GAAG5E,KAAKhK,OAAO,GACtCiN,EAAM2B,EAAc,GAAG5E,KAAKhK,OAAO,GACnCkN,EAAQ0B,EAAc,GAAG9E,KACzBqD,EAAQyB,EAAc,GAAG9E,MACc,IAA9B8E,EAAc,GAAG5E,KAAK1I,IACa,IAAxCsN,EAAc,GAAG5E,KAAKhK,OAAO,GAAGsB,KAClCkL,EAAc,EACdkB,EAASkB,EAAc,GAAG5E,KAAKhK,OAAO,GACtC2N,EAASiB,EAAc,GAAG5E,KAAKhK,OAAO,GACtC4N,EAASgB,EAAc,GAAG5E,KAAKhK,OAAO,GACtC6N,EAASe,EAAc,GAAG5E,KAAKhK,OAAO,GACtC8N,EAASc,EAAc,GAAG9E,KAC1BiE,EAASa,EAAc,GAAG9E,OAE1B0C,EAAc,EACd0B,EAASU,EAAc,GAAG5E,KAAKhK,OAAO,GACtCmO,EAAMS,EAAc,GAAG5E,KAAKhK,OAAO,GACnCoO,EAASQ,EAAc,GAAG5E,KAAKhK,OAAO,GACtCqO,EAASO,EAAc,GAAG9E,OAG5B0C,EAAc,GACdgC,EAASI,EAAc,GAAG5E,KAAKhK,OAAO,GACtCyO,EAAMG,EAAc,GAAG5E,KAAKhK,OAAO,GACnC0O,EAASE,EAAc,GAAG5E,KAAKhK,OAAO,GACtC2O,EAASC,EAAc,GAAG9E,MAEW,IAA9B8E,EAAc,GAAG5E,KAAK1I,KAC/BkL,EAAc,EACdwB,EAASY,EAAc,GAAG5E,KAAKhK,OAAO,GACtCiO,EAASW,EAAc,GAAG9E,MACa,IAA9B8E,EAAc,GAAG5E,KAAK1I,KAC/BkL,EAAc,EACd0B,EAASU,EAAc,GAAG5E,KAAKhK,OAAO,GACtCmO,EAAMS,EAAc,GAAG5E,KAAKhK,OAAO,GACnCoO,EAASQ,EAAc,GAAG5E,KAAKhK,OAAO,GACtCqO,EAASO,EAAc,GAAG9E,OAE1B0C,EAAc,GACdgC,EAASI,EAAc,GAAG5E,KAAKhK,OAAO,GACtCyO,EAAMG,EAAc,GAAG5E,KAAKhK,OAAO,GACnC0O,EAASE,EAAc,GAAG5E,KAAKhK,OAAO,GACtC2O,EAASC,EAAc,GAAG9E,MAEW,IAA9B8E,EAAc,GAAG5E,KAAK1I,KAC/BkL,EAAc,EACdwB,EAASY,EAAc,GAAG5E,KAAKhK,OAAO,GACtCiO,EAASW,EAAc,GAAG9E,MACa,IAA9B8E,EAAc,GAAG5E,KAAK1I,KAC/BkL,EAAc,EACd0B,EAASU,EAAc,GAAG5E,KAAKhK,OAAO,GACtCmO,EAAMS,EAAc,GAAG5E,KAAKhK,OAAO,GACnCoO,EAASQ,EAAc,GAAG5E,KAAKhK,OAAO,GACtCqO,EAASO,EAAc,GAAG9E,OAE1B0C,EAAc,EACdC,EAAQmC,EAAc,GAAG9E,KACzB4C,EAAQkC,EAAc,GAAG9E,MAG3B0C,EAAc,EAGhBA,EADkC,MAAzBoC,EAAc,GAAG9E,KACZ,EAEA,EAGR0C,GACN,KAAK,EAED,OAAO,EAGX,KAAK,EAED,OAAO,EAGX,KAAK,EAED,OAAO,EAGX,KAAK,EAEDJ,EAAeA,EACfC,EAAKI,EACLH,EAAKI,EACL,SAASH,EAGb,KAAK,EAED,IAAMsC,EAAwC,EAAjCzC,EAAa3E,QAAQkF,EAAKC,GAEvC,GAAa,IAATiC,EACF,OAAc,EAAPA,EAEPzC,EAAeA,EACfC,EAAKQ,EACLP,EAAKQ,EACL,SAASP,EAIf,KAAK,EAED,IAAMuC,EAA8C,EAAvC1C,EAAa3E,QAAQsF,EAAQC,GAE1C,GAAa,IAAT8B,EACF,OAAc,EAAPA,EAEP1C,EAAeA,EACfC,EAAKtC,GAAE,IAAI9E,GAAc,EAAG,YAAaiI,GACzCZ,EAAKvC,GAAEkD,EAAKE,GACZ,SAASZ,EAIf,KAAK,EAED,IAAMwC,EAA8C,EAAvC3C,EAAa3E,QAAQ4F,EAAQE,GAE1C,GAAa,IAATwB,EACF,OAAc,EAAPA,EAEP3C,EAAeA,EACfC,EAAKtC,GAAEuD,EAAKE,GACZlB,EAAKvC,GAAEqD,EAAKK,GACZ,SAASlB,EAIf,KAAK,EAED,IAAMyC,EAA+C,EAAvC5C,EAAa3E,QAAQiG,EAAQE,GAE3C,GAAc,IAAVoB,EACF,OAAe,EAARA,EAEP5C,EAAeA,EACfC,EAAKtC,GAAE4D,EAAQG,GACfxB,EAAKvC,GAAE8D,EAAQE,GACf,SAASxB,EAIf,KAAK,EAEDH,EAAeA,EACfC,EAAKtC,GAAE,IAAI9E,GAAc,EAAG,YAAa8E,GAAE1E,GAAuB2I,GAASC,IAC3E3B,EAAKA,EACL,SAASC,EAGb,KAAK,EAEDH,EAAeA,EACfC,EAAKtC,GAAEoE,EAAKpE,GAAEzE,GAAwB4I,EAAQ,IAAIjJ,GAAc,EAAG,YAAamJ,EAAQ,GAAIC,IAC5F/B,EAAKA,EACL,SAASC,EAGb,KAAK,GAEDH,EAAeA,EACfC,EAAKA,EACLC,EAAKvC,GAAE,IAAI9E,GAAc,EAAG,YAAa8E,GAAE1E,GAAuBiJ,GAASC,IAC3E,SAAShC,EAGb,KAAK,GAEDH,EAAeA,EACfC,EAAKA,EACLC,EAAKvC,GAAE0E,EAAK1E,GAAEzE,GAAwBkJ,EAAQ,IAAIvJ,GAAc,EAAG,YAAayJ,EAAQ,GAAIC,IAC5F,SAASpC,IAiBRA,CAA8BP,EAAcjC,GAAEkC,EAAIlC,MAAMA,GAAEmC,EAAInC,OAuDlE,SAASkF,GAAsBC,EAAcC,GAClD,IAAMC,EAAKrN,GAAcoN,GAEzB,IACE,OAjBG,SAA0CE,EAAcC,EAASnf,GACpC,OAAa,CAC7C,IAAIA,EAAE+R,WAOJ,OAAOoN,EANP,IAAMC,EAAWF,EACjBC,EAAUnI,GAAoBkI,EAAclf,EAAEgS,QAASmN,GACvDnf,EAAIA,EACJkf,EAAeE,GAWVC,CAAiCN,EAAc,IAAIjK,GAAc,EAAG,YAAamK,GAD1F,QAGEA,EAAGK,WAQA,IAAMC,GAAYrO,GAAQ,SAAmBsO,EAAcC,GAC/Cpf,KACR4W,SAAWuI,EADHnf,KAERof,KAAOA,IAUX,SAASC,GAAwBC,GACtC,OAAOA,EAAM1I,SAER,SAAS2I,GAAoBC,GAClC,OAAOA,EAAMJ,KAoTR,SAASK,GAAcpU,EAAQqU,GACpC,OAvDF,SAA8BC,EAAcC,GAAW,IAAAC,EACjDC,EAAUF,EACd,OAAApF,GAAAqF,GACEpd,WACE,OAAOiS,GAAsBoL,IAG/BC,IALF,SAKMC,GAGF,OADAF,EAAUnJ,GAAoBgJ,EAAcK,EAAOF,GADlC9f,MAKnBigB,KAXF,SAWOC,GACH,OAAI5H,GAAoBqH,EAAcO,EAAOJ,KAG3CA,EAAUnJ,GAAoBgJ,EAAcO,EAAOJ,IAC5C,IAIXK,MApBF,WAqBIL,EAAU,IAAIrL,GAAc,EAAG,aAGjC2L,OAxBF,SAwBSC,GACL,QAAI/H,GAAoBqH,EAAcU,EAAOP,KAC3CA,EAAUzI,GAAuBsI,EAAcU,EAAOP,IAC/C,IAMXvS,IAjCF,SAiCM+S,GACF,OAAOhI,GAAoBqH,EAAcW,EAAOR,IAGlDS,OArCF,WAsCI,OAAOnF,GAAsB0E,KAG9BjjB,OAAOqO,SAzCV,WA0CI,OAAOsG,GAAWyJ,GAA8B6E,MA1CpDtF,GAAAqF,EAAA,2BA8CI,OAAO5E,GAA8B6E,KA9CzCD,EAqDOW,CAAqBd,EAAcjB,GAAsBiB,EAAcrU,IC3mDzE,SAASoV,GAAIC,EAAMC,EAAWC,GAInC,IAHA,IAAMC,EAA4B,EAAnBF,EAAUlmB,OACnBqmB,EAAY,IAAIF,EAAQC,GAErBE,EAAO,EAAGA,GAAQF,EAAS,EAAGE,IACrCD,EAAUC,GAAQL,EAAKC,EAAUI,IAGnC,OAAOD,EA+2BF,SAASE,GAAgBC,EAAWC,EAAWC,GAIpD,IAHA,IAAIC,EAASD,EACPE,EAA6B,EAAnBH,EAAUzmB,OAEjB6mB,EAAQ,EAAGA,GAASD,EAASC,IACpCF,EAASH,EAAUK,EAAQ,EAAGJ,EAAUG,EAAUC,GAAQF,GAG5D,OAAOA,ECv7BF,SAASG,GAAKC,GACnB,GAAkB,MAAdA,EAAMlI,KAER,OADUkI,EAAMhI,KAGhB,MAAM,IAAIhb,MAAM,kBA2Gb,SAASijB,GAAKC,EAAUC,EAAUC,GACjC,OAAa,CACjB,IAAMC,EAAOH,EACPI,EAAWH,EACXI,EAAQH,EAEd,GAAkB,MAAdG,EAAMzI,KAQR,OAAOwI,EAPP,IAAM9kB,EAAI+kB,EAAMzI,KAEhBoI,EAAWG,EACXF,EAAWE,EAAKC,EAFNC,EAAMvI,MAGhBoI,EAAW5kB,GAOV,SAASglB,GAAQC,GACtB,OAAOR,GAAK,SAAUS,EAAQC,GAC5B,OAAO5I,GAAE4I,EAAMD,IACd3I,KAAK0I,GAEH,SAASG,GAASC,EAAMC,EAAQC,GACrC,OAAOd,GAAK,SAAUe,EAAQC,GAC5B,OAAOJ,EAAKI,EAAMD,IACjBD,EAAUP,GAAQM,IAOhB,SAASI,GAAMC,GACpB,OAAOX,GAAQ5P,GAAQ,SAAUwQ,EAAQC,GACvC,OAAOtJ,GAAEsJ,EAAMD,IACdrJ,KAAKoJ,IAsKH,SAASG,GAAOC,EAAQC,GAC7B,OAAOvB,GAAK,SAAUwB,EAASC,GAC7B,OAAO3J,GAAE2J,EAAOD,IACfD,EAAQhB,GAAQe,IAEd,SAASI,GAAQC,EAAOC,GAC7B,OAAOX,GJnNF,SAAiBxS,EAAG2B,GACvB,OAAOD,GAAOzE,GAAI+C,EAAG2B,IIkNVyR,CAAWF,EAAOC,IAE1B,SAASE,GAAIC,EAAOC,GACzB,OAAOzB,GAAQP,GAAK,SAAU3C,EAAS4E,GACrC,OAAOnK,GAAEiK,EAAME,GAAQ5E,IACtBvF,KAAKkK,IAkEH,SAASE,GAAQC,GACtB,ODijBK,SAAkBC,EAAWC,EAAWC,GAC7C,OAAO/C,GAAgB,SAAUQ,EAAOwC,EAAOC,GAC7C,OAAOJ,EAAUG,EAAOC,IACvBH,EAAWC,GCpjBPG,CAAY,SAAUC,EAAOC,GAClC,OAAO7K,GAAE4K,EAAOC,IACfR,EAAQrK,MAoCN,SAAS8K,GAAeC,EAAOC,GACpC,OAzBK,SAA2BC,EAAWC,EAAWC,GACtDC,EAAmB,OAAa,CAC9B,IAAMC,EAAQJ,EACRK,EAAOJ,EACPK,EAAWJ,EAEjB,GAAqB,MAAjBI,EAASxL,KAAc,CACzB,IAAMyL,EAASD,EAASxL,KAElBhe,EAASspB,EAAMC,EADPC,EAAStL,MAGvB,GAAc,MAAVle,EAAgB,CAClBkpB,EAAYI,EACZH,EAAYI,EAAO,EACnBH,EAAYK,EACZ,SAASJ,EAET,OAAOrpB,EAGT,OAAO,MAKJqpB,CAAkBL,EAAO,EAAGC,GAE9B,SAASS,GAAQC,EAAOC,GAC7B,OAAOb,GAAe,SAAUc,EAAWC,GACzC,OAAOH,EAAMG,IACZF,GAiBE,SAASG,GAAQC,EAAOC,GAC7B,OAAOlB,GAAe,SAAUmB,EAAWxF,GACzC,OAAOsF,EAAMtF,GAASzP,GAAKyP,GAAS,MACnCuF,GAsDE,SAASE,GAAOC,EAAOC,GAC5B,OAAOvD,GAAS,SAAUwD,EAAOC,GAC/B,OAAOH,EAAME,GAASrM,GAAEqM,EAAOC,GAAWA,GACzCF,EAAQpM,MAEN,SAASuM,GAAUC,EAAOC,GAC/B,OAAOvE,GAAK,SAAUwE,EAAcC,GAClC,OAAOH,EAAMG,IAAU3M,GAAE2M,EAAOD,EAAa,IAAKA,EAAa,KAAOA,EAAa,GAAI1M,GAAE2M,EAAOD,EAAa,OAC3G1M,KAAKA,MAAMyI,GAAQgE,IAElB,SAASG,GAAOC,EAAOC,GAC5B,OAAOrE,GAAQP,GAAK,SAAU6E,EAASC,GACrC,IAAMnI,EAAgBgI,EAAMG,GAE5B,OAAqB,MAAjBnI,EACKkI,EAGA/M,GADO/I,GAAS4N,GACPkI,IAEjB/M,KAAK8M,IA+CH,SAASG,GAAOC,EAAOC,GAC5B,GAAsB,MAAlBA,EAAUpN,KAAc,CAC1B,IAAMxC,EAAO4P,EAAUpN,KAEvB,OAAOmI,GAAKgF,EADCC,EAAUlN,KACE1C,GAEzB,MAAM,IAAItY,MAAM,yRFo5BpB0gB,GAAUrkB,UAAU2F,SAAW,WAE7B,MAAO,QAAU4M,iBAAK,MAALwE,6HAAA+U,CAAcxZ,GAAOb,GADxBtM,SAC4C,KAG5Dkf,GAAUrkB,UAAUoF,YAAc,WAUhC,IATA,IAEM2mB,EAAc,SAAqBC,EAAOC,GAC9C,OAAQD,GAAS,GAAKC,EAAO,KAG3BzoB,EAAM,EACJ0oB,EAAO9L,GAA8BsE,GAP1Bvf,OASV+mB,EAAKrV,YACVrT,EAAMuoB,EAAYvoB,EAAK6P,GAAe6Y,EAAKpV,UAG7C,OAAuB,EAAhB1P,KAAKoF,IAAIhJ,IAGlB6gB,GAAUrkB,UAAUsF,OAAS,SAAU6mB,GAErC,OAA0I,IAAnIzL,GAAwB8D,GADdrf,MACiDuf,GADjDvf,MACgFuf,GAAoBnV,GAAS4c,MAGhI9H,GAAUrkB,UAAUyF,UAAY,SAAU2mB,GAExC,OAA2I,EAApI1L,GAAwB8D,GADdrf,MACiDuf,GADjDvf,MACgFuf,GAAoBnV,GAAS6c,MAGhI/H,GAAUrkB,UAAUgC,OAAOqO,UAAY,WAErC,OAAOsG,GAAWyJ,GAA8BsE,GADlCvf,SG//CT,IAAMknB,GAAgBrW,GAAQ,SAAuBC,EAAKxU,GAAiB,QAAAiO,EAAAC,UAAA/P,OAAR+U,EAAQ9E,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAR6E,EAAQ7E,EAAA,GAAAH,UAAAG,GAChFqG,GAAMjW,KAANK,MAAA4V,IAAWhR,KAAM8Q,EAAKxU,GAAtBsV,OAA+BpC,KAC9BwB,IAmCI,SAASmW,GAAqB/mB,GACnC,OAzBK,SAASgnB,EAAwB/U,EAAKlW,GAC3CirB,EAAyB,OACvB,OAAQjrB,EAAE2U,KACR,KAAK,EAED,OAAOuB,EAAM,EAAI,EAGrB,KAAK,EAED,IAAMzV,EAAIT,EAAEqT,OAAO,GAEnB6C,EAAM+U,EAAwB/U,EAAM,EAD1BlW,EAAEqT,OAAO,IAEnBrT,EAAIS,EACJ,SAASwqB,EAGb,QAEI,OAAa,EAAN/U,GAMR+U,CAAwB,EAAGhnB,GAE7B,SAASinB,KACd,OAAO,IAAIH,GAAc,EAAG,YAEvB,SAASI,GAAuB9F,GACrC,OAAQA,EAAM1Q,KACZ,KAAK,EAED,OAAO,EAGX,KAAK,EAGD,OAAW,GADiB,EAAlB0Q,EAAMhS,OAAO,IAI3B,QAEI,OAAO,GAWR,SAAS+X,GAAmBxS,EAAM/H,EAAG9N,EAAG8V,GAC7C,IAAMM,GAAcP,EAAMC,GAa1B,OAV0B,IAAtBM,EAAW,GAAGxE,KACU,IAAtBwE,EAAW,GAAGxE,IACH,EAKF,GAIb,KAAK,EAED,OAAO,IAAIoW,GAAc,EAAG,SAAUla,EAAG9N,GAG7C,KAAK,EAED,IAAMqW,EAAoC,EAA/B+R,GAAuBvS,GAC5BS,EAAoC,EAA/B8R,GAAuBtS,GAElC,OAAO,IAAIkS,GAAc,EAAG,UAAWla,EAAG9N,EAAG6V,EAAMC,GADhB,GAArBO,EAAKC,EAAKA,EAAKD,IACmC,IAIjE,SAASiS,GAA0B9R,EAAIC,EAAM8R,EAAM7R,GACxD,IAAMC,EAAmC,EAA7ByR,GAAuB5R,GAC7BI,EAAmC,EAA7BwR,GAAuB1R,GAEnC,GAAIE,EAAMD,EAAM,EAAG,CACjB,GAAe,IAAXD,EAAG9E,IAAW,CAChB,IAAM4W,EAAM9R,EAAGpG,OAAO,GAChBuG,EAAMH,EAAGpG,OAAO,GAChBwG,EAAMJ,EAAGpG,OAAO,GAChByG,EAAML,EAAGpG,OAAO,GAEtB,GAAI8X,GAAuBtR,GAAOH,EAAM,EAAG,CACzC,GAAgB,IAAZG,EAAIlF,IAAW,CACjB,IAAM6W,EAAO3R,EAAIxG,OAAO,GAClB0G,EAAOF,EAAIxG,OAAO,GAClB2G,EAAOH,EAAIxG,OAAO,GAClB4G,EAAOJ,EAAIxG,OAAO,GACxB,OAAO+X,GAAmBA,GAAmB7R,EAAIC,EAAM8R,EAAMtR,GAAOC,EAAMuR,EAAMJ,GAAmBrR,EAAMD,EAAKyR,EAAK3R,IAEnH,MAAM,IAAIvX,MAAM,aAGlB,OAAO+oB,GAAmBA,GAAmB7R,EAAIC,EAAM8R,EAAMzR,GAAMC,EAAKyR,EAAK3R,GAG/E,MAAM,IAAIvX,MAAM,aAEb,GAAIqX,EAAMC,EAAM,EAAG,CACxB,GAAe,IAAXJ,EAAG5E,IAAW,CAChB,IAAM8W,EAAMlS,EAAGlG,OAAO,GAChB6G,EAAMX,EAAGlG,OAAO,GAChB8G,EAAMZ,EAAGlG,OAAO,GAChB+G,EAAMb,EAAGlG,OAAO,GAEtB,GAAI8X,GAAuBjR,GAAOP,EAAM,EAAG,CACzC,GAAgB,IAAZO,EAAIvF,IAAW,CACjB,IAAM+W,EAAOxR,EAAI7G,OAAO,GAClBgH,EAAOH,EAAI7G,OAAO,GAClBiH,EAAOJ,EAAI7G,OAAO,GAClBkH,EAAOL,EAAI7G,OAAO,GACxB,OAAO+X,GAAmBA,GAAmBjR,EAAKC,EAAKqR,EAAKnR,GAAOC,EAAMmR,EAAMN,GAAmB/Q,EAAMb,EAAM8R,EAAM7R,IAEpH,MAAM,IAAIpX,MAAM,eAGlB,OAAO+oB,GAAmBjR,EAAKC,EAAKqR,EAAKL,GAAmBlR,EAAKV,EAAM8R,EAAM7R,IAG/E,MAAM,IAAIpX,MAAM,aAGlB,OAAO+oB,GAAmB7R,EAAIC,EAAM8R,EAAM7R,GAGvC,SAASkS,GAAoBlR,EAAUC,EAAMkR,EAAMC,GACxD,OAAQA,EAAKlX,KACX,KAAK,EAED,IAAMsG,EAAK4Q,EAAKxY,OAAO,GACjBpT,EAAiC,EAA7Bwa,EAASK,QAAQJ,EAAMO,GAEjC,OAAIhb,EAAI,EACC,IAAI8qB,GAAc,EAAG,UAAWrQ,EAAMkR,EAAM,IAAIb,GAAc,EAAG,YAAac,EAAM,GAC5E,IAAN5rB,EACF,IAAI8qB,GAAc,EAAG,SAAUrQ,EAAMkR,GAErC,IAAIb,GAAc,EAAG,UAAWrQ,EAAMkR,EAAMC,EAAM,IAAId,GAAc,EAAG,YAAa,GAIjG,KAAK,EAED,IAAMe,EAAKD,EAAKxY,OAAO,GACjB6F,EAAO2S,EAAKxY,OAAO,GACnB4F,EAAO4S,EAAKxY,OAAO,GACnBuH,EAAQiR,EAAKxY,OAAO,GACpB0Y,EAAwB,EAAjBF,EAAKxY,OAAO,GACnBwH,EAAuC,EAAhCJ,EAASK,QAAQJ,EAAME,GAEpC,OAAIC,EAAO,EACFwQ,GAA0BM,GAAoBlR,EAAUC,EAAMkR,EAAM3S,GAAO2B,EAAOkR,EAAI5S,GAC3E,IAAT2B,EACF,IAAIkQ,GAAc,EAAG,UAAWrQ,EAAMkR,EAAM3S,EAAMC,EAAM6S,GAExDV,GAA0BpS,EAAM2B,EAAOkR,EAAIH,GAAoBlR,EAAUC,EAAMkR,EAAM1S,IAIlG,QAEI,OAAO,IAAI6R,GAAc,EAAG,SAAUrQ,EAAMkR,IAI7C,SAASI,GAAqBC,EAAaC,EAAMC,GACtDH,EAAsB,OACpB,OAAQG,EAAKxX,KACX,KAAK,EAED,IAAMyX,EAAQD,EAAK9Y,OAAO,GACpBgZ,EAAQF,EAAK9Y,OAAO,GAG1B,GAAa,KAFmC,EAAnC4Y,EAAYnR,QAAQoR,EAAMG,IAGrC,OAAOD,EAEP,MAAM,IAAI/pB,MAAM,iBAItB,KAAK,EAED,IAAMiqB,EAAQH,EAAK9Y,OAAO,GACpB0H,EAAOoR,EAAK9Y,OAAO,GACnB2H,EAAOmR,EAAK9Y,OAAO,GACnBkZ,EAAQJ,EAAK9Y,OAAO,GACpBmZ,EAA0C,EAAnCP,EAAYnR,QAAQoR,EAAMK,GAEvC,GAAIC,EAAO,EAAG,CACZP,EAAcA,EACdC,EAAOA,EACPC,EAAOnR,EACP,SAASgR,EACJ,GAAa,IAATQ,EACT,OAAOF,EAEPL,EAAcA,EACdC,EAAOA,EACPC,EAAOpR,EACP,SAASiR,EAIf,QAEI,MAAM,IAAI3pB,MAAM,kBAkLnB,SAASoqB,GAAuBC,EAAaC,EAAOC,GACzD,OAAQA,EAAKjY,KACX,KAAK,EAED,IAAM+H,EAAQkQ,EAAKvZ,OAAO,GAG1B,OAAa,KAFoC,EAApCqZ,EAAY5R,QAAQ6R,EAAOjQ,IAG/B,IAAIqO,GAAc,EAAG,YAErB6B,EAIb,KAAK,EAED,IAAMC,EAAQD,EAAKvZ,OAAO,GACpByZ,EAAOF,EAAKvZ,OAAO,GACnB0Z,EAAOH,EAAKvZ,OAAO,GACnBkJ,EAAQqQ,EAAKvZ,OAAO,GACpB6O,EAA2C,EAApCwK,EAAY5R,QAAQ6R,EAAOpQ,GAExC,GAAI2F,EAAO,EACT,OAAOmJ,GAA0BoB,GAAuBC,EAAaC,EAAOI,GAAOxQ,EAAOsQ,EAAOC,GAC5F,GAAa,IAAT5K,EAAY,CACrB,IAAM8K,GAAiBD,EAAMD,GAE7B,GAA6B,IAAzBE,EAAc,GAAGrY,IACnB,OAAOmY,EACF,GAA6B,IAAzBE,EAAc,GAAGrY,IAC1B,OAAOoY,EAEP,IAAME,EA9DX,SAASC,EAAmCC,GACjD,OAAQA,EAAKxY,KACX,KAAK,EAED,IAAMyY,EAAQD,EAAK9Z,OAAO,GAE1B,OADc8Z,EAAK9Z,OAAO,GACX+Z,EAAO,IAAIrC,GAAc,EAAG,aAG/C,KAAK,EAED,IAAMsC,EAAQF,EAAK9Z,OAAO,GACpBia,EAAOH,EAAK9Z,OAAO,GACnBka,EAAOJ,EAAK9Z,OAAO,GACnBoI,EAAQ0R,EAAK9Z,OAAO,GAE1B,GAAiB,IAAbka,EAAK5Y,IACP,OAAQ8G,EAAO4R,EAAOC,GAEtB,IAAME,EAAeN,EAAmCK,GACxD,OAAQC,EAAa,GAAIA,EAAa,GAAIpC,GAAmBoC,EAAa,GAAI/R,EAAO4R,EAAOC,IAIlG,QAEI,MAAM,IAAIjrB,MAAM,2CAoCY6qB,CAAmCJ,GAC3D,OAAO1B,GAAmB2B,EAAME,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,IAG1F,OAAO5B,GAA0B0B,EAAMxQ,EAAOsQ,EAAOJ,GAAuBC,EAAaC,EAAOG,IAItG,QAEI,OAAO5B,MAIR,SAASuC,GAAoBC,EAAcC,EAAOC,GACvDH,EAAqB,OACnB,OAAQG,EAAKjZ,KACX,KAAK,EAED,IAAMkZ,EAASD,EAAKva,OAAO,GAC3B,OAA+C,IAAxCqa,EAAa5S,QAAQ6S,EAAOE,GAGvC,KAAK,EAED,IAAMC,EAAOF,EAAKva,OAAO,GACnB0a,EAAOH,EAAKva,OAAO,GACnB2a,EAASJ,EAAKva,OAAO,GACrB8O,EAA6C,EAAtCuL,EAAa5S,QAAQ6S,EAAOK,GAEzC,GAAI7L,EAAO,EAAG,CACZuL,EAAeA,EACfC,EAAQA,EACRC,EAAOG,EACP,SAASN,EACJ,GAAa,IAATtL,EACT,OAAO,EAEPuL,EAAeA,EACfC,EAAQA,EACRC,EAAOE,EACP,SAASL,EAIf,QAEI,OAAO,GAqXV,SAASQ,GAAsBC,EAAc9L,GAClD,IAAMK,EAAKrN,GAAcgN,GAEzB,IACE,OA5BG,SAA0C+L,EAAcrH,EAAStjB,GACpC,OAAa,CAC7C,IAAIA,EAAE+R,WAQJ,OAAOuR,EAPP,IAAM5K,EAAkB1Y,EAAEgS,QACpB4Y,EAAWD,EACjBrH,EAAU6E,GAAoBwC,EAAcjS,EAAgB,GAAIA,EAAgB,GAAI4K,GACpFtjB,EAAIA,EACJ2qB,EAAeC,GAqBVC,CAAiCH,EAAchD,KAAyBzI,GADjF,QAGEA,EAAGK,WAUA,IAAMwL,GAAsC5Z,GAAQ,SAA6CmI,EAAMC,GAC5GjZ,KAAKkZ,MAAQF,EACbhZ,KAAKmZ,QAAUF,GACdG,IACI,SAASsR,GAA4BxR,GACb,OAAa,CACxC,GAAkB,MAAdA,EAAMI,KAWR,OAAOC,KAVP,GAAuB,IAAnBL,EAAMM,KAAK1I,IACb,OAAOoI,EACqB,IAAnBA,EAAMM,KAAK1I,IAIpBoI,EAAQA,EAAMI,KAHdJ,EAAQK,GAAEL,EAAMM,KAAKhK,OAAO,GAAI+J,GAAE,IAAI2N,GAAc,EAAG,SAAUhO,EAAMM,KAAKhK,OAAO,GAAI0J,EAAMM,KAAKhK,OAAO,IAAK+J,GAAEL,EAAMM,KAAKhK,OAAO,GAAI0J,EAAMI,SAW7I,SAASqR,GAA2BC,GACzC,OAAO,IAAIH,GAAoCC,GAA4BnR,GAAEqR,EAAMrR,QAAO,GAQrF,SAASsR,GAAwBC,GACtC,GAAIA,EAAK3R,QAAS,CAChB,IAAM4R,EAAgBD,EAAK5R,MAE3B,GAA0B,MAAtB6R,EAAczR,KAChB,OARC,WACL,MAAM,IAAI9a,MAAM,gCAOLwsB,GACF,GAA+B,IAA3BD,EAAcvR,KAAK1I,IAC5B,OAAQia,EAAcvR,KAAKhK,OAAO,GAAIub,EAAcvR,KAAKhK,OAAO,IAEhE,MAAM,IAAIhR,MAAM,mEAGlB,OAlBG,WACL,MAAM,IAAIA,MAAM,2BAiBPysB,GAoBJ,IAAMC,GAA6Cra,GAAQ,SAAoDsa,GACnGnrB,KACRnE,EAAIsvB,EADInrB,KAERzF,EAAIowB,GAFI3qB,KAEgCnE,KAK5C,SAASuvB,GAAsGC,GAAW,IAAAlR,EAAAC,EAC/H,OAAO/P,GASF,SAA6FihB,GAAW,IAAAhR,EAAAC,EAC7G,OAAAgR,GAAAjR,KACGrQ,GAAWqhB,IADd/Q,MAAA,WAAAA,EAAA,YAAAA,EAAA,QAAA5d,IAAA,WAII,OAAOkuB,GAAwBS,EAAU/wB,IAJ7CgxB,GAAAjR,EAAA,sBAQI,OA5CC,SAAkCkR,GACvC,GAAIA,EAAKrS,QAAS,CAChB,IAAMsS,EAAgBD,EAAKtS,MAE3B,GAA0B,MAAtBuS,EAAcnS,KAChB,OAAO,EACF,GAA+B,IAA3BmS,EAAcjS,KAAK1I,IAE5B,OADA0a,EAAKtS,MAAQwR,GAA4Be,EAAcnS,QAC3B,MAAnBkS,EAAKtS,MAAMI,MAEpB,MAAM,IAAI9a,MAAM,oEAIlB,OADAgtB,EAAKrS,SAAU,IACa,MAAnBqS,EAAKtS,MAAMI,MA8BXoS,CAAyBJ,EAAU/wB,KAR9CgxB,GAAAjR,EAAA,mBAYIgR,EAAU/wB,EAAIowB,GAA2BW,EAAUzvB,KAZvD8vB,GAAArR,EAAAC,GAAAD,EAVcsR,CAAoFP,GA2B7F,SAA6EQ,GAAW,IAAA9Q,EAC7F,OAAAwQ,GAAAxQ,KACG9Q,GAAW4hB,GADdN,GAAAxQ,EAAA,wBAAAA,EA5B8G+Q,CAAoET,IAA3KE,GAAApR,KACJlQ,GAAWohB,GADP,WAAAjR,MAAA,QAAAA,EAAA,YAAAA,EAAA,QAAAzd,IAAA,WAIH,OAAOkuB,GAAwBQ,EAAU9wB,IAJtCoxB,GAAAxR,EAAAC,GAAAD,IAmCF,SAAS4R,GAA8BC,GAC5C,OAAOZ,GAxCF,SAA2ED,GAChF,OAAe,MAARnrB,KAAekrB,GAA2CnwB,KAAKiF,KAAMmrB,GAAQ,IAAID,GAA2CC,GAuCtBc,CAAkED,IAE1K,SAASE,GAAsBC,GAEpC,OAAOna,GAAO,SAAmBsJ,GAC/B,OAAIA,EAAM5J,YACA4J,EAAM3J,QAAS2J,GAEhB,MALAyQ,GAA8BI,IASpC,IAAMC,GAAYvb,GAAQ,SAAmB+K,EAAcwD,GAC/Cpf,KACR4W,SAAWgF,EADH5b,KAERof,KAAOA,IAaX,SAASiN,GAAoB7M,GAClC,OAAOA,EAAMJ,KAuTR,SAASkN,GAAcC,EAAWC,GACvC,OA9DF,SAA8BrN,EAAcS,GAAW,IAAAC,EACjDC,EAAUF,EACd,OAAA2L,GAAA1L,GACEpd,WACE,OAAO0kB,GAAqBrH,IAG9BK,MALF,WAMIL,EAAU,IAAIoH,GAAc,EAAG,aAGjC9G,OATF,SASSqM,GACL,QAAI7C,GAAoBzK,EAAcsN,EAAO3M,KAC3CA,EAAU8I,GAAuBzJ,EAAcsN,EAAO3M,IAC/C,IAMX4M,QAlBF,WAmBI,OAAOR,GAAsBpM,IAG/BnjB,IAtBF,SAsBMgwB,GACF,OAAOxE,GAAqBhJ,EAAcwN,EAAO7M,IAGnDvS,IA1BF,SA0BMqf,GACF,OAAOhD,GAAoBzK,EAAcyN,EAAO9M,IAGlDnU,KA9BF,WA+BI,OAAOwB,GAAO,SAAoB0f,GAChC,OAAOA,EAAM,IACZX,GAAsBpM,KAG3BtS,IApCF,SAoCMsf,EAAOC,GAGT,OADAjN,EAAUgI,GAAoB3I,EAAc2N,EAAOC,EAAOjN,GADzC9f,MAKnBugB,OA1CF,WA2CI,OAAOpT,GAAO,SAAoB6f,GAChC,OAAOA,EAAM,IACZd,GAAsBpM,MAG1BjjB,OAAOqO,SAhDV,WAiDI,OAAOsG,GAAWua,GAA8BjM,MAjDpDyL,GAAA1L,EAAA,2BAqDI,OAAOkM,GAA8BjM,KArDzCD,EA4DOoN,CAAqBT,EAAcpC,GAAsBoC,EAAcD,IClzChF,SAASW,GAAS9sB,EAAG4H,GACjB,OAAY,MAALA,GAAapN,OAAOgS,eAAexM,GAAGyM,cAAgBjS,OAAOgS,eAAe5E,GAAG6E,YAuBnF,SAASgE,GAAQ1G,EAAMgjB,GAE1B,OAtBJ,SAAkBC,EAAUD,GAOxBC,EAASvyB,UAAYD,OAAOwC,OAAO+vB,GAAcA,EAAWtyB,WACxDgS,aACI9P,MAAOqwB,EACP1wB,YAAY,EACZ2wB,UAAU,EACVC,cAAc,KAStBC,CAASpjB,EAAMgjB,GAAcK,IACtBrjB,EAEJ,SAASqjB,MAWhB,SAASC,GAAYC,EAAMzpB,GACvB,GAAIypB,IAASzpB,EACT,OAAO,EAGP,GAAa,MAATA,EACA,OAAQ,EAEZ,KAAoB,MAAbypB,EAAKpU,MAAc,CACtB,GAAkB,MAAdrV,EAAMqV,KACN,OAAO,EAEX,IAAMjb,EAAMyQ,GAAQ4e,EAAKlU,KAAMvV,EAAMuV,MACrC,GAAY,IAARnb,EACA,OAAOA,EAEXqvB,EAAOA,EAAKpU,KACZrV,EAAQA,EAAMqV,KAElB,OAAqB,MAAdrV,EAAMqV,KAAe,GAAK,EAGlC,SAASqU,GAAKnU,EAAMF,GACvBtZ,KAAKwZ,KAAOA,EACZxZ,KAAKsZ,KAAOA,EA4BT,SAASC,GAAE9Q,EAAGzL,GACjB,OAAO,IAAI2wB,GAAKllB,EAAGzL,GAEhB,SAASgU,GAAMF,EAAKxU,GACvB0D,KAAK8Q,IAAY,EAANA,EACX9Q,KAAK1D,KAAOA,EAF4B,QAAAiO,EAAAC,UAAA/P,OAAR+U,EAAQ9E,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAR6E,EAAQ7E,EAAA,GAAAH,UAAAG,GAGxC3K,KAAKwP,OAASA,EA4ClB,SAASoe,GAAaC,EAAQC,GAG1B,IAFA,IAAMtxB,KACAmP,EAAwB,MAAjBmiB,EAAwBlzB,OAAO+Q,KAAKkiB,GAAUC,EAAcD,GAChEtzB,EAAI,EAAGA,EAAIoR,EAAKlR,OAAQF,IAC7BiC,EAAEmP,EAAKpR,IAAMszB,EAAOliB,EAAKpR,IAE7B,OAAOiC,EAEX,SAASuxB,GAAaL,EAAMzpB,EAAO6pB,GAC/B,GAAIJ,IAASzpB,EACT,OAAO,EAEN,GAAKipB,GAASQ,EAAMzpB,GAGpB,CAED,IADA,IAAM+pB,EAA6B,MAAjBF,EAAwBlzB,OAAO+Q,KAAK+hB,GAAQI,EAAcJ,GACnEnzB,EAAI,EAAGA,EAAIyzB,EAAUvzB,OAAQF,IAClC,IAAKkU,GAAOif,EAAKM,EAAUzzB,IAAK0J,EAAM+pB,EAAUzzB,KAC5C,OAAO,EAGf,OAAO,EATP,OAAO,EAYf,SAAS0zB,GAAcP,EAAMzpB,EAAO6pB,GAChC,GAAIJ,IAASzpB,EACT,OAAO,EAEN,GAAKipB,GAASQ,EAAMzpB,GAGpB,CAED,IADA,IAAM+pB,EAA6B,MAAjBF,EAAwBlzB,OAAO+Q,KAAK+hB,GAAQI,EAAcJ,GACnEnzB,EAAI,EAAGA,EAAIyzB,EAAUvzB,OAAQF,IAAK,CACvC,IAAMe,EAASwT,GAAQ4e,EAAKM,EAAUzzB,IAAK0J,EAAM+pB,EAAUzzB,KAC3D,GAAe,IAAXe,EACA,OAAOA,EAGf,OAAO,EAVP,OAAQ,EAaT,SAAS8d,MDs4BhBgT,GAAUvxB,UAAU2F,SAAW,WAE7B,MAAO,QAAU4M,iBAAK,MAALwE,6HAAAsc,CAAc/gB,GAAO,SAAiBghB,GACrD,OAAO1a,GAAOV,GAAO,YAAdU,CAA2B0a,EAAG,GAA9B1a,CAAkC0a,EAAG,KAFhCnuB,SAGD,KAGfosB,GAAUvxB,UAAUoF,YAAc,WAUhC,IATA,IAEM2mB,EAAc,SAAqBlD,EAAO0K,GAC9C,OAAQ1K,GAAS,GAAK0K,EAAO,KAG3BC,EAAS,EACPtH,EAAOgF,GAA8BM,GAP1BrsB,OASV+mB,EAAKrV,YAAY,CACtB,IAAM4c,EAA0BvH,EAAKpV,QAErC0c,EAASzH,EADTyH,EAASzH,EAAYyH,EAAQngB,GAAeogB,EAAwB,KACvCpgB,GAAeogB,EAAwB,KAGtE,OAA0B,EAAnBrsB,KAAKoF,IAAIgnB,IAGlBjC,GAAUvxB,UAAUsF,OAAS,SAAU6mB,GAErC,OAAoC,IADnBhnB,KACDM,UAAU0mB,IAG5BoF,GAAUvxB,UAAUgC,OAAOqO,UAAY,WAErC,OAAOsG,GAAWua,GADH/rB,KACwCof,QAGzDgN,GAAUvxB,UAAUyF,UAAY,SAAUM,GACxC,IACM2tB,EAAKnkB,GAASxJ,GAChB4tB,EAAS,EACTC,GAAW,EACTC,EAAK3C,GAA8BM,GAJ3BrsB,OAMd,IACE,IAAM2uB,EAAK5C,GAA8BM,GAAoBkC,IAE7D,IACE,MAAQE,GAAsB,IAAXD,GAAsB,CACvC,IAAM9T,GAAiBgU,EAAGhd,WAAYid,EAAGjd,YAEzC,GAAIgJ,EAAc,GAChB,GAAIA,EAAc,GAAI,CACpB,IAAMkU,EAAOF,EAAG/c,QACVkd,EAAOF,EAAGhd,QACV6M,EAAmD,EAjBrDxe,KAiBgB4W,SAASK,QAAQ2X,EAAK,GAAIC,EAAK,IACnDL,EAAmB,IAAVhQ,EAAcA,EAAQ1P,GAAQ8f,EAAK,GAAIC,EAAK,SAErDL,EAAS,OAEF9T,EAAc,GACvB8T,GAAU,EAEVC,GAAW,EAIf,OAAgB,EAATD,EApBT,QAsBEG,EAAG1P,WAzBP,QA4BEyP,EAAGzP,YCvmCPuO,GAAa3yB,UAAU2F,SAAW,WAAY,IAAAsuB,EAAA9uB,KAC1C,MAAO,IAAMpF,OAAO+Q,KAAK3L,MAAMmN,IAAI,SAACH,GAAD,OAAOA,EAAI,MAAQV,GAASwiB,EAAK9hB,MAAKI,KAAK,QAAU,KAE5FogB,GAAa3yB,UAAUoF,YAAc,WACjC,ORiJG,SAAsBG,GACzB,GAAS,MAALA,EACA,OAAO,EAEX,gBAAeA,EAAf,YAAAqM,GAAerM,IACX,IAAK,UACD,OAAOA,EAAI,EAAI,EACnB,IAAK,SACD,OAAOyN,GAAWzN,GACtB,IAAK,SACD,OAAOsN,GAAWtN,GACtB,QACI,OAAOyN,GAAWR,GAAU0hB,GAAG3uB,KQ7JhC4uB,CAAahvB,OAExBwtB,GAAa3yB,UAAUsF,OAAS,SAAU8D,GACtC,OAAOjE,OAASiE,GA4BpB0pB,GAAK9yB,UAAU2F,SAAW,WACtB,MAAO,IAAMkK,MAAMwC,KAAKlN,MAAMmN,IAAI,SAAA/M,GAAA,OAAKkM,GAASlM,KAAIgN,KAAK,MAAQ,KAErEugB,GAAK9yB,UAAU6F,OAAS,WACpB,OAAOgK,MAAMwC,KAAKlN,OAEtB2tB,GAAK9yB,UAAUgC,OAAOqO,UAAY,WAC9B,IAAImG,EAAMrR,KACV,OACImL,KAAM,WACF,IAAM8jB,EAAM5d,EAEZ,OADAA,EAAMA,EAAIiI,MACDlO,KAAkB,MAAZ6jB,EAAI3V,KAAcvc,MAAOkyB,EAAIzV,SAIxDmU,GAAK9yB,UAAUoF,YAAc,WAEzB,OAAOC,GADQwK,MAAMwC,KAAKlN,MAAMmN,IAAIe,MAGxCyf,GAAK9yB,UAAUsF,OAAS,SAAU8D,GAC9B,OAAoC,IAA7BwpB,GAAYztB,KAAMiE,IAE7B0pB,GAAK9yB,UAAUyF,UAAY,SAAU2D,GACjC,OAAOwpB,GAAYztB,KAAMiE,IAU7B+M,GAAMnW,UAAU2F,SAAW,WACvB,IAAMmN,EAAM3N,KAAKwP,OAAO/U,OACxB,OAAY,IAARkT,EACO3N,KAAK1D,KAEC,IAARqR,EACE3N,KAAK1D,KAAO,IAAMgQ,GAAStM,KAAKwP,OAAO,IAGvCxP,KAAK1D,KAAO,KAAO0D,KAAKwP,OAAOrC,IAAIb,IAAUc,KAAK,KAAO,KAGxE4D,GAAMnW,UAAU6F,OAAS,WACrB,OAA8B,IAAvBV,KAAKwP,OAAO/U,OACbuF,KAAK1D,MACJ0D,KAAK1D,MAAMsV,OAAO5R,KAAKwP,SAElCwB,GAAMnW,UAAUoF,YAAc,WAC1B,IAAI6N,EAAS9N,KAAKwP,OAAOrC,IAAIe,IAE7B,OADAJ,EAAOnS,OAAO,EAAG,EAAGkS,GAAW7N,KAAK8Q,MAC7B5Q,GAAiB4N,IAE5BkD,GAAMnW,UAAUsF,OAAS,SAAU8D,GAC/B,OAAOjE,OAASiE,GACRipB,GAASltB,KAAMiE,IACZjE,KAAK8Q,MAAQ7M,EAAM6M,KACnBtC,GAAYxO,KAAKwP,OAAQvL,EAAMuL,SAE9CwB,GAAMnW,UAAUyF,UAAY,SAAU2D,GAClC,OAAIjE,OAASiE,EACF,EAEDipB,GAASltB,KAAMiE,GAGhBjE,KAAK8Q,MAAQ7M,EAAM6M,IACjBjC,GAAc7O,KAAKwP,OAAQvL,EAAMuL,QAGjCxP,KAAK8Q,IAAM7M,EAAM6M,KAAO,EAAI,GAN3B,GAsDhBsI,GAAOve,UAAU2F,SAAW,WAAY,IAAA0uB,EAAAlvB,KACpC,MAAO,IAAMpF,OAAO+Q,KAAK3L,MAAMmN,IAAI,SAACH,GAAD,OAAOA,EAAI,MAAQV,GAAS4iB,EAAKliB,MAAKI,KAAK,QAAU,KAE5FgM,GAAOve,UAAU6F,OAAS,WACtB,OAAOktB,GAAa5tB,OAExBoZ,GAAOve,UAAUoF,YAAc,WAAY,IAAAkvB,EAAAnvB,KAEvC,OAAOE,GADQtF,OAAO+Q,KAAK3L,MAAMmN,IAAI,SAAAH,GAAA,OAAKkB,GAAeihB,EAAKniB,QAGlEoM,GAAOve,UAAUsF,OAAS,SAAU8D,GAChC,OAAO8pB,GAAa/tB,KAAMiE,IAE9BmV,GAAOve,UAAUyF,UAAY,SAAU2D,GACnC,OAAOgqB,GAAcjuB,KAAMiE,IAEN4M,GAAQ,SAAmBue,GAChDpvB,KAAKovB,SAAWA,GACjBhW,IAFI,IAIMiW,GAAYxe,GAAQ,SAAmBye,GAChDtvB,KAAKkZ,MAAQ1a,QAAQ0a,MACrBlZ,KAAKuvB,QAAUD,IAKnB,SAASE,GAA6B9B,GAClC,OAAO9yB,OAAO+Q,KAAK+hB,GAAM+B,OAAO,SAAAziB,GAAA,MAAW,YAANA,GAAyB,UAANA,IAErD,IAAM0iB,GAAkB7e,GAAQ,WACnCwe,GAAUt0B,KAAKiF,OAChBqvB,IACHK,GAAgB70B,UAAU2F,SAAW,WAAY,IAAAmvB,EAAA3vB,KACvC4vB,EAAaJ,GAA6BxvB,MAC1C2N,EAAMiiB,EAAWn1B,OACvB,OAAY,IAARkT,EACO3N,KAAKuvB,QAEC,IAAR5hB,EACE3N,KAAKuvB,QAAU,IAAM/iB,OAAOxM,KAAK4vB,EAAW,KAG5C5vB,KAAKuvB,QAAU,KAAOK,EAAWziB,IAAI,SAAAH,GAAA,OAAKR,OAAOmjB,EAAK3iB,MAAKI,KAAK,KAAO,KAGtFsiB,GAAgB70B,UAAU6F,OAAS,WAC/B,OAAOktB,GAAa5tB,KAAMwvB,KAE9BE,GAAgB70B,UAAUoF,YAAc,WAAY,IAAA4vB,EAAA7vB,KAEhD,OAAOE,GADQsvB,GAA6BxvB,MAAMmN,IAAI,SAAAH,GAAA,OAAKkB,GAAe2hB,EAAK7iB,QAGnF0iB,GAAgB70B,UAAUsF,OAAS,SAAU8D,GACzC,OAAO8pB,GAAa/tB,KAAMiE,EAAOurB,KAErCE,GAAgB70B,UAAUyF,UAAY,SAAU2D,GAC5C,OAAOgqB,GAAcjuB,KAAMiE,EAAOurB,KAED3e,GAAQ,SAA+BmI,EAAMC,EAAM6W,GACpF9vB,KAAKgZ,KAAOA,EACZhZ,KAAKiZ,KAAc,EAAPA,EACZjZ,KAAK8vB,KAAc,EAAPA,GACbJ,IAJI,IAKMK,GAAalf,GAAQ,SAAoBxF,EAAQuL,GAC1D5W,KAAKgwB,aAAe1D,GAAiBjhB,EAAQuL,KAEjDhc,OAAO6B,eAAeszB,GAAWl1B,UAAW,QAAU8B,IAAK,WACnD,OAAOqD,KAAKgwB,aAAavtB,QAEjCstB,GAAWl1B,UAAUslB,MAAQ,WAAc,OAAOngB,KAAKgwB,aAAa7P,SACpE4P,GAAWl1B,UAAUulB,OAAS,SAAUpT,GAAK,OAAOhN,KAAKgwB,aAAa5P,OAAOpT,IAC7E+iB,GAAWl1B,UAAU6xB,QAAU,WAAc,OAAO1sB,KAAKgwB,aAAatD,WACtEqD,GAAWl1B,UAAU8B,IAAM,SAAUqQ,GAAK,OAAOhN,KAAKgwB,aAAarzB,IAAIqQ,IACvE+iB,GAAWl1B,UAAU0S,IAAM,SAAUP,GAAK,OAAOhN,KAAKgwB,aAAaziB,IAAIP,IACvE+iB,GAAWl1B,UAAU8Q,KAAO,WAAc,OAAO3L,KAAKgwB,aAAarkB,QACnEokB,GAAWl1B,UAAU2S,IAAM,SAAUR,EAAG9N,GAAK,OAAOc,KAAKgwB,aAAaxiB,IAAIR,EAAG9N,IAC7E6wB,GAAWl1B,UAAU0lB,OAAS,WAAc,OAAOvgB,KAAKgwB,aAAazP,UACrEwP,GAAWl1B,UAAUgC,OAAOqO,UAAY,WAAc,OAAOlL,KAAKgwB,aAAanzB,OAAOqO,aAC/E,IAAM+kB,GAAUpf,GAAQ,SAAiBxF,EAAQuL,GACpD5W,KAAKkwB,aAAezQ,GAAiBpU,EAAQuL,KAEjDhc,OAAO6B,eAAewzB,GAAQp1B,UAAW,QAAU8B,IAAK,WAChD,OAAOqD,KAAKkwB,aAAaztB,QAEjCwtB,GAAQp1B,UAAUklB,IAAM,SAAU7gB,GAAK,OAAOc,KAAKkwB,aAAanQ,IAAI7gB,IACpE+wB,GAAQp1B,UAAUslB,MAAQ,WAAc,OAAOngB,KAAKkwB,aAAa/P,SACjE8P,GAAQp1B,UAAUulB,OAAS,SAAUpT,GAAK,OAAOhN,KAAKkwB,aAAa9P,OAAOpT,IAC1EijB,GAAQp1B,UAAU0S,IAAM,SAAUP,GAAK,OAAOhN,KAAKkwB,aAAa3iB,IAAIP,IACpEijB,GAAQp1B,UAAU0lB,OAAS,WAAc,OAAOvgB,KAAKkwB,aAAa3P,UAClE0P,GAAQp1B,UAAUgC,OAAOqO,UAAY,WAAc,OAAOlL,KAAKkwB,aAAarzB,OAAOqO,aAC1D2F,GAAQ,cAA1B,gtBCq1BwBsf,GAC3BC,GAAA,UAAAr1B,UAAkDo1B,qBACnBA,EAAAE,KAAeF,EAAAG,mCAmBzCD,EACAE,EACAC,EACAnzB,EACAizB,EACAG,UA3UL71B,OAAAw1B,GAAA,cAAAx1B,CAAA81B,GAAA,IAAAC,GA6UUtzB,EAAWizB,EAAcC,EAAaC,EAAWH,MACvDI,eCvnCuBG,SACLA,qED6lCbC,EAAA7wB,KACD8wB,SACUD,EAAAP,YACAO,EAAAE,MAAAh0B,6BACG8zB,8BACjBA,EAAAP,MAAAE,KAAgBM,EAAhB,SAA2BxB,GAA3B,MACQ0B,EAAWH,EAAAP,MAAAC,OAAkBjB,EAAIuB,EAAAE,MAAAh0B,OACrC8zB,EAFJI,SAAA,IAAAC,GAE4BF,8ECnkCNG,mCAAiBA,gBAIlBC,EAAkBC,SAASC,EAATD,EAAA7hB,OAAA,iCACjB4hB,EAAQE,gBAERrtB,EAAmBstB,SAASC,EAATD,EAAA/hB,OAAA,UACpBiS,GAAA,SACAS,EAAIuP,GADJ,OACYC,GAAQD,EAAKvP,IADzB,IAAAyP,GAAA,aACwCH,GADjDvtB,eAGY2tB,EAAwBC,MAC9B,MAAAD,SAEIC,SADEH,GAAAE,EAAUC,eAGLl1B,EAAqCm1B,EAAoBC,SAEpE5I,EAAAnE,GAAaroB,EADfo1B,EAAAviB,OAAA,OACE,MAAA2Z,SAEIuI,GAAQI,EAAOC,UADPL,GAAAvI,EAAe4I,eAG1BC,SAgBOC,EAAVD,EAAAxiB,OAAA,GACA0iB,qBAdG/L,GAAA,SACEgM,GADF,OACE,KAAAA,EAAArhB,IACiBqhB,EAAA3iB,OAAA,GAFnB,MADH2W,GAAAiM,GAAAC,IAeaC,CAAiBL,GAC9BM,WAVAC,UAAA/M,GAAA,SACUgN,GADV,OAAAvoB,GAEcuoB,EAFdC,KAIkB,KAJlBtoB,GAEcqoB,GAEI3hB,KAJlB0hB,GAUaG,CAAkBV,sCAE/B7kB,GAAA,OADH8kB,KAIEK,eAEEK,EAAkCC,SACzBC,EAAVD,EAAArjB,OAAA,8BACJ+T,GAASqP,EAAQE,qyBC9DJlC,SACnBA,aACiBmC,KADjBnC,UAaCoC,GAXG,IAAAD,EAAAjiB,IAAA,IAIJiiB,EAJIvjB,OAAA,GAAAsB,IAWH,0BAXG,IAAAiiB,EAAAjiB,IAAA,IAMJiiB,EANIvjB,OAAA,GAAAsB,IAWH,UAXG,IAMJiiB,EANIvjB,OAAA,GAAAsB,IAWH,oBAXG,IAAAiiB,EAAAjiB,IAAA,IASJiiB,EATIvjB,OAAA,GAAAsB,IAWH,iCAXG,IACJiiB,EADIvjB,OAAA,GAAAsB,IAWH,cAXG,IACJiiB,EADIvjB,OAAA,GAAAsB,IAWH,gCAbD8f,cAkBCoC,GAHG,OAfJpC,GAeIphB,OAAA,GAAAsB,IAGH,0BACA8f,cAEcqC,EAAWC,EAAAC,SAAA3R,GAAA0R,EAAAC,UAK7BF,EADAG,GADAC,GAAAC,GADA5B,GAAA6B,GAAA,IAAAb,GAAA,2BAAAf,GAAA,aAF6BnQ,EAAA,OAAAA,EAAA,gBAOvBgS,UAAAC,GAAA,SAAaC,EAAAt3B,GAAb,OAq1BbxB,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,GAr1B0BmkB,EAq1B1B,MAr1B0Bt3B,IAAbo3B,EAAA,GAAAA,EAAA,6BCjEJzE,EAAG4E,OAukCZ/4B,OAAAg5B,GAAA,OAAAh5B,CArkCmB+4B,EAqkCME,SAAAC,eArkCT/E,UAChBzZ,uBDgEa2Q,UAAAwN,GAAA,SAAaM,EAAAC,GAAb,OAm1Bbp5B,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GAn1B0BwkB,EAm1B1B,MAn1B0BC,IAAb/N,EAAA,GAAAA,EAAA,IEhDbgO,EAAA1a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,GAAAga,GAAA,IAAAb,GAAA,0BAAAnZ,UAAA,yBAAAA,QAagC8a,qcCuEdzD,SACRA,aACemC,KADfnC,mCAEI,IAAAmC,EAAAvjB,OAAA,GAAAsB,cAAA,IAAAiiB,EAAAvjB,OAAA,GAAAsB,iCAMH8f,cAEAsC,EAAAC,SAAAmB,GAAApB,EAAAC,GAAWoB,EAAXD,EAAA,GAAA9kB,OAAA,UAoyBX5U,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GA9xBO6jB,GADAC,GAAAmB,GAHAC,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,wBAAAnZ,GAAAga,4CAvDH,IAAAmB,EAAA5jB,uBAAA,IAAA4jB,EAAA5jB,sBAAA,IAAA4jB,EAAA5jB,sBAAA,IAAA4jB,EAAA5jB,kBAAA,IAAA4jB,EAAA5jB,mBAAA,IAAA4jB,EAAA5jB,oBAAA,IAAA4jB,EAAA5jB,gBAAA,IAAA4jB,EAAA5jB,iBAAA,IAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,sBAAA,KAAA4jB,EAAA5jB,qBAAA,KAAA4jB,EAAA5jB,wBAAA,KAAA4jB,EAAA5jB,uBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,iBAAA,KAAA4jB,EAAA5jB,iBAAA,KAAA4jB,EAAA5jB,iBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,oBAAA,KAAA4jB,EAAA5jB,mBAAA,KAAA4jB,EAAA5jB,kBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,oBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,kBAAA,KAAA4jB,EAAA5jB,iBAAA,KAAA4jB,EAAA5jB,oBAAA,KAAA4jB,EAAA5jB,kBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,kBAAA,KAAA4jB,EAAA5jB,mBAAA,KAAA4jB,EAAA5jB,iBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,oBAAA,KAAA4jB,EAAA5jB,gBAAA,KAAA4jB,EAAA5jB,iBAAA,KAAA4jB,EAAA5jB,+BAyDM6jB,CAAKJ,IAFRhb,OAAA,IAAAoY,GAAA,aAFI2C,EAAA,OAoyBX,mWCz5BJ,IAAaM,GACT,SAAAA,EAAYC,EAAe/jB,EAAKxU,EAAMkT,GAAQslB,GAAA90B,KAAA40B,GAC1C50B,KAAK60B,cAAgBA,EACrB70B,KAAK8Q,IAAMA,EACX9Q,KAAK1D,KAAOA,EACZ0D,KAAKwP,OAASA,GAGTulB,GAAb,WACI,SAAAA,EAAYC,EAAUC,EAAUpoB,EAAa2C,EAAQ0lB,GAAOJ,GAAA90B,KAAA+0B,GACxD/0B,KAAKg1B,SAAWA,EAChBh1B,KAAKi1B,SAAWA,EAChBj1B,KAAK6M,YAAcA,EACnB7M,KAAKwP,OAASA,EACdxP,KAAKk1B,MAAQA,EANrB,OAAAC,GAAAJ,IAAA13B,IAAA,WAAAN,MAAA,WASQ,OAAOq4B,GAASp1B,SATxB3C,IAAA,SAAAN,MAAA,SAWWkH,GACH,OAAOoxB,GAAOr1B,KAAMiE,MAZ5B5G,IAAA,YAAAN,MAAA,SAcckH,GACN,OAAOqxB,GAAQt1B,KAAMiE,OAf7B8wB,EAAA,GAkBO,SAASQ,GAAYv4B,GACxB,OAAqB,MAAdA,EAAEi4B,SAAmBj4B,EAAEi4B,cAE3B,SAASI,GAAO3f,EAAIE,GACvB,OAAOF,EAAGsf,WAAapf,EAAGof,UACnB1mB,GAAgBinB,GAAY7f,GAAK6f,GAAY3f,GAAKyf,IAItD,SAASC,GAAQ5f,EAAIE,GACxB,OAAIF,EAAGsf,WAAapf,EAAGof,SACZtf,EAAGsf,SAAWpf,EAAGof,UAAY,EAAI,EAGjCrmB,GAAkB4mB,GAAY7f,GAAK6f,GAAY3f,GAAK0f,IAG5D,SAASE,GAAKR,EAAUC,GAC3B,OAAO,IAAIF,GAASC,EAAUC,GAK3B,SAASQ,GAAMT,EAAUC,EAAUpoB,EAAaqoB,GACnD,IAAMl4B,EAAI,IAAI+3B,GAASC,EAAUC,EAAUpoB,EAAa,KAAM,kBAAMqoB,IAAQ/nB,IAAI,SAAC/M,EAAG7F,GAAJ,MAAuB,iBAAN6F,EAAiB,IAAIw0B,GAAS53B,EAAGzC,EAAG6F,GAAK,IAAIw0B,GAAS53B,EAAGzC,EAAG6F,EAAE,GAAIA,EAAE,QACrK,OAAOpD,EAEJ,SAAS04B,KAAmB,QAAAnrB,EAAAC,UAAA/P,OAAVw6B,EAAUvqB,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAVsqB,EAAUtqB,GAAAH,UAAAG,GAC/B,OAAO,IAAIoqB,GAAS,gBAAkBE,EAASx6B,OAAQ,kBAAMw6B,IAK1D,SAASU,GAAOC,EAASC,GAC5B,OAAO,IAAId,GAAS,qCAAsC,kBAAOa,EAASC,KAEvE,SAASC,GAAOC,GACnB,OAAO,IAAIhB,GAAS,uCAAwC,kBAAOgB,KAEhE,SAASC,GAAKD,GACjB,OAAO,IAAIhB,GAAS,4CAA6C,kBAAOgB,KAKzD,IAAIhB,GAAS,iBAAzB,IACMkB,GAAO,IAAIlB,GAAS,8BAEpBmB,IADO,IAAInB,GAAS,eACX,IAAIA,GAAS,kBACtBoB,GAAO,IAAIpB,GAAS,kBAKpBqB,IAJO,IAAIrB,GAAS,gBACZ,IAAIA,GAAS,eACb,IAAIA,GAAS,gBACZ,IAAIA,GAAS,iBACd,IAAIA,GAAS,iBACZ,IAAIA,GAAS,iBACZ,IAAIA,GAAS,iBACb,IAAIA,GAAS,iBACb,IAAIA,GAAS,kBAC7B,SAASsB,GAAKC,GACjB,GAAI5rB,MAAMqC,QAAQupB,GACd,OAAOA,EAAK,GAEX,GAAIA,aAAgB1B,GACrB,OAAO0B,EAAKh6B,KAGZ,IAAM/B,EAAI+7B,EAAKtB,SAASuB,YAAY,KACpC,OAAc,IAAPh8B,EAAW+7B,EAAKtB,SAAWsB,EAAKtB,SAASwB,OAAOj8B,EAAI,GAG5D,SAAS66B,GAASp4B,GACrB,IAAMy5B,EAAoB,MAAdz5B,EAAEi4B,UAAqByB,GAAQ15B,MAAKA,EAAEi4B,WAClD,OAAIwB,EAAIh8B,OAAS,EACNuC,EAAEg4B,SAAW,IAAMyB,EAAItpB,IAAIioB,IAAUhoB,KAAK,KAAO,IAGjDpQ,EAAEg4B,SAOV,SAAS0B,GAAQ15B,GACpB,OAAOA,EAAEg4B,SAAS2B,SAAS,MAgBxB,SAASC,GAAc55B,GAC1B,GAAe,MAAXA,EAAEk4B,MACF,OAAOl4B,EAAEk4B,QAGT,MAAM,IAAI12B,MAASxB,EAAEg4B,SAAf,4BAWP,SAAS6B,GAAiB75B,GAC7B,GAAI85B,GAAQ95B,GACR,OAAOA,EAAEi4B,WAGT,MAAM,IAAIz2B,MAASxB,EAAEg4B,SAAf,wBAYP,SAAS+B,GAAQ/5B,GACpB,OAAkB,MAAXA,EAAEk4B,MAKN,SAAS4B,GAAQ95B,GACpB,OAAOA,EAAEg4B,SAASgC,WAAW,uFC3IGpG,SACtBA,oBAEIoC,GAAA,iBAEHpC,cAEIqG,EAAAC,SAAA7F,GAAA4F,EAAAC,UAs3Bft8B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GAn3BO6jB,GADAC,GAAA8D,GAAA,IAAAxF,GAAA,aAFQN,EAAA,MAs3Bf,MAj3BO9N,GAAA,SACE6T,GADF,GACE,IAAAA,EAAAtmB,IADF,OAGgBumB,EAAOD,EAAA5nB,OAAA,GAHvB,gBAzBgB8nB,EAAAC,SAAAjD,GAAAgD,EAAAC,UA04BvB38B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA14BuB+kB,EAAA,GA04BvB,MA14BuBA,EAAA,IA4BOkD,CAAAH,EAAA,GAAAA,EAAA,IAHvB,OAEWI,EAAOL,EAAA5nB,OAAA,GAFlB,gBA9BW0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,UA+4BlBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA/4BkBiS,EAAA,GA+4BlB,MA/4BkBA,EAAA,IAgCOkW,CAAAD,EAAA,GAAAA,EAAA,MAPVpG,EAAA,2RA6CmBsG,SACxBA,cAEI,OAFJA,GAEInoB,OAAA,GAAAsB,IAEUkiB,GAAA,eADEA,GAAA,wBAEf2E,cAECC,EAAAC,SAAAC,GAAAF,EAAAC,UAi0BZj9B,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GA7zBO6jB,GADAC,GAAA0E,GADArG,GAAA6B,GAAA,IAAAb,GAAA,6BAAAf,GAAA,aAFKmG,EAAA,OAi0BZ,MA3zBOvU,GAAA,SACEyU,GADF,GACE,IAAAA,EAAAlnB,IADF,OAGSmnB,EAAQD,EAAAxoB,OAAA,GAHjB,gBAlCS0oB,EAAAC,SAAAC,GAAAF,EAAAC,UA61BhBv9B,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GA71BgB6oB,EAAA,GA61BhB,MA11BS7U,GAAA,SAAe8U,GAAf,MAAmBC,EAAJD,EAAA7oB,OAAA,GAAf,OAA2B+oB,GAAAD,EAAA,GAAAA,EAAA,KAHpBF,EAAA,KAqCQI,CAAAP,EAAA,GAAAA,EAAA,IAHjB,OAESze,EAAQwe,EAAAxoB,OAAA,GAFjB,gBA1CSipB,EAAAC,SAAAnH,GAAAkH,EAAAC,UAq2BhB99B,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GAr2BgBgiB,EAAA,GAq2BhB,MAl2BShO,GAAA,SAAe4O,GAAf,MAAmBwG,EAAJxG,EAAA3iB,OAAA,GAAf,OAA2B+oB,GAAAI,EAAA,GAAAA,EAAA,KAHpBpH,EAAA,KA4CQqH,CAAApf,EAAA,GAAAA,EAAA,MARZse,EAAA,iBCzEIe,EAAQC,UAChBD,EAAQC,MAEUA,oBAGRC,UAAAC,GAAAjC,GAAAgC,eAEAE,UAAAD,GAAAlC,GAAAmC,eAYMC,iBAEbC,WAZKC,UACN/C,GAAA+C,GAAA92B,QAAA,6BAWC+2B,CADDH,MAAA,MACCC,MAAKG,EADNH,aACkBI,WAPVC,UACRnD,GAAAmD,GAAAl3B,QAAA,iCAMkBm3B,CADlBP,GAAA,MACkBK,OAAZD,EADNC,+BAMK/S,GAAA,SAAiBpmB,EAAU4H,GAA3B,OAAgC5H,EAAA,IAAU4H,YAhChDkI,EAAEvR,EAAE+0B,UAAIxjB,EAAEwjB,EAAE/0B,GA+BN+6B,CAAA5W,GAAAvJ,GAAmB+f,EAAnB/f,MADAgK,GAAAoW,GADAhW,GADH4R,GAAA2D,qBAKFU,EAAAC,GAPAX,MAAA,MAOAU,SAMiB,IADZxsB,GAAA,SADAuW,GADAlD,GAAAkZ,GADA9C,GATL+C,GAUKlvB,SAGY,OACL,iBAAA2rB,GAdZ6C,WAkBK1S,GAAA,SAAiBsT,EAAUC,GAA3B,OAAgCD,EAAA,OAAaC,GAD7CxW,GAAAoW,GADAhW,GADH4R,GAAA2D,aAKA7C,GApBF6C,iBAsBYc,SAEhBC,EAAAJ,GADIG,MAAA,MACJC,SAMiB,IADZ7sB,GAAA,SADAuW,GADAlD,GAAAkZ,GADA9C,GAHDoD,GAICvvB,SAGY,WACjBwvB,EAAAC,GARIH,MAAA,MAQJE,SACMhF,EAAQ0B,GATVsD,GAUEE,EACG9nB,GAAW4iB,GAAX,qBAMJ9nB,GAAA,SADAqT,GAAA4V,GZ8HR,SAAkBgE,EAAUC,GACjC,IAAMC,EAAoD,EL2KrD,SAAa3jB,EAAUxW,EAAG4H,GAC7B,OAAO4O,EAASxW,EAAG4H,GAAK,EAAI5H,EAAI4H,EK5KjB9B,CAAOwI,GAAmB,EAAG2rB,GAC9C,OAAOC,EAASx8B,MAAM,EAAGy8B,GYjIZC,CAAA,EADFtF,GAEExqB,QACuB0vB,SACvBT,GAAeK,gBAeFS,EAAoBrxB,UAGrC+Z,GAAA,SACMuX,GADN,OAWQ/W,GAFAlD,GAAA,SAAgBwF,GAAhB,OAAgBA,EAAA,GAAAA,EAAA,GACU7c,IAH1BqX,GAAA,SACMka,GADN,OACctE,GAAAqE,GAAWE,GAAaD,KAHlCla,GAAA,SAAe9gB,GAAf,OAAoBA,EAAA,IFkFpC,SAA4Bk7B,GAC/B,OAAqB,MAAdA,EAAIrrB,UAAsBqrB,EAAIrrB,OAAOrC,IAAI,SAACnQ,EAAGzC,GAAJ,OAAW,OAASA,EAAGyC,KEtF9C89B,CAAAJ,GAGNhwB,OAEJA,OAEAA,SAVRiZ,GADHiT,GAAyB6D,iBAqBdM,EACX/C,SACEgD,EAAAb,GADFnC,MAAA,MACEgD,UAAWC,GADbD,EACkCD,UAChCG,EAAArB,GAFF7B,MAAA,MAEEkD,mBARiBC,EAAIC,UAGpBjY,GAAA,SAAciU,GAAd,OAAciE,GAAAD,EAAAhE,IADdzT,GADHkT,GAA4BsE,KAOfG,CAFbJ,EAEkCH,4BAUtBQ,UACZC,GAAAjiB,GAAAkiB,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAApiB,SAAA,IAAAqiB,GAAA,UAAAriB,QAAA,IAAAsiB,GAAA,SAAAtiB,QAAA,IAAAuiB,GAAA,iBAAAviB,IAAA,SAAAwiB,MAAA,UAAAxiB,SAAA,OAAAA,WAAA,IAAAuiB,GAAA,iBAAAviB,QAAA,OAAAA,WAAA,IAAAuiB,GAAA,iBAAAviB,QAAA,OAAAA,6BAAA,IAAAqiB,GAAA,UAAAriB,KAQyBgK,GAAA,SAASyY,GAAT,gBAhBdC,EAAAC,EAAAC,SAAAC,GAAAH,EAAAC,EAAAC,GACME,EAAbD,EAAA,GAAOE,EAAPF,EAAA,GAACG,EAADH,EAAA,6DAEaG,yEAC4BD,wCAC5BD,oBAWiBG,CAAAR,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAtBT,KARZhiB,oBAcWkjB,EAAQC,EAAQC,SACvBC,WAAQC,EAA0BC,MAC5B,MAAAD,qBACMxB,GAAUyB,EAAVD,WAKbE,GAHHja,GAAC8Z,EAAOH,EAAP,aACC3Z,GAAC8Z,EAAOF,EAAP,YACAE,EAAOD,EAAP,qBC3IDtI,IAAA9a,QAAA,UAAAA,WAEI8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,SAAA,UAAAA,WAEH8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,YAAA7a,SAAA,OAAAA,WAEC8a,IAAA9a,GAAAyjB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA3jB,SAAA,QAAAA,WAEC8a,IAAA9a,QAAA,SAAAA,WAED8a,IAAA9a,GAAAyjB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA3jB,SAAA,QAAAA,WAEE8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAgJ,GAAA,eAAA5jB,SAAA,UAAAA,WAEF8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAgJ,GAAA,aAAA5jB,SAAA,QAAAA,WAED6jB,GAAA7jB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,gBAEGjJ,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAoJ,GAAA,eAAAhkB,SAAAikB,GAAAjkB,WAEF8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAoJ,GAAA,aAAAhkB,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,UAAAikB,GAAAjkB,WAEG8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAsJ,GAAA,gBAAAlkB,SAAA,WAAAA,WAEF8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAsJ,GAAA,cAAAlkB,SAAA,SAAAA,WAEC8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,cAAAsJ,GAAA,eAAAlkB,SAAA,UAAAA,iIC3BS2Z,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAWuK,EAAXlc,EAAA,GAAAhS,OAAA,UAg5BnB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,GAh5BmBiS,EAAA,GAg5BnB,OA/4ByBkc,gBAuBI9M,SACnBA,cAKCoC,GAHG,OAFJpC,GAEIphB,OAAA,GAAAsB,IAGH,gCACA8f,cAEE+M,EAAAC,SAAAC,GAAAF,EAAAC,UA+2BbhjC,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,GA32BO6jB,GADAC,GAAAyK,GADApM,GAAA6B,GAAA,IAAAb,GAAA,mCAAAf,GAAA,aAFMkM,EAAA,OA+2Bb,MAz2BO1wB,GAAA,SACE4wB,GADF,GACE,IAAAA,EAAAjtB,IADF,OAGWtU,EAAKuhC,EAAAvuB,OAAA,GAHhB,OAGgBwuB,GAAAxhC,EAAA,GAAAA,EAAA,IAHhB,OAEUyhC,EAAKF,EAAAvuB,OAAA,GAFf,kBA1BiB0uB,EAAAC,SAAA/G,GAAA8G,EAAAC,UAm4BxBvjC,OAAAw1B,GAAA,cAAAx1B,CAAA,WAAA2U,GAn4BwB6nB,EAAA,GAm4BxB,MAj4BSjqB,GAAA,SACIixB,GADJ,GACI,IAAAA,EAAAttB,IADJ,OAGWutB,EAAOD,EAAA5uB,OAAA,GAHlB,OAGkB8uB,EAAAD,EAAA,GAAAA,EAAA,IAHlB,OAEYE,EAAOH,EAAA5uB,OAAA,GAFnB,OAEmBwuB,GAAAO,EAAA,GAAAA,EAAA,MAJJnH,EAAA,KA4BFkH,CAAAL,EAAA,GAAAA,EAAA,MARTJ,EAAA,iBCjCgBjN,SACnBA,cAKCoC,GAHG,OAFJpC,GAEIphB,OAAA,GAAAsB,IAGH,8BACA8f,cAEA4N,UA+4BX5jC,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GA34BO6jB,GADAC,GAAAoL,GADA/M,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aADQ6M,MA84Bf,MAAAjlB,yVApzB6B6X,SACnBA,oBAEI4B,GAAA,uBAEH5B,cAEMkG,EAAAC,SAAAa,GAAAd,EAAAC,GAAYmH,EAAZtG,EAAA,MAAiBuG,EAAjBvG,EAAA,MAAMwG,EAANxG,EAAA,aAqyBjBx9B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAjyBO6jB,GADAC,GAAAwL,GADAnN,GAAA6B,GAAA,IAAAb,GAAA,mCAAAf,GAAA,aAFUyG,EAAA,OAqyBjB,gBAnzBIjG,MAAA,MAAAA,EAAA3iB,OAAA,UACgBsvB,EADhB3M,EAEI3iB,OAAA,UAizBR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAAmkC,UAAA,yBA/yBoBD,WA2vBHE,cACX,MAAAA,OAAiBA,GA5uBdC,CAAIL,GAuzBbhkC,OAAAw1B,GAAA,cAAAx1B,CAAAw1B,GAAA,eApzBYjjB,GAAA,SACGiqB,GADH,GACG,IAAAA,EAAAtmB,IADH,OAGY6D,EAAKyiB,EAAA5nB,OAAA,GAHjB,OAGiB0vB,GAAAvqB,EAAA,GAAAA,EAAA,IAHjB,OAEgBwqB,GAAA/H,EAAA5nB,OAAA,KAEdkvB,aApCVnN,MAAA,MAAAA,EAAA/hB,OAAA,UACmB4vB,EADnB7N,EAEI/hB,OAAA,MADoB6vB,EADxB9N,EAEI/hB,OAAA,aAAA6kB,IAGOjB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,uCAAAf,GAAA,aADOyN,KAEAC,WAmwBL7iC,cACX,MAAAA,OAAiBA,GApuBd8iC,CAAIX,iBCzHgB/N,SACnBA,cAKCoC,GAHG,OAFJpC,GAEIphB,OAAA,GAAAsB,IAGH,8BACA8f,cCPWA,SACZA,2CAMW2O,SACXA,oBAEIvM,GAAA,sBAEHuM,cAECrM,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAUuK,EAAVlc,EAAA,GAAAhS,OAAA,GACJma,EACA7D,GAAA0Z,GAFIhe,EAAA,WAk4BZ5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GA53BO6jB,GADAC,GAAAoM,GADA/N,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAHChI,EAAA,OAi4BR,OAQA/uB,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GAAAgK,GAAAga,GAAA,IAAAb,GAAA,qBAz4BQ/I,EAAA,IAy4BR,MAAApQ,MARA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,oBAx3BerB,gBCxBFxK,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAWuK,EAAXlc,EAAA,GAAAhS,OAAA,UAg5Bb5U,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAAmkC,UAAA,mBAQAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GAAAgK,GAAAga,GAAA,IAAAb,GAAA,wBAx5BalR,EAAA,IAw5Bb,MAAAjI,MARA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,oBA54BgBrB,gBCJM9M,SACZA,2CAMW2O,SACXA,oBAEIvM,GAAA,sBAEHuM,cAEIrM,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAUuK,EAAVlc,EAAA,GAAAhS,OAAA,GACPma,EACA7D,GAAA4Z,GAFOle,EAAA,WAk4Bf5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GA53BO6jB,GADAC,GAAAsM,GADAjO,GAAA6B,GAAA,IAAAb,GAAA,qCAAAf,GAAA,aAHChI,EAAA,OAi4BR,OAQA/uB,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GAAAgK,GAAAga,GAAA,IAAAb,GAAA,wBAz4BQ/I,EAAA,IAy4BR,MAAApQ,MARA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,oBAx3BerB,oKCQc6B,SACnBA,cAKCvM,GAHG,OAFJuM,GAEIzuB,IAGH,kCACAyuB,cAEMrM,EAAAC,uBAAA3R,GAAA0R,EAAAC,UAu2BjBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA2U,GAp2BO6jB,GADAC,GAAAuM,GAAA,IAAAjO,GAAA,aAFUnQ,EAAA,MAu2BjB,OAl2BgB,IALCA,EAAA,GAKD1Q,KAEGvW,EAPFinB,EAAA,GAOOhS,OAAA,GAAA2vB,GAAM5kC,IAFd,IALCinB,EAAA,GAKD1Q,KAGGlU,EARF4kB,EAAA,GAQOhS,OAAA,GAAAqwB,GAAAjjC,EAAA,GAAAA,EAAA,KAHR,IALC4kB,EAAA,GAKD1Q,KAIIgvB,EATHte,EAAA,GASQhS,OAAA,GAAA0vB,GAAAY,EAAA,GAAAA,EAAA,KAJT,IALCte,EAAA,GAKD1Q,KAKIivB,EAVHve,EAAA,GAUQhS,OAAA,GAAAwwB,GAAAD,EAAA,GAAAA,EAAA,MAJHE,EANLze,EAAA,GAMUhS,OAAA,GAAA0wB,GAAAD,EAAA,GAAAA,EAAA,cA7BA3P,SAYpB9zB,EAXHwoB,GAAA,SACU4L,GADV,IAAAmC,EAAAoN,EAAA5Q,EAAA,OAAArlB,GAEc0mB,EAFdwP,KAGmCrN,EAHnC3oB,GAEcwmB,GA23BlBh2B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,sBAz3BsB,IAAAhM,EAAAjiB,KAEEqvB,EAAWpN,EAAAvjB,OAAA,GAu3BnC+J,GAv3B2C4mB,EAu3B3C5mB,QAx3B0BgW,EAAWwD,EAAAvjB,OAAA,GAw3BrC+J,GAx3B6CgW,EAw3B7ChW,SA73BI,MAUI+W,UAg0BF,MA/zBC9zB,SAsBE6jC,CAXQ7e,EAAA,6ECpBL0R,EAAAC,SAAA3R,GAAA0R,EAAAC,UA23BZv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAx3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFKnQ,EAAA,MA23BZ,MAt3BOrU,GAAA,SACEiqB,GADF,OACEA,EADFtmB,KAAA,cAGequB,GAAA/H,EAAA5nB,OAAA,IAHf,cAIeiL,EAAK2c,EAAA5nB,OAAA,GAAA8wB,EAAA7lB,EAAA,GAJpB,OAIoB8lB,GAAA9lB,EAAA,GAAA6lB,GAJpB,cAKUpkC,EAAKk7B,EAAA5nB,OAAA,GALf,gBLjBK0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAWuK,EAAXlc,EAAA,GAAAhS,OAAA,UAu4BZ5U,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GAn4BO6jB,GADAC,GAAAmN,GADA9O,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFKnQ,EAAA,OAu4BZ,OAj4Bekc,IKgBO+C,CAAAvkC,EAAA,GAAAA,EAAA,IALf,cAMUU,EAAKw6B,EAAA5nB,OAAA,GANf,OAMeqwB,GAAAjjC,EAAA,GAAAA,EAAA,IANf,cAOWf,EAAKu7B,EAAA5nB,OAAA,GAPhB,OAOgB0vB,GAAArjC,EAAA,GAAAA,EAAA,IAPhB,cAQW8Y,EAAKyiB,EAAA5nB,OAAA,GARhB,OAQgBwwB,GAAArrB,EAAA,GAAAA,EAAA,IARhB,cASa3X,EAAKo6B,EAAA5nB,OAAA,GATlB,gBC1BQ0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAWuK,EAAXlc,EAAA,GAAAhS,OAAA,UAg5Bf5U,OAAAw1B,GAAA,cAAAx1B,CAAA,WAAA2U,GA74BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFQnQ,EAAA,MAg5Bf,OA54B6Bkc,ID+BJgD,CAAA1jC,EAAA,GAAAA,EAAA,IATlB,cAUekC,EAAKk4B,EAAA5nB,OAAA,GAVpB,OAUoBmxB,GAAAzhC,EAAA,GAAAA,EAAA,IAVpB,eAEa80B,EAAKoD,EAAA5nB,OAAA,GAFlB,OAEkB0wB,GAAAlM,EAAA,GAAAA,EAAA,OAPbxS,EAAA,cEjBZof,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,gCAAAvnB,GAAA,IAAAsnB,GAAA,cAAAtnB,GAAAga,GAAA,IAAAb,GAAA,0BAAAnZ,MAAA,IAAAunB,GAAA,0BAAAvnB,WAKAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,mBAAAvnB,GAAA,IAAAsnB,GAAA,UAAAtnB,GAAAga,GAAA,IAAAb,GAAA,4CAAAnZ,kBAOAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,4BAAAvnB,GAAA,IAAAsnB,GAAA,gBAAAtnB,MAAA,IAAAwnB,GAAA,kBAAAxnB,GAAA,IAAAynB,GAAA,UAAAznB,GAAAga,GAAA,IAAAb,GAAA,gDAAAnZ,UAAA,IAAAynB,GAAA,YAAAznB,QAAA,IAAA0nB,GAAA,YAAA1nB,KAAA,IAAAunB,GAAA,yBAAAvnB,GAAA,IAAA0nB,GAAA,YAAA1nB,KAAA,IAAAunB,GAAA,2BAAAvnB,gBAAA,IAAA2nB,GAAA,uBAAA3nB,GAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,sBAAAvnB,GAAA,IAAAsnB,GAAA,gBAAAtnB,MAAA,IAAAwnB,GAAA,wBAAAxnB,GAAA,IAAAynB,GAAA,UAAAznB,GAAAga,GAAA,IAAAb,GAAA,kDAAAnZ,aAAA,IAAA2nB,GAAA,eAAA3nB,QAAA,OAAAA,wBAgBAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,qBAAAvnB,GAAA,IAAAsnB,GAAA,WAAAtnB,GAAAga,GAAA,IAAAb,GAAA,qBAAAnZ,MAAA,IAAAunB,GAAA,mBAAAvnB,GAAA,IAAAsnB,GAAA,WAAAtnB,GAAAga,GAAA,IAAAb,GAAA,qBAAAnZ,MAAA,IAAAunB,GAAA,qBAAAvnB,YAQAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,uBAAAvnB,GAAA,IAAAsnB,GAAA,YAAAtnB,QAAA,IAAA0nB,GAAA,YAAA1nB,KAAA,IAAAunB,GAAA,sBAAAvnB,GAAA,IAAA0nB,GAAA,YAAA1nB,KAAA,IAAAunB,GAAA,sBAAAvnB,GAAA,IAAA0nB,GAAA,YAAA1nB,KAAA,IAAAunB,GAAA,uBAAAvnB,qBAQAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,GAAAyjB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA3jB,MAAA,IAAAunB,GAAA,oBAAAvnB,GAAA,IAAAsnB,GAAA,UAAAtnB,GAAAga,GAAA,IAAAb,GAAA,0CAAAnZ,GAAAyjB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA3jB,WAAA,IAAAsnB,GAAA,WAAAtnB,GAAAyjB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA3jB,MAAA,IAAAunB,GAAA,oBAAAvnB,GAAA,IAAAsnB,GAAA,YAAAtnB,GAAAyjB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA3jB,SAAA,IAAA0nB,GAAA,YAAA1nB,KAAA,IAAAunB,GAAA,oBAAAvnB,qBAQAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,gCAAAvnB,GAAA,IAAAsnB,GAAA,YAAAtnB,KAAA,IAAAunB,GAAA,yCAAAvnB,WAKAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,0BAAAvnB,GAAA,IAAAsnB,GAAA,cAAAtnB,GAAAga,GAAA,IAAAb,GAAA,gDAAAnZ,MAAA,IAAAunB,GAAA,eAAAvnB,WAOAqnB,GAAArnB,QAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,0BAAAvnB,GAAA,IAAAsnB,GAAA,gBAAAtnB,GAAA4nB,GAAA,IAAAf,GAAA,oCAAA7mB,MAAA,IAAA6nB,GAAA,UAAA7nB,GAAAga,GAAA,IAAAb,GAAA,0CAAAnZ,YAAA,IAAAsnB,GAAA,WAAAtnB,KAAA,IAAAunB,GAAA,4BAAAvnB,GAAA,IAAAsnB,GAAA,gBAAAtnB,GAAA4nB,GAAA,IAAAf,GAAA,oCAAA7mB,MAAA,IAAA6nB,GAAA,UAAA7nB,GAAAga,GAAA,IAAAb,GAAA,0CAAAnZ,gNC5C4B2Z,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAckO,EAAd7f,EAAA,MAAAhS,OAAA,GAA0B8xB,EAA1B9f,EAAA,MAAAhS,OAAA,GAAoC+xB,EAApC/f,EAAA,MAAAhS,OAAA,UAw3B5B5U,OAAAw1B,GAAA,cAAAx1B,CAAA,UAAA2U,GAr3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,iCAAAf,GAAA,aAFqBnQ,EAAA,MAw3B5B,OAAA5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,WAAAmkC,UAAA,iCAj4BuByC,MACb,MAAAA,SAMFpE,GAAA7jB,GAAAga,GAAA,IAAAb,GAAA,wBAAAnZ,MAAA,IAAA8jB,GAAA,aAAAC,GAAA,yBALS/I,EACTiN,EAAA,GADIzO,EACJyO,EAAA,UAAApE,GAEGhK,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,4BAAAf,GAAA,aADcoB,KAELwB,IAWPkN,CAAWJ,GAi3BxB,KA/2BmBC,IA+2BnB1mC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,sBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAAmkC,UAAA,qBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAAmkC,UAAA,gBAz2B+CwC,gFAQ/BjK,EAAAC,SAAAjD,GAAAgD,EAAAC,UAi2BhB38B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAj2BgB+kB,EAAA,GAi2BhB,MA91BSnnB,GAAA,SACQkkB,GADR,MACaqQ,EAALrQ,EAAA7hB,OAAA,GAAcmyB,EAAAD,EAAA,GADtB,OACsBE,GAAAF,EAAA,GAAAC,IAJfrN,EAAA,cC9ChBuN,GAAAtoB,QAAA,IAAAuoB,GAAA,UAAAvoB,MAAA,IAAAwoB,GAAA,sBAAAC,GAAA,6BAAAC,GAAA,SAAA1oB,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBA/4BA2e,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBA/4BA2e,cAAA,IAAAuoB,GAAA,UAAAvoB,MAAA,IAAAwoB,GAAA,sBAAAC,GAAA,6BAAAC,GAAA,SAAA1oB,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBA/4BA2e,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBA/4BA2e,sBAeAsoB,GAAAtoB,QAAA,IAAAuoB,GAAA,UAAAvoB,MAAA,IAAAwoB,GAAA,aAAAxoB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,oBAAA0E,GAAA,6BAAAC,GAAA,SAAA1oB,GAg4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBAh4BA2e,GAg4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBAh4BA2e,cAAA,IAAAuoB,GAAA,UAAAvoB,MAAA,IAAAwoB,GAAA,aAAAxoB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,iBAAA0E,GAAA,6BAAAC,GAAA,SAAA1oB,GAg4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBAh4BA2e,GAg4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,wBAh4BA2e,ySCKkBqX,SACRA,aACiBmC,KADjBnC,UAEI,IAAAmC,EAAAjiB,IAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,IAEUkiB,GAAA,aAFV,IACJD,EADIvjB,OAAA,GAAAsB,IAGUkiB,GAAA,aAHV,IACJD,EADIvjB,OAAA,GAAAsB,IAIekiB,GAAA,aAHAA,GAAA,aAIdpC,SACJA,cASWqB,SAcfz1B,EAbHwoB,GAAA,SACU2S,GADV,IAAA6G,EAAA,OAAAt0B,GAEcytB,EAFduK,IAUexxB,GADAA,GALG,KADa8tB,EAH/Bp0B,GAEcutB,IAEI7mB,IAAA,IACJ0tB,EADIhvB,OAAA,GAAAsB,IAKH,OALG,IACJ0tB,EADIhvB,OAAA,GAAAsB,IAKH,mCAAWqxB,GAAX,WAAAzP,GAAA,eAAWyP,KACX,cAAWC,GAAX,gBAlBMC,SACjB/R,EAGG8C,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,uCAAAf,GAAA,aAAApY,GADQ8oB,EACR9oB,gBA62BX3e,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GA32BQ+gB,EA22BR,UA91B8BgS,CAAA/O,GAAA6O,MAV1B,MAYInQ,MAyyBF,MAxyBCz1B,mCAcM02B,EAAAC,SAAA3R,GAAA0R,EAAAC,UA60Bbv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,YAz1BoBgzB,EAAUzP,MACpB,IAAAyP,EAAAzxB,WAEuDsiB,GAAvC1B,IAgqBnB,eAhqBC6Q,EAAA/yB,OAAA,IAAkB,IAAAmiB,GAAA,aAATmB,YACNA,EAaJp0B,CALM8iB,EAAA,GAIN4R,GADAC,GAAAmP,GADA9Q,GAAA6B,GAAA,IAAAb,GAAA,8BAAAf,GAAA,aAFMnQ,EAAA,QA60Bb,gBAn1BkBihB,MACR,IAAAA,EAAA3xB,WACA4xB,EACFD,EAAAjzB,OAAA,UAw1BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA+nC,IAx1BoBD,MAw1BpBnpB,aA5DiBqpB,cACX,MAAAA,OAAiBA,GAnxBdC,CAPIrhB,EAAA,IAQJshB,GARIthB,EAAA,eCpEPuhB,GAAAxpB,KAAA,IAAAypB,GAAA,sBAEGD,GAAAxpB,KAAA,IAAAypB,GAAA,mCAEID,GAAAxpB,GAAA0pB,GAAA,IAAAf,GAAA,aAAAgB,GAAA,kBAAA3pB,MAAA,IAAAypB,GAAA,sBAELD,GAAAxpB,GAAA0pB,GAAA,IAAAf,GAAA,aAAAgB,GAAA,aAAA3pB,MAAA,IAAAypB,GAAA,sBAECD,GAAAxpB,KAAA,IAAAypB,GAAA,sBAEDD,GAAAxpB,GAAA0pB,GAAA,IAAAf,GAAA,aAAAgB,GAAA,aAAA3pB,MAAA,IAAAypB,GAAA,sBAEKD,GAAAxpB,GAAA0pB,GAAA,IAAAf,GAAA,aAAAgB,GAAA,kBAAA3pB,MAAA,IAAAypB,GAAA,sBAEFD,GAAAxpB,GAAA0pB,GAAA,IAAAf,GAAA,iBAAAiB,GAAA,cAAA5pB,MAAA,IAAAypB,GAAA,4CCZS1S,EAAM8S,UAKnBhQ,GAHAqB,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,yBAAAnZ,IAutBA,aArtBoB6pB,GAFpB7pB,OAAA,IAAAoY,GAAA,aADQrB,4EAkBH4C,EAAAC,EAAAkQ,SAAA7hB,GAAA0R,EAAAC,EAAAkQ,GAAiBC,IAAjB9hB,EAAA,GAAAhS,OAAA,MACF,IADEgS,EAAA,GACF1Q,WAGSyjB,EAJP/S,EAAA,GAKJhS,OAAA,aAAA6kB,IAAQkP,GALJ/hB,EAAA,GAKJhS,OAAA,MAAoB8zB,GAAO/O,OAJzB,IADE/S,EAAA,GACF1Q,WAKiB2xB,EANfjhB,EAAA,GAOJhS,OAAA,MADMg0B,EANFhiB,EAAA,GAOJhS,OAAA,aAq3BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GAr3Bag0B,GAAQC,EAAYF,GAq3BjC,MAr3BwCb,MAN9B,IADEjhB,EAAA,GACF1Q,WAOC2yB,EARCjiB,EAAA,GASJhS,OAAA,MADak0B,EARTliB,EAAA,GASJhS,OAAA,aAm3BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAn3Beg0B,GAAQE,EAASH,GAm3BhC,MAn3BuCI,MAR7B,IADEliB,EAAA,GACF1Q,WASE6yB,EAVAniB,EAAA,GAWJhS,OAAA,MADeo0B,EAVXpiB,EAAA,GAWJhS,OAAA,aAi3BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA2U,GAj3BgBg0B,GAAQI,EAAUL,GAi3BlC,MAj3ByCM,UAT3B7Q,EAFFvR,EAAA,GAGJhS,OAAA,MADW+yB,EAFP/gB,EAAA,GAGJhS,OAAA,aAAAuzB,GAAQQ,GAAQxQ,EAAIuQ,GAAOf,aCrB7BsB,GAAAtqB,KAAA,IAAAuqB,GAAA,iBAAAC,GAAA,SAAAxqB,QAAA,OAAAA,YAECsqB,GAAAtqB,KAAA,IAAAuqB,GAAA,iBAAAC,GAAA,UAAAxqB,QAAA,OAAAA,YAEEsqB,GAAAtqB,KAAA,IAAAuqB,GAAA,iBAAAC,GAAA,YAAAxqB,QAAA,SAAAA,YAEAsqB,GAAAtqB,KAAA,IAAAuqB,GAAA,iBAAAC,GAAA,YAAAxqB,GAAA0pB,GAAA,IAAAf,GAAA,aAAAgB,GAAA,aAAA3pB,MAAA,IAAAypB,GAAA,kMCEcpS,SACbA,aACgBmC,KADhBnC,UAEI,IAAAmC,EAAAvjB,OAAA,GAAAsB,IAEYkiB,GAAA,mBAFZ,IAAAD,EAAAvjB,OAAA,GAAAsB,IAGUkiB,GAAA,iBAFKA,GAAA,0CAKlBwL,UAq4BX5jC,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAj4BO6jB,GADA4Q,GAAAC,GAAA1Q,GAAA,IAAAb,GAAA,sCAAAf,GAAA,aAFH6M,KAo4BJ,MAAAjlB,qPCx4BmBqX,SACTA,aACgBmC,KADhBnC,UAEI,IAAAmC,EAAAvjB,OAAA,GAAAsB,IAEckiB,GAAA,wBAFd,IAAAD,EAAAvjB,OAAA,GAAAsB,IAGckiB,GAAA,wBAFCA,GAAA,iDAuBlBkR,EAAAC,SAAAC,GAAAF,EAAAC,GACFE,EAADD,EAAA,GAAch7B,EAAdg7B,EAAA,GAAA50B,OAAA,MAEE,IAAApG,EAAA0H,oBAXYmhB,UA62BtBr3B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAz2BO6jB,GADA4Q,GAAAM,GAAA/Q,GAAA,IAAAb,GAAA,6CAAAf,GAAA,aAAApY,GAAAga,GAAA,IAAAb,GAAA,oCAAAnZ,SA02BP,OAAA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,GAv2BkB0iB,EAu2BlB,YAh2BesS,CAASF,mBAvBH/T,EAAMjlB,UAu3B3BzQ,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA2U,GAj3BO6jB,GADA4Q,GAAAM,GAAA/Q,GAAA,IAAAb,GAAA,yCADAhB,GAAA6B,GAAA,IAAAb,GAAA,oCADAhB,GAAA6B,GAAA,IAAAb,GAAA,UAAarnB,IAAb,IAAAsmB,GAAA,aAFHrB,OAs3BJ,UAj2BuBkU,CAASH,EAATj7B,EAAAoG,OAAA,wLC5BAohB,SACbA,aACkBmC,KADlBnC,UAEI,IAAAmC,EAAAvjB,OAAA,GAAAsB,IAEekiB,GAAA,cAFf,IAAAD,EAAAvjB,OAAA,GAAAsB,IAGgBkiB,GAAA,eAFFA,GAAA,qCAKdE,EAAAC,SAAAmB,GAAApB,EAAAC,UAo3Bdv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAA2U,GAh3BO6jB,GADA4Q,GAAAS,GAAAlR,GAAA,IAAAb,GAAA,+BADA+B,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,kCAAAnZ,MAAA,IAAAoY,GAAA,aAFO2C,EAAA,OAo3Bd,eAj4BI9S,MAAA,IAAAA,EAAA1Q,WAEuB0Q,EAAAhS,OAAA,aADRgS,EAAAhS,OAAA,SAkBZk1B,CANOpQ,EAAA,yLCba1D,SACjBA,aAGQ+T,KAHR/T,GAEIphB,OAAA,UACWo1B,GAAAD,EAAA,GAAAA,EAAA,yBCjBzBE,GAAAtrB,GAAAga,GAAA,IAAAb,GAAA,oCAAAnZ,mBAEeurB,UA44BflqC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmqC,OAAAhJ,MA14BoB+I,QA04BpBE,8EA93BAH,GAAAtrB,GAAA0rB,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA5rB,GAAAga,GAAA,IAAAb,GAAA,oCAAAnZ,GAAAga,GAAAwR,IAAAxrB,YAKAsrB,GAAAtrB,GAAA0rB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAA5rB,GAAAga,GAAA,IAAAb,GAAA,oCAAAnZ,GAAAga,GAAAwR,IAAAxrB,YAUA6rB,GAAA7rB,KAAA,IAAA8rB,GAAA,aAAAC,GAAA,oGAGAF,GAAA7rB,GAAAga,GAAA,IAAAb,GAAA,kBAAAnZ,GAAAga,GAAA,IAAAb,GAAA,kBAAAnZ,GAAAga,GAAA,IAAAb,GAAA,wDAAAnZ,GAAAga,GAAA,IAAAb,GAAA,yBAAAnZ,SAAA,IAAA8rB,GAAA,aAAAC,GAAA,uBDdapS,EAAAC,iBAAA3R,GAAA0R,EAAAC,GAAYkM,EAAZ7d,EAAA,GAAAhS,OAAA,GA03Bb5U,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,GAt3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,8BAAAf,GAAA,aAHMnQ,EAAA,MA03Bb,OAp3BSqjB,GAAMxF,IAC4B7iC,EAAlCwoB,GAAAugB,GAPI/jB,EAAA,IAu0BP,MAh0BqChlB,EAm3B3C,MAnDkBwiC,EAh0ByBxiC,EAg0BpBwiC,MC/yBvBwG,CAAAjsB,8BAAAksB,CAAA,IAAAC,GAAA,aAAAnsB,KAAA,IAAAosB,GAAA,sGAAApsB,MAAA,IAAAqsB,GAAA,UAAArsB,GAAAga,GAAA,IAAAb,GAAA,+EAAAnZ,wKC5BgCqX,SACtBA,aACqBmC,KADrBnC,mCAEI,IAAAmC,EAAAjiB,IAIM,OAAAzE,GAAV0mB,EAJIvjB,OAAA,QAAAujB,EAAAjiB,IAKQ,UAAAzE,GAAZ0mB,EALIvjB,OAAA,QAAAujB,EAAAjiB,IAMQ,UAAAzE,GAAZ0mB,EANIvjB,OAAA,QAAAujB,EAAAjiB,IAOQ,UAAAzE,GAAZ0mB,EAPIvjB,OAAA,QAAAujB,EAAAjiB,IAQQ,UAAAzE,GAAZ0mB,EARIvjB,OAAA,QAAAujB,EAAAjiB,IASQ,UAAAzE,GAAZ0mB,EATIvjB,OAAA,QACJujB,EADIvjB,OAAA,GAAAsB,kBAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,yCAYH8f,kKAqBqBiV,SACtBA,aACkBtH,KADlBsH,mCAEI,IAAAtH,EAAAztB,yCAKH+0B,cAEGvO,EAAAC,SAAAjD,GAAAgD,EAAAC,UAg1Bd38B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA50BO6jB,GADAC,GAAAyS,GADApU,GAAA6B,GAAA,IAAAb,GAAA,+BAAAf,GAAA,aAFO2C,EAAA,OAg1Bd,MA10BOnnB,GAAA,SACOkkB,GADP,MACcoG,EAAPpG,EAAA7hB,OAAA,GADP,gBAnCU0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,UA62BjBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAz2BO6jB,GADAC,GAAA0S,GADArU,GAAA6B,GAAA,IAAAb,GAAA,8BAAAf,GAAA,aAFUnQ,EAAA,OA62BjB,MA72BiBA,EAAA,IAoCYwkB,CAAAvO,EAAA,GAAAA,EAAA,KAPfnD,EAAA,4EAkBH2C,EAAAC,SAAA3F,GAAA0F,EAAAC,UA8zBXt8B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA3zBO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,iCAAAf,GAAA,aAFIJ,EAAA,MA8zBX,MAzzBOpkB,GAAA,SACOglB,GADP,MACWwG,EAAJxG,EAAA3iB,OAAA,GADP,OACmBy2B,GAAAtN,EAAA,GAAAA,EAAA,KANfpH,EAAA,kDCjFX2U,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,QAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,SA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,wBA/4BAhtB,WAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,SA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,yBA/4BAhtB,2BAMA2sB,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,GAAAitB,GAAA,IAAAC,GAAA,cAAAltB,SAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,SAy4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,wBAz4BAhtB,WAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,SAy4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,yBAz4BAhtB,2BAMA2sB,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,GAAAitB,GAAA,IAAAC,GAAA,cAAAltB,SAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,SAm4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,wBAn4BAhtB,WAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,cAAA/sB,SAm4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,yBAn4BAhtB,2BAMA2sB,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,QAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,GAAA8sB,GAAA,IAAAC,GAAA,gBAAA/sB,UA63BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,wBA73BAhtB,WAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,GAAA8sB,GAAA,IAAAC,GAAA,gBAAA/sB,UA63BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,GAAAgT,KAAA,yBA73BAhtB,iCCpBM6jB,GAAA7jB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,oBAEDF,GAAA7jB,GAAAmtB,GAAA,IAAAC,GAAA,aAAAC,GAAA,UAAArtB,MAAA,IAAA8jB,GAAA,aAAAC,GAAA,4FC6BQ7E,EAAAC,SAAAnH,GAAAkH,EAAAC,UAk3Bb99B,OAAAw1B,GAAA,cAAAx1B,CAAA,SAAA2U,GA/2BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,8BAAAf,GAAA,aAFMJ,EAAA,MAk3Bb,MA72BOpkB,GAAA,SACEiqB,GADF,OACEA,EADFtmB,KAAA,cAIY+1B,EACNzP,EAAA5nB,OAAA,GALN,gBAlCa0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,UA+4BpBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,UAAA2U,GA54BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,sCAAAf,GAAA,aAFanQ,EAAA,MA+4BpB,MA/4BoBA,EAAA,IAuCPslB,CAAAD,EAAA,GAAAA,EAAA,IALN,cAMWE,EACL3P,EAAA5nB,OAAA,GAPN,gBA1BY8nB,EAAAC,SAAAjD,GAAAgD,EAAAC,UAu4BnB38B,OAAAw1B,GAAA,cAAAx1B,CAAA,UAAA2U,GAp4BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,qCAAAf,GAAA,aAFY2C,EAAA,MAu4BnB,MAv4BmBA,EAAA,IAiCN0S,CAAAD,EAAA,GAAAA,EAAA,IAPN,eAEUE,EACJ7P,EAAA5nB,OAAA,GAHN,gBAlBWynB,EAAAC,SAAA7F,GAAA4F,EAAAC,UA+3BlBt8B,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GA53BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,oCAAAf,GAAA,aAFWN,EAAA,MA+3BlB,MA/3BkBA,EAAA,IAqBL6V,CAAAD,EAAA,GAAAA,EAAA,OARA1V,EAAA,KC7Bb4V,CAAA5tB,QAAA,IAAA6tB,GAAA,aAAA7tB,QA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,+BA/4BAxlB,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,+BA/4BAxlB,YAAA,IAAA6tB,GAAA,YAAA7tB,QA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,+BA/4BAxlB,WAAA,IAAA6tB,GAAA,aAAA7tB,QA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,8BA/4BAxlB,iLCY6BqX,SACnBA,aACqBmC,KADrBnC,UAaCoC,GAXG,IAAAD,EAAAjiB,IAAA,IAMJiiB,EANIvjB,OAAA,GAAAsB,IAWH,UAXG,IAMJiiB,EANIvjB,OAAA,GAAAsB,IAWH,UAXG,IAMJiiB,EANIvjB,OAAA,GAAAsB,IAWH,UAXG,IAMJiiB,EANIvjB,OAAA,GAAAsB,IAWH,oBAXG,IACJiiB,EADIvjB,OAAA,GAAAsB,IAWH,UAXG,IACJiiB,EADIvjB,OAAA,GAAAsB,IAWH,UAXG,IACJiiB,EADIvjB,OAAA,GAAAsB,IAWH,UAXG,IACJiiB,EADIvjB,OAAA,GAAAsB,IAWH,4BACA8f,cAEMsC,EAAAC,SAAA3R,GAAA0R,EAAAC,UAk3BjBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA2U,GA92BO6jB,GADAC,GAAAgU,GADA3V,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFUnQ,EAAA,OAk3BjB,MAl3BiBA,EAAA,aC7BjB8lB,GAAA/tB,GAAAguB,GAAA,IAAAC,GAAA,aAAAC,GAAA,UAAAluB,SACoB8a,IAAA9a,QAAA,aAAAA,QADpBA,UAIA+tB,GAAA/tB,GAAAguB,GAAA,IAAAC,GAAA,aAAAC,GAAA,UAAAluB,SACoB8a,IAAA9a,QAAA,aAAAA,QADpBA,g5BCuBMiiB,GAAAjiB,QAAAmuB,GAAAnuB,GAAAouB,GAAApuB,WAEIiiB,GAAAjiB,GAAAkiB,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAApiB,SAAAmuB,GAAAnuB,GAAAouB,GAAApuB,WAEFiiB,GAAAjiB,GAAAkiB,GAAA,IAAAC,GAAA,aAAAC,GAAA,aAAApiB,SAAAmuB,GAAAnuB,GAAAouB,GAAApuB,oJCfOlN,GAAAu7B,GAAO,gBAoBR1U,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAY0U,IAAZrmB,EAAA,GAAAhS,OAAA,UA22Bd5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAr2BO6jB,GAJAqB,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,4BAAAnZ,YAPWuuB,yCACqBC,GAAUD,SAQtCE,CAAMH,GACL1kB,GAAA,SAAcoc,GAAd,gBAvBQ+D,EAAO1S,SACjBA,aAEI,OAFJA,GAEI9f,IAMCsiB,GAHAqB,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,2BAAAnZ,IAisBR,eA/rB8BwuB,GAAUzE,IAFhC/pB,OAAA,IAAAoY,GAAA,aAAApY,yBAiBW0uB,CAAAJ,EAAAtI,IALZ/d,EAAA,MAEP,IAAAmQ,GAAA,aAFOnQ,EAAA,MA22Bd,4IAt1BmBmW,SACTA,oBAIC3E,GAAA,iBACA2E,cAEDL,EAAAC,SAAAjD,GAAAgD,EAAAC,UA80BV38B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA10BO6jB,GADAC,GAAA6U,GADAxW,GAAA6B,GAAA,IAAAb,GAAA,2BAAAf,GAAA,aAFG2C,EAAA,OA80BV,MAx0BOnnB,GAAA,SACOkkB,GADP,MACYqQ,EAALrQ,EAAA7hB,OAAA,GADP,OACqB24B,GAAAzG,EAAA,GAAAA,EAAA,KAPlBpN,EAAA,cCjEJ8T,GAAA7uB,QAAA,IAAA8uB,GAAA,UAAA9uB,KAAA,IAAAuqB,GAAA,gBAAAvqB,UAEE6uB,GAAA7uB,8BAAA+uB,CAAA,IAAAC,GAAA,YAAAhvB,SAAA,IAAA8uB,GAAA,UAAA9uB,KAAA,IAAAuqB,GAAA,gBAAAvqB,UAEE6uB,GAAA7uB,QAAA,IAAA8uB,GAAA,UAAA9uB,8BAAAivB,CAAA,IAAAC,GAAA,cAAAlvB,MAAA,IAAAuqB,GAAA,gBAAAvqB,UAGV6uB,GAAA7uB,QAAA,IAAA8uB,GAAA,UAAA9uB,KAAA,IAAAuqB,GAAA,gBAAAvqB,GAAA,IAAA8uB,GAAA,UAAA9uB,KAAA,IAAAuqB,GAAA,gBAAAvqB,GAAA,IAAA8uB,GAAA,UAAA9uB,KAAA,IAAAuqB,GAAA,eAAAvqB,yKCI6BqX,SACnBA,aACcmC,KADdnC,mCAEI,IAAAmC,EAAAjiB,oBAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,sBAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,oBAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,oBAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,2CASH8f,cAEDsC,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAWuK,EAAXlc,EAAA,GAAAhS,OAAA,UAs3BV5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA2U,GAl3BO6jB,GADAC,GAAAqV,GADAhX,GAAA6B,GAAA,IAAAb,GAAA,6BAAAf,GAAA,aAFGnQ,EAAA,OAs3BV,OAj3ByBkc,aC7BnBiL,GAAApvB,KAAA,IAAAunB,GAAA,8BAEI6H,GAAApvB,GAAAqvB,GAAA,IAAAC,GAAA,cAAAC,GAAA,eAAAvvB,MAAA,IAAAunB,GAAA,8BAEE6H,GAAApvB,GAAAqvB,GAAA,IAAAC,GAAA,cAAAC,GAAA,iBAAAvvB,MAAA,IAAAunB,GAAA,gCAEF6H,GAAApvB,GAAAqvB,GAAA,IAAAC,GAAA,cAAAC,GAAA,eAAAvvB,MAAA,IAAAunB,GAAA,8BAEA6H,GAAApvB,GAAAqvB,GAAA,IAAAC,GAAA,cAAAC,GAAA,eAAAvvB,MAAA,IAAAunB,GAAA,8BAEF6H,GAAApvB,GAAAqvB,GAAA,IAAAC,GAAA,cAAAC,GAAA,aAAAvvB,MAAA,IAAAunB,GAAA,4BAEE6H,GAAApvB,GAAAqvB,GAAA,IAAAC,GAAA,cAAAtvB,MAAA,IAAAunB,GAAA,8BAk4BVlmC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,qBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAmuC,KAAAnuC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAouC,KAAApuC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAquC,KAAAruC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAsuC,KAAAtuC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAuuC,KAAAvuC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAwuC,UAAAxuC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,qBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAyuC,0MCl1BW5Q,EAAAC,SAAAnH,GAAAkH,EAAAC,UAk1BX99B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA/0BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,4BAAAf,GAAA,aAFIJ,EAAA,MAk1BX,MA70BOpkB,GAAA,SACEiqB,GADF,OACEA,EADFtmB,KAAA,cAGSw4B,EAAOlS,EAAA5nB,OAAA,GAHhB,OA60BP5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,kBA10B0D8F,GAAMyE,KAHzD,cAIQ/H,EAAOnK,EAAA5nB,OAAA,GAJf,gBArCQ8nB,EAAAC,SAAAjD,GAAAgD,EAAAC,MACH,MADGjD,EAAA,GACHhb,YAi3BZ1e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA92BW6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,iCAAAf,GAAA,aAHI2C,EAAA,MAk3Bf,MAl3BeA,EAAA,WA8zBE93B,cACX,MAAAA,OAAiBA,GAtxBD+sC,CAAAhI,EAAA,GAAAA,EAAA,IAJf,cAKUiI,EAAOpS,EAAA5nB,OAAA,GALjB,gBAzBUynB,EAAAC,SAAA7F,GAAA4F,EAAAC,MACL,MADK7F,EAAA,GACL/X,YAq2BZ1e,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAl2BW6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,mCAAAf,GAAA,aAHMN,EAAA,MAs2BjB,MAt2BiBA,EAAA,WAkzBA2N,cACX,MAAAA,OAAiBA,GArxBCyK,CAAAD,EAAA,GAAAA,EAAA,IALjB,eAEUlI,EAAOlK,EAAA5nB,OAAA,GAAAmyB,EAAAL,EAAA,GAFjB,gBAnDUpO,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAYuW,EAAZloB,EAAA,MAAAhS,OAAA,GAA4Bm6B,EAA5BnoB,EAAA,MAAAhS,OAAA,UAg4BjB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA73BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,mCAAAf,GAAA,aAFUnQ,EAAA,MAg4BjB,OAAA5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,qBAz3BkB2K,IAy3BlB9uC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,+BAt3BkB4K,MA2CMC,CAAAtI,EAAA,GAAAK,MAPbpQ,EAAA,KC1DXsY,CAAAtwB,QAAA,IAAAuwB,GAAA,YAAAvwB,MAAA,IAAAwwB,GAAA,uBAAAC,GAAA,yCAAAzwB,GAAA,IAAAuwB,GAAA,UAAAvwB,GAAAga,GAAA,IAAAb,GAAA,wCAAAnZ,UAAA,IAAAuwB,GAAA,UAAAvwB,QA44BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,sIA54BA2e,WAAA,IAAAuwB,GAAA,YAAAvwB,QAOkB8a,IAAA9a,QAAA,WAAAA,QAPlBA,qBAUA2sB,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,QAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,gBAAA/sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,UAAA0wB,GAAA1wB,4HCNiB2wB,EAAI5Z,UACRtL,GAAAklB,EAAT5Z,eAuCO4C,EAAAC,qBAAA3R,GAAA0R,EAAAC,GAAWhC,EAAX3P,EAAA,GAAAhS,OAAA,GACH26B,WAbYC,UAChB3kB,GAAA,SACUkS,GADV,OAAAztB,GAEcytB,EAFd0S,KAIkB,IAJlBjgC,GAEcutB,GAEI7mB,KAKds5B,GAGYE,CADT9oB,EAAA,WAg2BX5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA51BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,4BAAAf,GAAA,aADQwY,KA81Bf,QApDiB3tC,WA1zBVs2B,UAAAyX,GAAA,SAREhL,GAQF,GAAAr1B,GAPOq1B,EAOP8K,IAAA,OANsB7L,EAMtBp0B,GAPOm1B,GAOP,GALW,IAAAf,EAAA1tB,IAKX,OAJcuuB,EACLb,EAAAhvB,OAAA,GAGT,OAHeuzB,GAAAxpB,GAAA0pB,GAAA,IAAAf,GAAA,aAAAgB,GAAA,aAAA3pB,MAAwB8lB,GAGvC,yBAAAvM,GAoBW0X,CANPhpB,EAAA,IA6yBL,MAAAhlB,EAmDN,MAnDkBiuC,EAAKjuC,EAAAiuC,IAtyBXtZ,GAqyBK6N,WAr0BV/M,UAAAsY,GAAA,SAXE3Z,GAWF,GAAA1mB,GAVO0mB,EAUPyZ,IAAA,OATsBtX,EAStB3oB,GAVOwmB,GAUP,GARW,IAAAmC,EAAAjiB,IAQX,OAPgB45B,EACP3X,EAAAvjB,OAAA,GAMT,OAy3BP5U,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,gBAAA4L,KAAA,SAAAC,QA53B8BF,UAGvB,yBAAAzY,GAiCW4Y,CARPrpB,EAAA,IA6yBL,MAAAwd,EAmDN,MAnDkB4D,EAAK5D,EAAA4D,eCz1BjBkI,GAAAvxB,KAAA,IAAAunB,GAAA,2BAIMgK,GAAAvxB,GAAAwxB,GAAA,IAAAV,GAAA,sBAFT7oB,GAAAwpB,QAAA1kC,IAAA,cAESiT,MAAA,IAAAunB,GAAA,qBAEHgK,GAAAvxB,GAAAwxB,GAAA,IAAAV,GAAA,eAAArH,GAAA,iCAAAzpB,MAAA,IAAAunB,GAAA,+FC2BGxJ,EAAAC,SAAAjD,GAAAgD,EAAAC,UA22BZ38B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAx2BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,6BAAAf,GAAA,aAFK2C,EAAA,MA22BZ,MAt2BOnnB,GAAA,SACEiqB,GADF,OACEA,EADFtmB,KAAA,uBAnCSlC,UAy4BhBhU,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,sBAt4BgBnwB,IAmCOq8B,CAAA7T,EAAA5nB,OAAA,IAHhB,uBA5BY07B,UAk4BnBtwC,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,sBA/3BgBmM,IA6BUC,CAAA/T,EAAA5nB,OAAA,IAJnB,uBAfU47B,UAq3BjBxwC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,mBAl3BQqM,GAiBgBC,CAAAjU,EAAA5nB,OAAA,IALjB,eAEQgyB,EAAOpK,EAAA5nB,OAAA,GAFf,gBA1CS0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,UAg5BhBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,kBA74BU3B,GAAA7jB,GAAAmtB,GAAA,IAAAC,GAAA,aAAAC,GAAA,UAAArtB,MAHMiI,EAAA,MA4CM8pB,CAAA9J,EAAA,GAAAA,EAAA,OAPVlN,EAAA,KClCZiX,CAAAhyB,QAAA,IAAAiyB,GAAA,UAAAjyB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,cAAA/jB,GAAA,IAAAiyB,GAAA,sCAAAjyB,GAAA,IAAAiyB,GAAA,yDAAAjyB,GAAA,IAAAiyB,GAAA,WAAAjyB,GAKgB8a,IAAA9a,QAAA,iBAAAA,QALhBA,6BCLMkyB,EAASC,SAEPla,EAAWqC,SAAAC,eAAwB2X,OACnCE,KACGl9B,GAAA+iB,EAAA,aACKoa,EAAU/X,SAAAgY,cAAA,OACdD,KAAcH,EACd5X,SAAAoE,KAAA6T,YAA0BF,GAJ9BD,EAKIC,OALJD,EAMKna,SACT52B,OAAAg5B,GAAA,aAAAh5B,CAAuB8wC,EAASC,0ECMP/a,SACnBA,aAGM8M,KAHN9M,GAEKphB,OAAA,UAIC+R,GAFHuB,UAAAvJ,IAusBN,eAtsB8BmkB,GADxBnkB,eAGDqX,oIA4BMsC,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAa4Y,EAAbvqB,EAAA,GAAAhS,OAAA,GACVw8B,EAAAD,EAAA,GAAQE,EAARF,EAAA,GACAG,EAKG9Y,GAHAqB,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,uBAAAnZ,GAAA4yB,GAAA,IAAAC,GAAA,sBAAA1X,GAJOlT,EAAA,YAPY7hB,SAEtB0sC,EADU1sC,EAAA2sC,cACHC,wBACPnsC,IAAKisC,EAAAG,OAAqB5uC,OAAA6uC,UAC1BzkC,IAAKqkC,EAAAK,SAAuB9uC,OAAA+uC,kCACVvsC,EAAG4H,GAQJ4kC,CAAAlY,OAFdnb,OAAA,IAAAoY,GAAA,aADOqa,YA21BlBpxC,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GAt1BQ28B,EAs1BR,MAt1BkBD,wTA8DC1c,EAAQwB,SAEI8b,IADrBtd,EAAA/f,OAAA,GACkBs9B,IADlBvd,EAAA/f,OAAA,kBAGeuhB,EAAAgc,QACFD,EAAGD,gBAER/b,EAAOkc,SACYC,EAAQnc,EAAAR,MAArC,GAAA9gB,OAAA,UAwyBR5U,OAAAw1B,GAAA,cAAAx1B,CAAAw1B,GAAA,gBAtyBU8c,GAAaF,EAAb,IAAAG,GAAA,WAA8BF,IAI3BG,GAAA,0BA3DM7O,EAAMjK,EAA8B+K,SAAjBtF,IAAbzF,EAAA,GAAA9kB,OAAA,GAAUsqB,IAAVxF,EAAA,GAAA9kB,OAAA,GAalBhT,EAbkB83B,EAAA,GAAA9kB,OAAA,GAq0BzB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA5zBW6jB,GANAqB,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,wBAAAnZ,IAAA,SAAA8zB,SAAA,WAAAb,KAIgB1S,EAJhBwT,IAKevT,IALfxgB,OADHglB,IAm0BR,MA3zBmBc,eAwwBb,MArwBC7iC,SA2CG+wC,CAAA,IAAA5b,GAAA,aAAApY,OAAA,IAAAi0B,GAAA,aAC4B1c,EAAAC,MAAA0c,SAAT,GAAS3c,EAAAC,MAAA0c,SAAT,IADnB,IAAAC,GAAA,WACyD5c,EAAAC,MAAAgc,SACtDjc,EAAAL,+BAGF6G,EAAAC,EAAA8L,SAAAhS,GAAAiG,EAAAC,EAAA8L,UACPsK,GAAA,SACI1nB,GADJ,gBA9BcmZ,EAAKwO,SACfC,EAEGxoB,GAAA,SACOwgB,GADP,QAAA37B,GAEW27B,EAFX6H,MAAAtjC,GAEWy7B,GAEIr2B,OAAA,IAJf,IADH4vB,iBAQO,MAAAyO,SAqBPC,CAAA7nB,EAAA,GAAAA,EAAA,KADJ8nB,GAAAC,GAAA,IADO3c,EAAA,GAAAA,EAAA,IAOFlkB,GAAA,SACIiqB,GADJ,OACI,IAAAA,EAAAtmB,aAxHI0tB,UAw3BjB5jC,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GAp3BO6jB,GADAC,GAAA4a,GADAvc,GAAA6B,GAAA,IAAAb,GAAA,+BAAAf,GAAA,aADQ6M,MAu3Bf,UA9vBkC0P,CAAA9W,EAAA5nB,OAAA,aA9IpBZ,UA44BdhU,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAAmkC,UAAA,gBA34BqCnwB,GA4ILu/B,CAAA/W,EAAA5nB,OAAA,KATrB6hB,EAAA,KCvIX+c,CAAA70B,KAAA,IAAA80B,GAAA,aAAA90B,QACwB6jB,GAAA7jB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,YADxB/jB,WAAA,IAAA+0B,GAAA,SAAA/0B,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,qBA/4BA2e,UAAA,IAAA+0B,GAAA,YAAA/0B,SAAA,IAAA+0B,GAAA,SAAA/0B,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,sBA/4BA2e,UAAA,IAAA+0B,GAAA,YAAA/0B,8BAAAg1B,CAAA,IAAAC,GAAA,qBAAAj1B,UAAA,IAAA+0B,GAAA,SAAA/0B,GA+4BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,sBA/4BA2e,oJC+CiBkf,EAAAC,SAAAnH,GAAAkH,EAAAC,UAg2BjB99B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA71BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFUJ,EAAA,MAg2BjB,MA31BOhO,GAAA,SACE6T,GADF,OACEA,EADFtmB,KAAA,cAGS29B,EAAQrX,EAAA5nB,OAAA,GAHjB,gBA9Cc0jB,EAAAC,EAAAkQ,SAAA7hB,GAAA0R,EAAAC,EAAAkQ,GAAuB3F,EAAvBlc,EAAA,GAAAhS,OAAA,GAAWk/B,EAAXltB,EAAA,GAAAhS,OAAA,UAy4BrB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAt4BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,uCAAAf,GAAA,aAFcnQ,EAAA,MAy4BrB,OAAA5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA+zC,KAp4BsBD,OAAchR,MA4CZkR,CAAAH,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAHjB,cAIWtd,EAAQiG,EAAA5nB,OAAA,GAJnB,gBAlCc8nB,EAAAC,SAAAjD,GAAAgD,EAAAC,GAAWsX,EAAXva,EAAA,GAAA9kB,OAAA,UA63BrB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA13BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,uCAAAf,GAAA,aAFc2C,EAAA,MA63BrB,OAx3Beua,IAiCWC,CAAA3d,EAAA,GAAAA,EAAA,IAJnB,eAEa4d,EAAY3X,EAAA5nB,OAAA,GAFzB,gBAtBkBynB,EAAAC,SAAA7F,GAAA4F,EAAAC,UAi3BzBt8B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA92BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,uCAAAf,GAAA,aAFkBN,EAAA,MAi3BzB,MAj3ByBA,EAAA,IAwBO2d,CAAAD,EAAA,GAAAA,EAAA,OAPfxd,EAAA,cC9CjB0d,GAAA11B,QAAA,IAAA21B,GAAA,YAAA31B,KAAA,IAAAunB,GAAA,mBAAAvnB,GAAA,IAAA21B,GAAA,UAAA31B,KAAA,IAAA41B,GAAA,kBAAArO,GAAA,mBAAAvnB,GAAA,IAAA21B,GAAA,cAAA31B,QAAA,QAAAA,GA84BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,oBA94BA2e,iGCYU2kB,EAAAC,SAAA/G,GAAA8G,EAAAC,UAk4BVvjC,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA/3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,2BAAAf,GAAA,aAFGyF,EAAA,MAk4BV,MA73BOjqB,GAAA,SACE0wB,GADF,GACE,IAAAA,EAAA/sB,IADF,OAGwBs+B,EAAAvR,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,OAHxB,OAESkyB,EAAQ7D,EAAAruB,OAAA,GAFjB,gBAlBO0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAWuK,EAAXlc,EAAA,GAAAhS,OAAA,UA+4Bd5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAAmkC,UAAA,gBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GA/4BciS,EAAA,GA+4Bd,OA54B0Bkc,MAiBF2R,CAAA3N,EAAA,GAAAA,EAAA,MAPdtK,EAAA,KCZVgY,CAAA71B,QAAA,IAAA+1B,GAAA,UAAA/1B,KAAA,IAAAunB,GAAA,uBAAAvnB,GAAA,IAAA+1B,GAAA,SAAA/1B,QAAA,IAAA+1B,GAAA,UAAA/1B,KAAA,IAAAunB,GAAA,8BAAAvnB,WAAA,IAAA+1B,GAAA,UAAA/1B,KAAA,IAAAunB,GAAA,uBAAAvnB,iQCgBYg2B,EAAAC,SAAAC,GAAAF,EAAAC,GACJlf,EAAAmf,EAAA,GAAOhf,EAAPgf,EAAA,OACAC,KACM,IAAAjf,EAAA3f,WAEoBnR,EAAK8wB,EAAAjhB,OAAA,GAH/BkgC,KA43BR90C,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,kBAz3BwEp/B,oBADzD3C,EAAKyzB,EAAAjhB,OAAA,GAFZkgC,KA43BR90C,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,sBA13B+D/hC,iBA03B/DpC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA2U,GAx3BW+gB,EAw3BX,MAx3BiBof,8NAoDbluB,MAAA,MAAAA,qBACOmuB,EAAiBnuB,SAm0B5B5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,6BAt3BY6Q,EAAAC,SAAAC,GAAAF,EAAAC,GACJzF,EAAA0F,EAAA,GAAOC,EAAPD,EAAA,OACAlM,IACM,IAAAmM,EAAAj/B,IAEcyS,GAAA8Q,GAAL0b,EAAAvgC,OAAA,IADCugC,EAAAvgC,OAAA,UAk3BxB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA52BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,oCAAAf,GAAA,aAFHyY,KA+2BJ,MA12BOxG,GAuCuDoM,CAAAL,EAAA,GAAAA,EAAA,mBAa3CM,UAWZv/B,GADAsU,GAAA,SAAakrB,GAAb,gBARMvY,SACKA,aACgB6G,KADhB7G,UAEI,IAAA6G,EAAA1tB,IACM0tB,EAAAhvB,OAAA,oBAIR2gC,CAAAD,IADhBD,IAEG,eAqBIG,EAAAC,qBAAAC,GAAAF,EAAAC,GACHE,EAAAD,EAAA,GAAOE,EAAPF,EAAA,GACQG,EAARD,EAAA,GAAAhhC,OAAA,GAAsCkhC,EAAtCF,EAAA,GAAAhhC,OAAA,GAAuByoB,EAAvBuY,EAAA,GAAAhhC,OAAA,GACAmhC,WArCDC,UAAA5rB,GAAA,SAPEua,GAOF,GAAAr1B,GANOq1B,EAMPsR,IAAA,OALuB9d,EAKvB3oB,GANOm1B,GAMP,GAJW,IAAAxM,EAAAjiB,IAIX,OAHsBo5B,EAAMnX,EAAAvjB,OAAA,GAG5B,OAAA28B,GAAA,IAAAC,GAAA,aAHoClC,IAGpC,yBAAA0G,GAqCkBE,CAAeP,UAE9BQ,GAAOR,GAeJnD,GAAA,eAkwBbxyC,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA3wBW6jB,GADA1B,GAAA6B,YA5BPe,mKA4BiC0c,UAvB3BC,UAWFvgC,GADAsU,YARM6gB,SACKA,aACgBtH,KADhBsH,UAEI,IAAAtH,EAAAztB,IACMytB,EAAA/uB,OAAA,qBAGxByhC,GAEG,IAAAC,GAAA,aAYqBC,CAATZ,KADT7e,GAAA6B,GAAA,IAAAb,GAAA,oCAAAf,GAAA,aAFH4e,MA+wBR,gBAp1BiBa,UAo1BjBx2C,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GAh1BO6jB,GADAie,GAAAD,EAAA,IAAAzf,GAAA,aAAApY,GAAAga,GAAA,IAAAb,GAAA,iCAAAnZ,SAi1BP,UAxwBY+3B,CAAaX,GAwwBzB/1C,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,wBAtwBiD0L,WAtErC8G,EAAYC,SACdl8B,GAAAi8B,EAAYC,MAAZ,MAAAl8B,EAAA,aAAAA,EAAA,sBAGOm8B,EAHPn8B,EAGE,UAw0BZ1a,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,oBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,IAAAgkB,GAAA,IAAAb,GAAA,6CAx0B0G+e,GAw0B1G,gBA30BU,MAAAn8B,EAAA,UAEC4S,EAFD5S,EACJ,UA00BN1a,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,oBAz0ByD2S,GAAAxpB,EAAA,GAAAA,EAAA,aAD9Czf,EADD6M,EACJ,GAAas1B,EADTt1B,EACI,UA00Bd1a,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,oBAAAnkC,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,IAAAgkB,GAAA,IAAAb,GAAA,6CA10B4GkY,GA00B5G,UA10ByH8G,GAAAjpC,EAAA,GAAAA,EAAA,OAoEzGkpC,CAAQlB,EAAOE,GAmtBzB,MAntB2ClG,EAswBjD,MAnDkB7H,EAntB+B6H,EAmtB1B7H,IAmDvBhoC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,iBArwB+C9G,IACb2Z,EAAlBC,GAAQnB,GAitBlB,MAjtB4BkB,EAowBlC,MAnDkBE,EAjtBgBF,EAitBXE,4NCn1BvBC,GAAAx4B,MAAA,IAAAy4B,GAAA,WAAAC,IAAA,IAAAC,GAAA,SAAAC,IAAA,IAAAC,GAAA,WAGYC,oFAMHA,oHAkBQ7wB,iCAEE+N,EAAQwB,UACjB,IAAAxB,EAAAze,sCAIQggB,EAAoCkc,eAC9CrjB,EAAcmH,EAAAR,MAEdgiB,WDkGM50C,EAAgB60C,EAAAC,SAAAC,GAAAF,EAAAC,GACfE,EAAPD,EAAA,UAKGrf,GADAqB,GAAA/2B,EAAA,IAAAi0B,GAAA,aAJH8gB,EAAA,MAOGC,GCxGAC,CAAAp5B,GAAAq5B,GAAA,IAAA/B,GAAA,SACc/f,EAAAC,MAAA8hB,SADdt5B,GAAAq5B,GAAA,IAAA/B,GAAA,SAJHlnB,EAAA,KAIGpQ,GAAAq5B,GAAA,IAAA/B,GAAA,4BAGuBvc,GAAK0Y,EAAL,IAAA8F,GAAA,eAHvBv5B,QAJHoQ,EAAA,GAIG,GAJHA,EAAA,GAIG,WAu3BX/uB,OAAAw1B,GAAA,cAAAx1B,CAAAw1B,GAAA,gBAj3BQiE,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,GAAA4yB,GAAA,IAAAC,GAAA,sBAA8ChV,GAAK4V,EAAL,IAAA8F,GAAA,cAA9Cv5B,UAA6E9F,GAAQV,GAAA,iBAARU,CAV7EkW,EAAA,IAUApQ,SACAooB,EAAA2Q,EAAA,GAAAP,GAAAO,EAAA,GAAA3Q,kBAGOoR,EAAAC,UACXrF,GAAAsF,GAAAC,GAAAC,GAAA,IADWJ,EAAAC,gBAq1Bfp4C,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,IAAAgkB,wEAAA,OA10BI2S,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,QAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,GAAA8sB,GAAA,IAAAC,GAAA,gBAAA/sB,UAMiB65B,GAAAC,GAAA,IAAAnC,GAAA,YANjB33B,WAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,GAAA8sB,GAAA,IAAAC,GAAA,gBAAA/sB,UASiB65B,GAAAC,GAAA,IAAAnC,GAAA,aATjB33B,WAAA,IAAA6sB,GAAA,YAAA7sB,GAAA8sB,GAAA,IAAAC,GAAA,aAAA/sB,GAAA8sB,GAAA,IAAAC,GAAA,gBAAA/sB,UAYiB65B,GAAAC,GAAA,IAAAnC,GAAA,YAZjB33B,6JCpDiB5Z,SAGf2zC,WARgBlxC,SACbkT,EAAA7W,EAAsB2D,EAAtB,aAAAkT,EAAA,GACWA,EAAA,QAMdi+B,CAFY5zC,EAAA2sC,cACRkH,aAAA,wBACJF,eADIA,yBAImB1iB,SACnBA,oBAEIoC,GAAA,kBAFJpC,oBAKIoC,GAAA,iBAEHpC,yEAoBM0G,EAAAC,SAAAjD,GAAAgD,EAAAC,UA41BjB38B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GAz1BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFU2C,EAAA,MA41BjB,MAv1BOnnB,GAAA,SACOkkB,GADP,MACYqQ,EAALrQ,EAAA7hB,OAAA,GAAcmyB,EAAAD,EAAA,GADrB,gBAvBcxO,EAAAC,EAAAkQ,SAAA7hB,GAAA0R,EAAAC,EAAAkQ,GAA8BnkC,IAA9BsiB,EAAA,MAAAhS,OAAA,GAAwCkuB,EAAxClc,EAAA,GAAAhS,OAAA,GAAoBikC,EAApBjyB,EAAA,MAAAhS,OAAA,UA82BrB5U,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA12BO6jB,GADAC,GAAAqgB,GADAhiB,GAAA6B,GAAA,IAAAb,GAAA,iCAAAf,GAAA,aAFcnQ,EAAA,OA82BrB,OAAA5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,IAAA48B,GAAA,IAAAC,GAAA,sBAAA1X,GAv2BmC+e,EAAXE,GAAAjf,QAirBjB,aAhrBuBx1B,GAs2B9Bq0B,GAAA,IAAAb,GAAA,wBAp2BmBgL,MAcSkW,CAAAlS,EAAA,GAAAC,EAAAD,EAAA,KANXpN,EAAA,gDCjDUuf,GAAQ7I,QAAA1kC,IAAYutC,QAQ5CnxB,GAJAvV,GAAA,SACO5P,GADP,WAAAu2C,GAAA,SAEQ,IAAAv2C,GAFRgc,GAAAw6B,GAAA,IAAAC,GAAA,aAAAz6B,OAAA06B,GAAA,IAAAnQ,GAAA,UAEmDvmC,IAFnD,IAAAujC,GAAA,SAAAz0B,GAEoE9O,MAFpEgc,MAAA06B,GAAA,IAAAnQ,GAAA,UAGkCvmC,IAHlC,IAAAujC,GAAA,SAAAz0B,GAGmD9O,OlEqcnD,SAAe22C,EAAOC,GACzB,OAVG,SAAmBD,EAAOE,EAAMD,GACnC,GAAa,IAATC,EACA,MAAM,IAAI51C,MAAM,oBAEpB,OAAOsT,GAAM,kBAAME,GAAO,SAAC5R,GAAD,OAAOg0C,EAAO,GAAKh0C,GAAK+zC,GAAQC,EAAO,GAAKh0C,GAAK+zC,GAAQ/zC,EAAGA,EAAIg0C,GAAQ,MAAMF,KAMjGG,CAAUH,EAAO,EAAGC,GkE1cvBG,CAAA,UAQJC,GAAAh7B,KAEKuJ,GAAAvJ,GAAA,IAAAu6B,GAAA,UAAAv6B,MAAA06B,GAAA,IAAAnQ,GAAA,mBAAAhD,GAAA,mBAAA0T,IAAAj7B,GAAA,IAAAu6B,GAAA,UAAAv6B,MAAA06B,GAAA,IAAAnQ,GAAA,mBAAAhD,GAAA,mBAAAvnB,+SCaWnQ,EAAO8pB,EAAAC,SAAAmB,GAAApB,EAAAC,GAAYn2B,EAAZs3B,EAAA,MAAA9kB,OAAA,GAAwB2rB,EAAxB7G,EAAA,MAAA9kB,OAAA,GAA4BilC,EAA5BngB,EAAA,aAm3BvB15B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GAh3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,eAAwB,kBAAoBtpB,IAA5C,IAAAuoB,GAAA,aAFgB2C,EAAA,MAm3BvB,OAAA15B,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,YAv3BIiS,MAAA,IAAAA,EAAA1Q,WAEgBo5B,EAAM1oB,EAAAhS,OAAA,oCAAa06B,iBAD5ByE,EAAQntB,EAAAhS,OAAA,iCAAUm/B,WAShB+F,CAAOD,GA62BpB,OAAA75C,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,0BA12BwB5D,IA02BxBvgC,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,0BAv2BwB/hC,0BAEVs6B,EAAAC,qBAAAlG,GAAAiG,EAAAC,GAAWod,EAAXtjB,EAAA,MAAA7hB,OAAA,GAAqBolC,EAArBvjB,EAAA,MAAA7hB,OAAA,UAq2Bd5U,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GAl2BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFON,EAAA,MAq2Bd,QA91BS70B,EADAkU,GADHikC,EACG,cAAYnhB,GAAZ,OAAYqhB,GAAA,OAAArhB,EAAA,GAAAA,EAAA,MA4yBf,MA3yBGh3B,EA81BT,MAnDkBwiC,EA3yBTxiC,EA2yBcwiC,KAxyBd4D,EADAlyB,GADHkkC,EACG,cAAY3uB,GAAZ,OAAY4uB,GAAA,OAAA5uB,EAAA,GAAAA,EAAA,MAyyBf,MAxyBG2c,EA21BT,MAnDkBkS,EAxyBTlS,EAwyBckS,MC11BvBC,CAAAx7B,MAAA,IAAAy7B,GAAA,UAAAz7B,MAAA,IAAA07B,GAAA,wBAAAC,GAAA,6BAAAC,GAAA,oBAAAC,GAAA,UAAA77B,MAAA,IAAA07B,GAAA,wBAAAC,GAAA,yBAAAC,GAAA,8BCDiCvkB,SACvBA,oBAEIoC,GAAA,iBAEHpC,oIAkBkBiV,SACnBA,oBAEI7S,GAAA,oBAEH6S,cAEDvO,EAAAC,SAAAjD,GAAAgD,EAAAC,UAg3BV38B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA52BO6jB,GADAC,GAAAgiB,GADA3jB,GAAA6B,GAAA,IAAAb,GAAA,2BAAAf,GAAA,aAFG2C,EAAA,OAg3BV,MA12BQ/Q,GAAA,SAAe8N,GAAf,MAAoBqQ,EAALrQ,EAAA7hB,OAAA,GAAf,gBA7BM0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,UAu4Bdv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GAn4BO6jB,GADAC,GAAAiiB,GADA5jB,GAAA6B,GAAA,IAAAb,GAAA,gCAAAf,GAAA,aAFOnQ,EAAA,OAu4Bd,MAv4BcA,EAAA,IA6BuB+zB,CAAA7T,EAAA,GAAAA,EAAA,KAN3BpN,EAAA,4EClBN9S,+BAKWg0B,EACPh0B,EAAAhS,OAAA,UA43BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,sBA13BoByW,kBACLzG,EACPvtB,EAAAhS,OAAA,UAg5BR5U,OAAAw1B,GAAA,cAAAx1B,CAAAw1B,GAAA,eAh5BsB2e,kBATVrF,EACJloB,EAAAhS,OAAA,UAg4BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,sBA93BoB2K,6EA+BLpS,EAAAC,SAAApF,GAAAmF,EAAAC,UA+1Bf38B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA51BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,iCAAAf,GAAA,aAFQQ,EAAA,MA+1Bf,gBAp2BIZ,+BAEakkB,EAAMlkB,EAAA/hB,OAAA,UAAA+kC,GAAAkB,EAAA,GAAAA,EAAA,kBACbC,EAAMnkB,EAAA/hB,OAAA,UAAAmmC,GAAAD,EAAA,GAAAA,EAAA,mBAFCE,EAAMrkB,EAAA/hB,OAAA,UAAAy/B,GAAA2G,EAAA,GAAAA,EAAA,MASdC,CALM1jB,EAAA,6EAmCX2F,+BAEMsX,EAAOtX,EAAAtoB,OAAA,UAAAsmC,GAAA1G,EAAA,GAAAA,EAAA,kBACNnX,EAAQH,EAAAtoB,OAAA,mBA5BHynB,EAAAC,SAAAkB,GAAAnB,EAAAC,UAq1BhBt8B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAl1BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,kCAAAf,GAAA,aAFSyG,EAAA,MAq1BhB,MAr1BgBA,EAAA,IA4BG2d,CAAA9d,EAAA,GAAAA,EAAA,kBACN+X,EAAUlY,EAAAtoB,OAAA,mBApBLipB,EAAAC,SAAAL,GAAAI,EAAAC,UA40BlB99B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAz0BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,oCAAAf,GAAA,aAFW0G,EAAA,MA40BlB,MA50BkBA,EAAA,IAoBK2d,CAAAhG,EAAA,GAAAA,EAAA,mBAHV0B,EAAU5Z,EAAAtoB,OAAA,mBA3DL0jB,EAAAC,SAAAmB,GAAApB,EAAAC,UAs3BlBv4B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAn3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,oCAAAf,GAAA,aAFW2C,EAAA,MAs3BlB,OAAA15B,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,qBA/2BY5xB,GAAA8oC,GAPM3hB,EAAA,OA2DK4hB,CAAAxE,EAAA,GAAAA,EAAA,sCC2zBvB92C,OAAAw1B,GAAA,cAAAx1B,CAAA,aAAAA,OAAAw1B,GAAA,cAAAx1B,CAAA,+IAAAA,OAAAw1B,GAAA,cAAAx1B,CAAA,+IAAAA,OAAAw1B,GAAA,cAAAx1B,CAAA,+IAAAA,OAAAw1B,GAAA,cAAAx1B,CAAA,+IAAAA,OAAAw1B,GAAA,cAAAx1B,CAAA,6JAl3BE2lC,GAAAhnB,MAAA,IAAAwnB,GAAA,kBAAAxnB,GAAA,IAAAynB,GAAA,UAAAznB,GAAAga,GAAA,IAAAb,GAAA,gCAAAnZ,aAAA,IAAA2nB,GAAA,eAAA3nB,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,SAAA,OAAAA,4BD4DU2e,EAAAC,SAAAge,GAAAje,EAAAC,UAszBZv9B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAnzBO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,6BAAAf,GAAA,aAFKwkB,EAAA,MAszBZ,MAjzBOhpC,GAAAipC,GALKD,EAAA,KCrDZE,CAAA98B,QAAA,IAAA+8B,GAAA,YAAA/8B,QAAA,IAAAg9B,GAAA,sBAAAh9B,WAAA,IAAA+8B,GAAA,UAAA/8B,KAAAi9B,KAAAj9B,GAAA,IAAA+8B,GAAA,YAAA/8B,KAAAk9B,KAAAl9B,iQChB6BqX,SACnBA,aACkBmC,KADlBnC,UAEI,IAAAmC,EAAAvjB,OAAA,GAAAsB,IAEckiB,GAAA,iBAFd,IAAAD,EAAAvjB,OAAA,GAAAsB,IAGekiB,GAAA,kBAHf,IAAAD,EAAAvjB,OAAA,GAAAsB,IAIakiB,GAAA,gBAHDA,GAAA,WAIfpC,oBAEGsC,EAAAC,SAAA3R,GAAA0R,EAAAC,GAAcujB,EAAdl1B,EAAA,MAAAhS,OAAA,GAA2BmnC,EAA3Bn1B,EAAA,MAAAhS,OAAA,UAi3Bd5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA72BO6jB,GADAC,GAAAujB,GADAllB,GAAA6B,GAAA,IAAAb,GAAA,+BAAAf,GAAA,aAFOnQ,EAAA,OAi3Bd,OAwBA5mB,OAAAw1B,GAAA,cAAAx1B,CAAAw1B,GAAA,eAn4BuBsmB,GA22BvB97C,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,wBA12B+C4X,KCnC/CE,CAAAt9B,8BAAAu9B,CAAA,IAAAC,GAAA,iBAAAC,GAAA,aAAAz9B,OAAA,IAAA09B,GAAA,YAAA19B,GACe8a,IAAA9a,QAAA,UAAAA,QADfA,OAAA,IAAA29B,GAAA,YAAA39B,GAAA0wB,GAAA1wB,qBCDuBqX,SACbA,2CAMuB2O,SACvBA,oBAEIvM,GAAA,iBAEHuM,+EAkBAjI,EAAAC,SAAAjD,GAAAgD,EAAAC,UAg3BX38B,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GA72BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,4BAAAf,GAAA,aAFI2C,EAAA,MAg3BX,MA32BOnnB,GAAA,SAAckkB,GAAd,MAAmBqQ,EAALrQ,EAAA7hB,OAAA,GAAd,gBArBQ0jB,EAAAC,SAAA3R,GAAA0R,EAAAC,GACPxJ,EACA7D,GAAAqxB,GAFO31B,EAAA,WAg4Bf5mB,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAA2U,GA13BO6jB,GADAC,GAAA+jB,GADA1lB,GAAA6B,GAAA,IAAAb,GAAA,iCAAAf,GAAA,aAHChI,EAAA,OA+3BR,OAAA/uB,OAAAw1B,GAAA,cAAAx1B,CAAA,IAAA2U,GA/3BQoa,EAAA,GA+3BR,MAh4BenI,EAAA,MAqBoB61B,CAAA3V,EAAA,GAAAA,EAAA,KALxBpN,EAAA,KC/BX8f,CAAA76B,QAAA,IAAA+9B,GAAA,UAAA/9B,QAAA,SAAAA,WAAA,IAAA+9B,GAAA,UAAA/9B,GAAAw6B,GAAA,IAAAC,GAAA,aAAAz6B,SAAA,SAAAA,WAAA,IAAA+9B,GAAA,UAAA/9B,QAAA,SAAAA,0BCGAo8B,GAAAp8B,QAAA,IAAAg+B,GAAA,UAAAh+B,QA44BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,qBA54BA2e,WAAA,IAAAg+B,GAAA,UAAAh+B,GAAAw6B,GAAA,IAAAC,GAAA,aAAAz6B,SA44BA3e,OAAAw1B,GAAA,cAAAx1B,CAAA,qBA54BA2e,WAAA,IAAAg+B,GAAA,UAAAh+B,QAIQsqB,GAAAtqB,KAAA,IAAAuqB,GAAA,iBAAAC,GAAA,YAAAxqB,QAAA,QAAAA,SAJRA,kWCgDqBoe,SACXA,cAEI,OAFJA,GAEI7mB,IACOkiB,GAAA,iBACN2E,SACJA,cAcD6f,EAAAC,eAAArM,GAAAoM,EAAAC,GACFC,EAAAtM,EAAA,GAAcuL,EAAdvL,EAAA,MAAA57B,OAAA,GAA0BilC,EAA1BrJ,EAAA,MAAA57B,OAAA,UAu0BR5U,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAn0BO6jB,GADAC,GAAAskB,GADAjmB,GAAA6B,GAAA,IAAAb,GAAA,4BAAAf,GAAA,aADM+lB,MAs0Bb,gBAp1BsBtN,SAUf5tC,EARAwoB,GAAA,SACExD,GADF,GAAAtX,GACEsX,EADFo2B,IAAA,OAEsBxY,EAFtBh1B,GACEoX,GADF,GAGW,IAAA4d,EAAAtuB,IAHX,OAIY0wB,EACHpC,EAAA5vB,OAAA,GALT,OAk1BP5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmkC,UAAA,mCA70B0E3B,GAAAoE,EAAA,GAAAA,EAAA,MALnE,yBADH4I,UAgyBE,MAvxBC5tC,SASEq7C,CAASH,IACTpX,EAAAqW,EAAA,YApEQmB,EAAAC,SAAAnpC,GAAAkpC,EAAAC,GACGC,EAAZppC,EAAA,MAAAY,OAAA,GAA0ByoC,EAA1BrpC,EAAA,MAAAY,OAAA,GAAAujB,EAAAnkB,EAAA,UAm4BRhU,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAh4BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,oCAAAf,GAAA,aADMoB,KAk4Bb,OAAAn4B,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,kBA53BmBiZ,IA43BnBp9C,OAAAw1B,GAAA,cAAAx1B,CAAA,KAAAmkC,UAAA,+BAz3BmBkZ,MAyDVC,CAAAvB,EAAA,GAAArW,aApDO6X,EAAAC,SAAAlN,GAAAiN,EAAAC,GACR5Z,EAAA0M,EAAA,GAAK7L,EAAL6L,EAAA,UAm3BRtwC,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAh3BO6jB,GADA1B,GAAA6B,GAAA,IAAAb,GAAA,mCAAAf,GAAA,aADM6M,KAk3Bb,MA/2BgBa,GAgDPgZ,CAAA5D,EAAA,GAAAA,EAAA,eC9ET6D,GAAA/+B,GAAAg/B,GAAA,IAAAX,GAAA,UAAAr+B,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,iBAAA/jB,OAAA,IAAAi/B,GAAA,aAAAj/B,MAAA,IAAAk/B,GAAA,8BAAAC,GAAA,6JAAAC,GAAA,YAAAp/B,QAQO8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,SAAA,SAAAA,QARPA,aAaA++B,GAAA/+B,GAAAg/B,GAAA,IAAAX,GAAA,cAAAr+B,GAAAg/B,GAAA,IAAAX,GAAA,UAAAr+B,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,eAAA/jB,QAAA,IAAAi/B,GAAA,aAAAj/B,MAAA,IAAAk/B,GAAA,mCAAAC,GAAA,mDAAAC,GAAA,YAAAp/B,QAKO6jB,GAAA7jB,KAAA,IAAA8jB,GAAA,aAAAC,GAAA,kBALP/jB,0KCHmBqX,SACTA,aACgBmC,KADhBnC,UAEI,IAAAmC,EAAAjiB,IAAA,IACJiiB,EADIvjB,OAAA,GAAAsB,IAEakiB,GAAA,iBAFb,IACJD,EADIvjB,OAAA,GAAAsB,IAGakiB,GAAA,iBAHb,IACJD,EADIvjB,OAAA,GAAAsB,IAIWkiB,GAAA,eAHEA,GAAA,iBAIZpC,SACJA,cAgBAknB,EAAAC,SAAAnpC,GAAAkpC,EAAAC,GACQra,EAAX9uB,EAAA,GAAAY,OAAA,GAAA+uB,EAAA3vB,EAAA,UAQDw+B,GAAA,kBAi2BPxyC,OAAAw1B,GAAA,cAAAx1B,CAAA,MAAA2U,GAr2BO6jB,GADAC,GAAAulB,GADAlnB,GAAA6B,GAAA,IAAAb,GAAA,6BAAAf,GAAA,aADM4M,MAw2Bb,gBAx3B4BjO,SAYrB9zB,EAVAwoB,GAAA,SACExD,GADF,GAAAtX,GACEsX,EADFq3B,IAAA,OAEuBra,EAFvBp0B,GACEoX,GADF,GAGW,IAAAgd,EAAA1tB,IAHX,OAIsBo5B,EACb1L,EAAAhvB,OAAA,GALT,OAKe6kB,IAAA9a,GAAAga,GAAA,IAAAb,GAAA,yCAAAnZ,GAAA4yB,GAAA,IAAAC,GAAA,aAESlC,IAFT3wB,cALf,yBADH+W,UAo0BE,MAzzBC9zB,SASEs8C,CAAeva,GACTb,uHChCRnO,EAAQwB,kBAGeA,EAAA8hB,iBAsBxBkG,GAAAx/B,KAAA,IAAAunB,GAAA,uCASOhQ,EAA2BkoB,OACpCC,KACGnoB,EAAAC,MAAA8hB,OADHoG,gBA2yBaz8C,UACX,MAAAA,EA5yBFy8C,cA4yBmBz8C,UAmDvB5B,OAAAw1B,GAAA,cAAAx1B,CAAA,sBA73BQoyC,EAASkM,UACjB7kB,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,GAAA4yB,GAAA,IAAAC,GAAA,sBAGc9X,GACF0Y,EAAA,IAAAmM,GAAA,aACAC,WAAA,WACapM,EAAA,IAAAmM,GAAA,cADb,QALZ5/B,GAAAga,GAAA,IAAAb,GAAA,cAQkBwmB,IARlB3/B,WAAA,OAAAA,QAkCM8/B,CAAQL,EAASloB,EAAAC,MAAA8hB,QACjBoG,gBAEOK,EAA2BC,OACpCC,KACGF,EAAAvoB,MAAA8hB,OADH2G,WAjBIC,UACRV,GAAAx/B,GAAAmgC,GAAA,IAAAb,GAAA,cAAAc,GAAA,eAAApgC,GAAAmgC,GAAA,IAAAb,GAAA,4BAE2BtnB,GAAKkoB,EAAL,IAAAN,GAAA,gBAF3B5/B,OAAA,IAAAunB,GAAA,+BAkBQ8Y,CAAQL,cAgyBCva,UACX,MAAAA,EAnyBFwa,cAmyBmBxa,UAmDvBpkC,OAAAw1B,GAAA,cAAAx1B,CAAA,sBAj3BQi/C,EAASC,UACjBzlB,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,GAAA4yB,GAAA,IAAAC,GAAA,sBAEsB/a,GAAKwoB,EAAL,IAAAV,GAAA,gBAFtB5/B,GAAAga,GAAA,IAAAb,GAAA,cAGkBonB,IAHlBvgC,WAAA,OAAAA,QA+BMwgC,CAAQR,EAASD,EAAAvoB,MAAA8hB,QACjB2G,gBAEDhpB,UACLmd,GAAA,8BAAAqM,GAA0BxpB,EAA1B,wJC7DsB6b,sBAEQA,EAAAiB,UACEjB,EAAA4N,YACC5N,EAAAK,aACFL,EAAAG,WACCH,EAAAtQ,YACCsQ,EAAA6N,iQCUhBhQ,EAAI5Z,UACAtL,GAAAklB,EAAT5Z,0EA+CCqH,SACKA,aACsB4G,KADtB5G,UAEI,IAAA4G,EAAAztB,IAAA,IACJytB,EADI/uB,OAAA,GAAAsB,IAEgCkiB,GAAA,gBAFhC,IACJuL,EADI/uB,OAAA,GAAAsB,IAGiCkiB,GAAA,iBAHjC,IACJuL,EADI/uB,OAAA,GAAAsB,IAIkCkiB,GAAA,kBAHHA,GAAA,4CAOhCmnB,EAAAC,SAAAC,GAAAF,EAAAC,GACThb,EAAAib,EAAA,GAA4B5pB,EAA5B4pB,EAAA,GAAA7qC,OAAA,UA6zBZ5U,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAA2U,GAtzBW6jB,GADAie,GAAgC3gC,YArBhCuhB,UAAAqoB,GAAA,SARE/a,GAQF,GAAAr1B,GAPOq1B,EAOPgb,IAAA,OAN6B/b,EAM7Bp0B,GAPOm1B,GAOP,GALW,IAAAf,EAAA1tB,IAKX,OAJiB0pC,EACRhc,EAAAhvB,OAAA,GAGT,WAAAirC,GAAA,QAHwBD,GAGxB,yBAAAvoB,GAqBYyoB,CAAAtb,GAAoB,cAAgBh/B,GAAhB,OAAAu6C,GAA4Bv6C,KAD5D4jC,GAAA4W,GAAArnB,GAAA,IAAAb,GAAA,+BADA+B,GAAAlb,GAAAga,GAAA,IAAAb,GAAA,+BAAAnZ,MAAA,IAAAoY,GAAA,aAFHyN,OA2zBR,MApzBW3O,uOAyBSoqB,GACZzqB,GAAA,cAAAr1B,UAAoC8/C,2JAuD7BC,EAAoBC,aCpL1B7qC,EAAE9P,EAAE4H,SACHsN,GAAAlV,EAAG4H,oBAAH,MAAAsN,EAAA,UAAAA,EAAA,QACC3W,KADD2W,EACJ,IAAaoe,KADTpe,EACI,6BAAgBpF,EAAEvR,EAAE+0B,cDuLtBsnB,UAJgB1wC,EAAO2wC,SACflW,WA1DXmW,EAyBsBC,EAAgCC,EAAgCC,SAC/EC,EAA4DC,GAAzCJ,EAAA5O,yBACnBiP,EAA8DD,GAA1CH,EAAA7O,gCAClB,IAAA8O,EAAAvqC,IAAN,SAEwB2qC,GAFxB,gBAEwBC,GAFxB,gBA5BHC,EAqBkBC,EAAuBC,SAClCC,EAAiBF,EAAAG,OAAcH,EAAAI,OAAA,MAAsBH,EAAAG,OAAA,yBAC7CvoC,GAAQV,GAAA,QAARU,CAAeqoC,QAAuBroC,GAAQV,GAAA,QAARU,CAAgBmoC,EAAAK,KAAcL,EAAAM,MAvBnFP,EAuBkGQ,WAOvEC,CA9B3BlB,EA8B2BO,EAAAC,KAFlB,IAAAL,EAAAvqC,IAAN,SAGyBurC,GAHzB,gBAGyBC,GAHzB,gBA5BHC,EASmBC,EAAuBC,SACnCC,EAAmBF,EAAAP,QAAeO,EAAAN,MAAA,MAAqBO,EAAAP,MAAA,yBAC/CzoC,GAAQV,GAAA,QAARU,CAAgB+oC,EAAAG,OAX/BJ,EAW+CJ,cAAgB1oC,GAAQV,GAAA,QAARU,CAAeipC,KAoBlDE,CA/B5B1B,EA+B4BmB,EAAAC,KAHnB,IAAAjB,EAAAvqC,IAAN,SAIuB+rC,GAJvB,gBAIuBC,GAJvB,gBA5BHC,EAiBiBC,EAAuBC,SACjCC,EAAiBF,EAAAjB,OAAciB,EAAAhB,OAAA,MAAsBiB,EAAAjB,OAAA,yBAC7CvoC,GAAQV,GAAA,QAARU,CAAeypC,QAAsBzpC,GAAQV,GAAA,QAARU,CAAgBupC,EAAAf,KAAcgB,EAAAf,MAnBlFa,EAmBkGZ,WAaxEgB,CAhC1BjC,EAgC0B2B,EAAAC,KAJvB,SACsBM,GADtB,gBACsBC,GADtB,gBA5BHC,EAagBx8B,EAAuBy8B,SAChCC,EAAmB18B,EAAAm7B,QAAen7B,EAAAo7B,MAAA,MAAqBqB,EAAArB,MAAA,yBAC/CzoC,GAAQV,GAAA,QAARU,CAAgBqN,EAAAi7B,IAAawB,EAAAvB,OAf5CsB,EAe6DnB,cAAgB1oC,GAAQV,GAAA,QAARU,CAAe+pC,KAcnEC,CA7BzBvC,EA6ByBkC,EAAAC,MAIjB/B,EALL,CAKuBE,GAyBPkC,CAAA5C,EAAkBxwC,EAAO2wC,EAAQH,EAAAxqB,MAAAqtB,aAC7C7C,kBAAwB/V,EAAegW,KAEnBD,EAAA8C,cAAc9C,EAAA+C,4BAGnCC,UAOA1qB,GAJAqB,GAAAlb,GAAAga,GACCuqB,EAAA/sB,MAAAgtB,OADDxkC,GAAAohC,GAAA,IAAAF,GAAA,iBAEKuD,aArEXC,EAmCkBC,GACZzvC,GAAAyvC,EAAA,QApCND,iBAqC8BC,GAgCnBC,CAAAL,EAAAE,MAFLzkC,8BAAA6kC,CAAA,IAAA7D,GAAA,oBAG6BuD,EAAAxtB,MAAAqtB,cAH7BpkC,QADA83B,YAlENgN,EA4CGhtB,UAAA,IAAAA,EAAAvgB,qDAsBewtC,CAAAR,EAAeA,EAAA/sB,MAAAwtB,OAA3B,IAAA5sB,GAAA,aADMmsB,EAAAxtB,MAAAkuB,0BAcRC,EAAAC,EAAAC,SAAAC,GAAAH,EAAAC,EAAAC,GACLjH,EAAAkH,EAAA,GAAKC,EAALD,EAAA,GAAuClb,EAAvCkb,EAAA,GAAApvC,OAAA,OAEAsvC,QACMxpC,WAvKPypC,UAAAzE,GAAA,SANE1pB,GAMF,OAAA1mB,GALO0mB,EAKPouB,IAAA50C,GALOwmB,GAEEphB,OAAA,GAGT,MAAAuvC,GAuKOE,CAAYvH,MAAZ,MAAApiC,EADNwpC,yBAEYxpC,SAymBpB1a,OAAAw1B,GAAA,cAAAx1B,CAAAskD,GAAA,IAAAC,GArmBsBzH,EACEoH,EACGD,MACnBnb,6CA3CqC0b,GAA5Bp/C,KAA4B,IAAAq/C,GAAA,wDAyB5BC,EAAAt/C,YA0uBjBpF,OAAAw1B,GAAA,cAAAx1B,CAAAw1B,GAAA,gBAxBAx1B,OAAAw1B,GAAA,cAAAx1B,CAAA,QAAA4/C,IAAA,SAhtB8B+E,aA3ErBC,EAuCiBC,GACXhxC,GAAAgxC,EAAA,QAxCND,gBAyC6BC,GAkCRC,CAAAJ,EAAAC,IAgtB9BI,aAAA,SAhtByDzP,aAzB1Crf,EAAmB+uB,GACtBR,GAAAvuB,EAAA,IAAAwuB,GAAA,eAwB6CQ,CAAAP,IAgtBzDQ,aAAA,SAhtByFC,aAtB1EC,EAAmBC,GACtBb,GAAAY,EAAA,IAAAX,GAAA,kBAqB6Ea,CAAAZ,IAgtBzFva,OAAAob,QAAA,oBAAAz1C,MAAA7P,UAAA+W,OAhtB4I0tC,EAgtB5IhvB,MAAAG,eA9sBqB2c,GAAA,iBADHgT,GAAyBC,GAAAf,GAAyBA,EAAAhvB,MAAAgwB,yCE3LhEC,WAAeC,SACXC,EAAchtC,GAAQV,GAAA,MAARU,CAAa+sC,GAC3BE,EAAajtC,GAAQV,GAAA,cAARU,CAAqB+sC,gEAE9BG,GAAApnC,8BAAAqnC,CAAA,IAAA5B,GAAA,gBAAsBwB,IAAtBjnC,MAAA,IAAAsnC,GAAA,YAAAtnC,GAAmDknC,EAAnDlnC,OAAA,IAAAunC,GAAA,aAAAvnC,GAA4E8a,IAAA9a,GAAA2a,GAAA,IAAAC,GAAA,aAAAC,GAAA,eAAA7a,SAAkCmnC,EAAlCnnC,QAA5EA,wBAGZ2sB,GAAA3sB,QAAA,IAAA4sB,GAAA,SAAA5sB,QAEYgnC,EAAA,IAAAQ,GAAA,WAFZxnC,GAGYgnC,EAAA,IAAAQ,GAAA,UAHZxnC,GAIYgnC,EAAA,IAAAQ,GAAA,aAJZxnC,GAKYgnC,EAAA,IAAAQ,GAAA,YALZxnC,sBzEMAynC,GAAA,cAAAC,IKWAD,GAAA,sBAAAE,IACAF,GAAA,sBAAAG,IACAH,GAAA,mBAAAI,IACAJ,GAAA,oBAAAK,IACAL,GAAA,qBAAAM,IACAN,GAAA,oBAAAO,IACAP,GAAA,sBAAAQ,IACAR,GAAA,oBAAAS,IACAT,GAAA,sBAAAU,IACAV,GAAA,oBAAAW,IACAX,GAAA,uBAAAY,IACAZ,GAAA,qBAAAa,IACAb,GAAA,sBAAAc,IACAd,GAAA,sBACKe,GAAAtsB,GAAA,wCAAAtB,GAAA,cAAAsB,GAAA,8BAAArB,GAAA,8CAAAqB,GAAA,+BAAA0H,GAAA,qCAAA1H,GAAA,+BAAAgI,GAAA,iDAAAhI,GAAA,+BAAA8H,GAAA,yCUiCLyjB,GAAA,kBAAAhuC,IACAguC,GAAA,0BACKe,GAAAtsB,GAAA,0CAAAwH,GAAA,cAAAxH,GAAA,+CAAAyH,GAAA,uCAIL8jB,GAAA,mBAAAgB,IACAhB,GAAA,2BACKe,GAAAtsB,GAAA,0CAAAwH,GAAA,cAAAxH,GAAA,+CAAAyH,GAAA,iDAAA+kB,EAAAzsB,GAAA,8CAAA0sB,EAAAzsB,GAAA,sCAAAqL,GAAA,cAAA5K,OAAAisB,EAAA1sB,GAAA,qCAAAwL,GAAA,eAAAvL,GAAAM,GAAAisB,GAAAjsB,GAAAmsB,OAAA,UAAAzsB,GAAAM,GAAAisB,GAAAC,OAAA,OAAAC,EAAA,KAILnB,GAAA,qBAAAoB,IACApB,GAAA,6BACKe,GAAA,UAAAtsB,GAAA,sCAAAqL,GAAA,cAAA5K,SAIL8qB,GAAA,kBAAAqB,IACArB,GAAA,0BACKe,GAAA,UAAAtsB,GAAA,sCAAAqL,GAAA,cAAA5K,SAIL8qB,GAAA,qBAAAsB,IACAtB,GAAA,6BACKe,GAAA,UAAAtsB,GAAA,sCAAAqL,GAAA,cAAA5K,SAIL8qB,GAAA,mBAAAuB,IACAvB,GAAA,2BACKe,GAAA,UAAAtsB,GAAA,sCAAAqL,GAAA,cAAA5K,SAIL8qB,GAAA,kBAAAwB,IACAxB,GAAA,uBAAAyB,IACAzB,GAAA,+BACKe,GAAAtsB,GAAA,gDAAA2K,GAAA,eAAAlK,MAAA,WAAAA,OAAA,sBAAAwsB,EAAAltB,GAAA,8CAAAmtB,EAAAltB,GAAA,sCAAAqL,GAAA,cAAA5K,OAAA0sB,EAAAntB,GAAA,qCAAAwL,GAAA,eAAAvL,GAAAM,GAAA0sB,GAAA1sB,GAAA4sB,OAAA,UAAAltB,GAAAM,GAAA0sB,GAAAC,OAAA,OAAAltB,GAAA,6CAAA2L,GAAA,kBAAA1L,GAAAM,GAAA0sB,GAAAC,MAAA,SAAA3sB,GAAA0sB,MAAA,SAAAhtB,GAAAM,GAAA0sB,GAAAC,MAAA,UAAAjtB,GAAAM,GAAA0sB,GAAA1sB,GAAA4sB,OAAA,UAAAltB,GAAAM,GAAA0sB,GAAAC,OAAA,KAIL3B,GAAA,wBAAA6B,IACA7B,GAAA,gCACKe,GAAA,2BAAAe,EAAAttB,GAAA,8CAAAutB,EAAAttB,GAAA,sCAAAqL,GAAA,cAAA5K,OAAA8sB,EAAAvtB,GAAA,6CAAAuL,GAAA,eAAAhL,GAAA8sB,MAAA,UAAAptB,GAAAM,GAAA8sB,GAAA9sB,GAAAitB,UAAAxtB,GAAA,qCAAAwL,GAAA,eAAAvL,GAAAM,GAAA8sB,GAAA9sB,GAAAitB,OAAA,UAAAvtB,GAAAM,GAAA8sB,GAAAC,OAAA,OAAAC,EAAA,KE3FLhC,GAAA,iBAAAkC,IACAlC,GAAA,wBAAAmC,IACAnC,GAAA,yBACKe,GAAA,UAAAtsB,GAAA,2CAAAqM,GAAA,cAAApM,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,0CAAAsM,GAAA,iBAAAjM,GAAAJ,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,oCAAA4H,GAAA,cAAA5H,GAAA,4BAAA6H,GAAA,4XAAA7H,GAAA,4CAAAuM,GAAA,gBAAA9L,OAAAT,GAAA,0CAAAwM,GAAA,cAAAjM,GAAAR,GAAA,uDAILwrB,GAAA,8BACKe,GAAA,UAAArsB,GAAAD,GAAA,0CAAAsM,GAAA,iBAAAjM,GAAAJ,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,oCAAA4H,GAAA,cAAA5H,GAAA,4BAAA6H,GAAA,4XAAA7H,GAAA,4CAAAuM,GAAA,gBAAA9L,OAAAT,GAAA,0CAAAwM,GAAA,cAAAjM,GAAAR,GAAA,kDEvBLwrB,GAAA,sBAAAoC,IACApC,GAAA,qBAAAqC,IACArC,GAAA,iBAAAsC,IACAtC,GAAA,iBAAAuC,IACAvC,GAAA,iBAAAwC,IACAxC,GAAA,iBAAAyC,IACAzC,GAAA,iBAAA0C,IACA1C,GAAA,uBAAA2C,IACA3C,GAAA,sBACKe,GAAAtsB,GAAA,wCAAAyM,GAAA,kBAAAzM,GAAA,kCAAA0N,GAAA,yCAAA1N,GAAA,8BAAAyN,GAAA,0DAAAzN,GAAA,wCAAAuN,GAAA,iBAAA9M,MAAA,OAAAA,SEdL8qB,GAAA,iBAAA4C,IACA5C,GAAA,kBAAA6C,IACA7C,GAAA,oBAAA8C,IACA9C,GAAA,oBAAA+C,IACA/C,GAAA,qBACKe,GAAA,KAAAtsB,GAAA,uCAAAqO,GAAA,eAAA1N,OAAAX,GAAA,sCAAAsO,GAAA,gBAAArO,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,wCAAAuN,GAAA,iBAAA9M,MAAA,OAAAA,WAAA,UAAAR,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,yDAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,sDAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,uDAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDKmCLwrB,GAAA,8BAAwCgD,GAAA,SACxChD,GAAA,8BAAwCgD,GAAA,UACxChD,GAAA,8BAAwCgD,GAAA,UACxChD,GAAA,6BAAAiD,IACAjD,GAAA,2BAAAkD,IAQAlD,GAAA,aAAAmD,IACAnD,GAAA,eAAAoD,IEvCApD,GAAA,YAAAqD,IACArD,GAAA,mBAAAsD,IACAtD,GAAA,mBAAAuD,IACAvD,GAAA,cAAAwD,IACAxD,GAAA,oBACKe,GAAA,UAAAtsB,GAAA,iCAAA0Q,GAAA,aAAAzQ,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,oCAAA2Q,GAAA,gBAAA1Q,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,wDAILwrB,GAAA,mBACKe,GAAAtsB,GAAA,uCAAAgR,GAAA,gCAAAhR,GAAA,oCAAA2Q,GAAA,gBAAA1Q,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDAILwrB,GAAA,sBACKe,GAAAtsB,GAAA,0CAAA6Q,GAAA,cAAA7Q,GAAA,4BAAAgvB,GAAA,6CAAAruB,MAAA,UAAAA,MAAA,UAAAA,MAAA,UAAAA,MAAA,UAAAA,MAAA,UAAAA,OAAA,YCpCL4qB,GAAA,YAAA0D,IACA1D,GAAA,iBAAA2D,IACA3D,GAAA,oBACKe,GAAAtsB,GAAA,oCAAAkR,GAAA,cAAAlR,GAAA,4BAAAmR,GAAA,0BAAAnR,GAAA,oCAAA4H,GAAA,cAAA5H,GAAA,4BAAA6H,GAAA,6XEEL0jB,GAAA,cAAA4D,IACA5D,GAAA,sBACKe,GAAA,UAAAtsB,GAAA,qCAAA2R,GAAA,eAAA1R,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,0DAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,yDAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDEFLwrB,GAAA,uBAAA6D,IACA7D,GAAA,uBAAA8D,IACA9D,GAAA,0BACKe,GAAAtsB,GAAA,gDAAA+R,GAAA,cAAA/R,GAAA,kCAAAgS,GAAA,2CAAAhS,GAAA,kCAAAgS,GAAA,gDCuBLuZ,GAAA,qBAAA+D,IACA/D,GAAA,qBAAAgE,IACAhE,GAAA,mBAAAiE,IACAjE,GAAA,qBACKe,GAAAtsB,GAAA,sCAAAiG,GAAA,cAAAjG,GAAA,kCAAAkG,GAAA,kCAAAlG,GAAA,mCAAAmG,GAAA,cAAAlG,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,6CAAAoG,GAAA,aAAAnG,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,sCAAAqG,GAAA,gBAAApG,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,8DAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,mEAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,6CAAAoG,GAAA,aAAAnG,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,sCAAAqG,GAAA,gBAAApG,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,8DAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,8DAILwrB,GAAA,yBACKe,GAAA,UAAAtsB,GAAA,sCAAAqG,GAAA,gBAAApG,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,8DAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDE9BLwrB,GAAA,mBAAAkE,IACAlE,GAAA,iBAAAmE,IACAnE,GAAA,wBAAAoE,IACApE,GAAA,yBAAAqE,IACArE,GAAA,mBACKe,GAAAtsB,GAAA,kCAAA8S,GAAA,oBAAA9S,GAAA,+BAAA4S,GAAA,cAAA3S,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,uCAAAqO,GAAA,eAAA1N,cAIL4qB,GAAA,wBACKe,GAAAtsB,GAAA,sCAAAgT,GAAA,yBAAAhT,GAAA,4BAAA6vB,GAAA,mFAAA7vB,GAAA,uCAAAqO,GAAA,eAAA1N,OAAA,OEQL4qB,GAAA,mBACKe,GAAAtsB,GAAA,kCAAAoT,GAAA,yBAAApT,GAAA,4BAAAqT,GAAA,kEAAArT,GAAA,sCAAAqL,GAAA,cAAA5K,SAIL8qB,GAAA,iBAAAuE,IACAvE,GAAA,mBAAAwE,IEpBAxE,GAAA,oBAAAyE,IACAzE,GAAA,oBACKe,GAAA,UAAAtsB,GAAA,iCAAAqU,GAAA,gBAAApU,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,mCAAAsU,GAAA,eAAA7T,OAAAT,GAAA,sCAAAuU,GAAA,kBAAA9T,YAAA,QAAAR,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,yDAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,wDAAAQ,GAAAR,GAAA,qDEPLwrB,GAAA,oBAAA0E,IACA1E,GAAA,sBAAA2E,IACA3E,GAAA,mBAAA4E,IACA5E,GAAA,oBACKe,GAAAtsB,GAAA,oCAAA4U,GAAA,kBAAA1U,GAAAH,GAAA,wCAAAS,OAAA,UAAAR,GAAA,wCAAAuN,GAAA,iBAAA9M,MAAA,OAAAA,WAAA,KAAAT,GAAA,sCAAAqL,GAAA,cAAA5K,SENL8qB,GAAA,qBAAA6E,IACA7E,GAAA,qBACKe,GAAA,UAAAtsB,GAAA,mCAAA+V,GAAA,cAAA9V,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,oCAAA4H,GAAA,cAAA5H,GAAA,4BAAA6H,GAAA,mYAAApH,MAAA,YAAAA,MAAA,UAAAF,GAAAR,GAAA,iDGHLwrB,GAAA,oBAAA8E,IACA9E,GAAA,oBACKe,GAAA,KAAAtsB,GAAA,oCAAA4Y,GAAA,iBAAA3Y,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,gDAAAC,GAAA,iCAAA6Y,GAAA,cAAAtY,GAAAR,GAAA,yDAAAQ,GAAAR,GAAA,qDEJLwrB,GAAA,mBAAA+E,IACA/E,GAAA,0BACKe,GAAA/rB,GAAAR,GAAA,oDAAAC,GAAA,gDAAAyZ,GAAA,kBAAAxZ,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,uDAAAE,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,oDAAA0Z,GAAA,cAAAjZ,OAAAT,GAAA,sCAAAqL,GAAA,cAAA5K,WAAA,UAAAR,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,sCAAAqL,GAAA,cAAA5K,cAIL8qB,GAAA,iCACKe,GAAA/rB,GAAAR,GAAA,oDAAAC,GAAA,sCAAAqL,GAAA,cAAA5K,SAIL8qB,GAAA,+BACKe,GAAA,KAAAtsB,GAAA,oDAAA0Z,GAAA,cAAAjZ,OAAAT,GAAA,sCAAAqL,GAAA,cAAA5K,SEZL8qB,GAAA,mBAAAgF,IACAhF,GAAA,mBACKe,GAAA,2BAAAG,EAAA1sB,GAAA,8CAAAysB,EAAAxsB,GAAA,sCAAAqL,GAAA,cAAA5K,OAAAisB,EAAA1sB,GAAA,+BAAA6Z,GAAA,cAAA5Z,GAAAM,GAAAksB,GAAAD,MAAA,OAAAvsB,GAAAM,GAAAksB,GAAAlsB,GAAAmsB,QAAA,OAAAA,EAAA,KAILnB,GAAA,wBACKe,GAAA,UAAAtsB,GAAA,sCAAAqL,GAAA,cAAA5K,SEuEL8qB,GAAA,aAAAiF,IACAjF,GAAA,oBACKe,GAAAtsB,GAAA,sCAAAob,GAAA,wBAAAlb,GAAAH,GAAA,wCAAAS,OAAA,QAAAR,GAAA,6BAAAyb,GAAA,2CAAA/a,OAAA,KAAAT,GAAAD,GAAA,oCAAAuc,GAAA,gBAAAlc,GAAAJ,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,uCAAAywB,GAAA,kBAAAlwB,GAAAR,GAAA,sDAAAU,aAAAT,GAAA,kCAAAyc,GAAA,cAAAlc,GAAAR,GAAA,+CAAAC,GAAA,oCAAA2c,GAAA,gBAAAtc,GAAAJ,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,uCAAA0wB,GAAA,kBAAAnwB,GAAAR,GAAA,yDAAAQ,GAAAN,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,0DEpELwrB,GAAA,0BAAAoF,IACApF,GAAA,0BACKe,GAAA,UAAAtsB,GAAA,6CAAAqe,GAAA,cAAApe,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,2CAAA4wB,GAAA,uBAAA1wB,GAAAS,GAAAH,QAAAR,GAAA,uCAAAqO,GAAA,eAAA1N,QAAAX,GAAA,sCAAAqL,GAAA,cAAA5K,cAIL8qB,GAAA,+BACKe,GAAAtsB,GAAA,oDAAA6wB,GAAA,kBAAA5wB,GAAAD,GAAA,2CAAA4wB,GAAA,uBAAA1wB,GAAAS,GAAAH,QAAAR,GAAA,uCAAAqO,GAAA,eAAA1N,QAAA,OEXL4qB,GAAA,uBAAAuF,IACAvF,GAAA,uBACKe,GAAA,UAAArsB,GAAAD,GAAA,sCAAAuf,GAAA,cAAAlf,GAAAJ,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,gCAAAwf,GAAA,eAAA/e,OAAAT,GAAA,mCAAAyf,GAAA,kBAAAhf,OAAAT,GAAA,iCAAA0f,GAAA,cAAAjf,MAAA,iBAAAP,GAAAH,GAAA,wCAAAS,eAAAR,GAAA,sCAAA2f,GAAA,cAAAtf,GAAAJ,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,gCAAAwf,GAAA,eAAA/e,OAAAT,GAAA,mCAAAyf,GAAA,kBAAAhf,OAAAT,GAAA,iCAAA0f,GAAA,cAAAjf,MAAA,iBAAAP,GAAAH,GAAA,wCAAAS,kBAIL+qB,GAAA,4BACKe,GAAA,UAAArsB,GAAAD,GAAA,gCAAAwf,GAAA,eAAA/e,OAAAT,GAAA,mCAAAyf,GAAA,kBAAAhf,OAAAT,GAAA,iCAAA0f,GAAA,cAAAjf,MAAA,iBAAAP,GAAAH,GAAA,wCAAAS,WGoBL+qB,GAAA,qBAq2BApmD,OAAAw1B,GAAA,cAAAx1B,CAAA,OAAAmqC,OAAAhJ,MAAA,YAAAyqB,MAp2BAxF,GAAA,qBACKe,GAAA,UAAAtsB,GAAA,mCAAA6gB,GAAA,gBAAA5gB,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,yCAAA8gB,GAAA,eAAArgB,MAAA,YAAAA,MAAA,YAAAF,GAAAR,GAAA,2DAAAE,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,sCAAAgxB,GAAA,oBAAA/wB,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,gDAAAyZ,GAAA,kBAAAxZ,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,uDAAAE,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,oDAAA0Z,GAAA,cAAAjZ,OAAAT,GAAA,sCAAAqL,GAAA,cAAA5K,WAAA,UAAAR,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,sCAAAqL,GAAA,cAAA5K,iBAAA,cAAAR,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,6CAAAqe,GAAA,cAAApe,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,2CAAA4wB,GAAA,uBAAA1wB,GAAAS,GAAAH,QAAAR,GAAA,uCAAAqO,GAAA,eAAA1N,QAAAX,GAAA,sCAAAqL,GAAA,cAAA5K,iBAAA,OAAAR,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAP,GAAA,+BAAA8hB,GAAA,cAAA7hB,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kEAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,yDAAAE,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDErCLwrB,GAAA,uBAAA0F,IACA1F,GAAA,uBACKe,GAAAtsB,GAAA,0CAAAshB,GAAA,kBAAAthB,GAAA,mCAAAuhB,GAAA,8CAAAthB,GAAAD,GAAA,yCAAAwhB,GAAA,iBAAAjhB,GAAAR,GAAA,+CAAAC,GAAA,yCAAAyhB,GAAA,iBAAAlhB,GAAAR,GAAA,kDEHLwrB,GAAA,oBAAA2F,IACA3F,GAAA,oBACKe,GAAA,UAAAtsB,GAAA,iCAAA6hB,GAAA,cAAA5hB,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDCELwrB,GAAA,mBAAA4F,IACA5F,GAAA,mBACKe,GAAAtsB,GAAA,kCAAAoxB,GAAA,oBAAApxB,GAAA,+BAAA8hB,GAAA,cAAA7hB,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,kDEWLwrB,GAAA,oBAAA8F,IACA9F,GAAA,oBAAA+F,IACA/F,GAAA,oBACKe,GAAAtsB,GAAA,oCAAAmiB,GAAA,wBAAAliB,GAAAM,GAAAR,GAAA,+CAAAC,GAAA,oCAAA4H,GAAA,cAAA5H,GAAA,4BAAA6H,GAAA,gYAAA5H,GAAAD,GAAA,+BAAA+iB,GAAA,iBAAA9iB,GAAAM,GAAAR,GAAA,+CAAAE,GAAAD,GAAA,wCAAAgjB,GAAA,eAAAviB,OAAAT,GAAA,2CAAAijB,GAAA,kBAAAxiB,aAAAT,GAAA,8BAAAkjB,GAAA,gBAAAjjB,GAAAM,GAAAR,GAAA,+CAAAQ,GAAAR,GAAA,mDE4CLwrB,GAAA,qBAAiCgG,GAAAC,KACjCjG,GAAA,qBAAiCgG,GAAAE,KACjClG,GAAA,qBACKe,GAAAtsB,GAAA,sCAAAojB,GAAA,eAAApjB,GAAA,8BAAAkkB,GAAA,kEAAAhkB,GAAAH,GAAA,wCAAAS,QAAA,KAAAR,GAAA,sCAAAqL,GAAA,cAAA5K,SIpDL8qB,GAAA,eAAAmG","file":"app.a6d8727c869e49c3500a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([135,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const parseRadix = /^\\s*([\\+\\-])?(0[xob])?([0-9a-fA-F]+)\\s*$/;\nconst invalidRadix2 = /[^01]/;\nconst invalidRadix8 = /[^0-7]/;\nconst invalidRadix10 = /[^0-9]/;\nexport function isValid(s, radix) {\n    const res = parseRadix.exec(s);\n    if (res != null) {\n        if (radix == null) {\n            switch (res[2]) {\n                case \"0b\":\n                    radix = 2;\n                    break;\n                case \"0o\":\n                    radix = 8;\n                    break;\n                case \"0x\":\n                    radix = 16;\n                    break;\n                default:\n                    radix = 10;\n                    break;\n            }\n        }\n        switch (radix) {\n            case 2:\n                return invalidRadix2.test(res[3]) ? null : [res, 2];\n            case 8:\n                return invalidRadix8.test(res[3]) ? null : [res, 8];\n            case 10:\n                return invalidRadix10.test(res[3]) ? null : [res, 10];\n            case 16:\n                return [res, 16];\n            default:\n                throw new Error(\"Invalid Base.\");\n        }\n    }\n    return null;\n}\n// TODO does this perfectly match the .NET behavior ?\nexport function tryParse(s, radix, initial) {\n    const a = isValid(s, radix);\n    if (a !== null) {\n        const [[, prefix, , digits], radix_] = a;\n        const v = parseInt((prefix || \"\") + digits, radix_);\n        if (!Number.isNaN(v)) {\n            return [true, v];\n        }\n    }\n    return [false, initial];\n}\nexport function parse(s, radix) {\n    const a = tryParse(s, radix, 0);\n    if (a[0]) {\n        return a[1];\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/f572e3a17d313730cf11eb838f6d2a5e31626f8a/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { isValid } from \"./Int32\";\nimport { combineHashCodes } from \"./Util\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport default function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    return combineHashCodes([this.unsigned ? 1 : 0, this.high, this.low]);\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nexport const neg = op_UnaryNegation;\nexport const not = op_LogicalNot;\nexport const add = op_Addition;\nexport const sub = op_Subtraction;\nexport const mul = op_Multiply;\nexport const div = op_Division;\nexport const mod = op_Modulus;\nexport const shl = op_LeftShift;\nexport const shr = op_RightShift;\nexport const and = op_BitwiseAnd;\nexport const or = op_BitwiseOr;\nexport const xor = op_ExclusiveOr;\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return op_UnaryNegation(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (isValid(str, radix) === null) {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return op_UnaryNegation(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = op_Addition(op_Multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = op_Multiply(result, radixToPower);\n            result = op_Addition(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n// For compatibility with Int32 module\nexport function parse(str, radix) {\n    return fromString(str, false, radix);\n}\nexport function tryParse(str, radix, defaultValue) {\n    try {\n        return [true, fromString(str, false, radix)];\n    }\n    catch (_a) {\n        return [false, defaultValue];\n    }\n}\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = op_Division($this, radixLong), rem1 = op_Subtraction(op_Multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(op_UnaryNegation($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = op_Division(rem, radixToPower), intval = toInt(op_Subtraction(rem, op_Multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(op_UnaryNegation($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value is negative.\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value differs from the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value is less than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Compares this Long's value with the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(op_Subtraction($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Absolute value of the given number.\n */\nexport function abs($this) {\n    if (!$this.unsigned && isNegative($this))\n        return op_UnaryNegation($this);\n    else\n        return $this;\n}\n/**\n * Negates this Long's value.\n * @returns {!Long} Negated Long\n */\nexport function op_UnaryNegation($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return op_Addition(op_LogicalNot($this), ONE);\n}\n;\n/**\n * Returns the sum of this and the specified Long.\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function op_Addition($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function op_Subtraction($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return op_Addition($this, op_UnaryNegation(subtrahend));\n}\n;\n/**\n * Returns the product of this and the specified Long.\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function op_Multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return op_Multiply(op_UnaryNegation($this), op_UnaryNegation(multiplier));\n        else\n            return op_UnaryNegation(op_Multiply(op_UnaryNegation($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return op_UnaryNegation(op_Multiply($this, op_UnaryNegation(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function op_Division($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = op_RightShift($this, 1);\n                approx = op_LeftShift(op_Division(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = op_Subtraction($this, op_Multiply(divisor, approx));\n                    res = op_Addition(approx, op_Division(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return op_Division(op_UnaryNegation($this), op_UnaryNegation(divisor));\n            return op_UnaryNegation(op_Division(op_UnaryNegation($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return op_UnaryNegation(op_Division($this, op_UnaryNegation(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, op_RightShiftUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = op_Multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = op_Multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = op_Addition(res, approxRes);\n        rem = op_Subtraction(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long modulo the specified.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function op_Modulus($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return op_Subtraction($this, op_Multiply(op_Division($this, divisor), divisor));\n}\n;\n/**\n * Returns the bitwise NOT of this Long.\n * @returns {!Long}\n */\nexport function op_LogicalNot($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseAnd($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_ExclusiveOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_LeftShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShiftUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Converts this Long to signed.\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function offsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function toHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction toISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? offsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction toISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + offsetToString(offset);\n}\nfunction toStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = match;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n        }\n        if (rep !== match && rep < 10 && match.length > 1) {\n            rep = \"0\" + rep;\n        }\n        return rep;\n    });\n}\nexport function toStringWithOffset(date, format) {\n    const d = new Date(date.getTime() + date.offset);\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + offsetToString(date.offset);\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return toHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return toHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return toISOStringWithOffset(d, date.offset);\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return toStringWithCustomFormat(d, format, true);\n    }\n}\nexport function toStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? toHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? toHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return toISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return toStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? toStringWithOffset(date, format)\n        : toStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - offset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + date.offset, kind);\n            return DateTime(d.getTime() - offset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), offset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        /* tslint:disable */\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        /* tslint:enable */\n        if (m != null) {\n            let baseDate = null;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds = parseInt(timeParts[0], 10) * 3600 +\n                    parseInt(timeParts[1] || \"0\", 10) * 60 +\n                    parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function offset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTime(d.getTime() + ts, d.kind);\n}\nexport function addDays(d, v) {\n    return DateTime(d.getTime() + v * 86400000, d.kind);\n}\nexport function addHours(d, v) {\n    return DateTime(d.getTime() + v * 3600000, d.kind);\n}\nexport function addMinutes(d, v) {\n    return DateTime(d.getTime() + v * 60000, d.kind);\n}\nexport function addSeconds(d, v) {\n    return DateTime(d.getTime() + v * 1000, d.kind);\n}\nexport function addMilliseconds(d, v) {\n    return DateTime(d.getTime() + v, d.kind);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTime(d.getTime() - that, d.kind)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function compare(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + offset(x);\n        ytime = y.getTime() + offset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n","// tslint:disable:ban-types\nimport { compare as compareDates, toString as dateToString } from \"./Date\";\nexport const THIS_REF = Symbol(\"this\");\n// In case the object has been casted to an interface, test also agains THIS_REF\nexport function instanceofExtended(obj, cons) {\n    return obj instanceof cons || obj[THIS_REF] instanceof cons;\n}\nexport function downcast(obj) {\n    return obj[THIS_REF] != null ? obj[THIS_REF] : obj;\n}\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        }\n    }\n    return target;\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (typeof comparer.Compare === \"function\") {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function toString(obj, quoteStrings = false) {\n    if (obj == null) {\n        return String(obj);\n    }\n    switch (typeof obj) {\n        case \"number\":\n        case \"boolean\":\n        case \"symbol\":\n        case \"undefined\":\n            return String(obj);\n        case \"string\":\n            return quoteStrings ? JSON.stringify(obj) : obj;\n        case \"function\":\n            return obj.name;\n        case \"object\":\n            // if (typeof obj.ToString === \"function\") {\n            //   return obj.ToString();\n            // }\n            // TODO: Print some elements of iterables?\n            if (isPlainObject(obj) || Array.isArray(obj)) {\n                try {\n                    return JSON.stringify(obj, (k, v) => {\n                        if (v != null) {\n                            if (v instanceof Date) {\n                                return dateToString(v);\n                            }\n                            else if (isIterable(v) && !Array.isArray(v) && typeof v !== \"string\") {\n                                return Array.from(v);\n                            }\n                        }\n                        return String(v);\n                    });\n                }\n                catch (err) {\n                    // Fallback for objects with circular references\n                    return \"{\" + Object.keys(obj).map((k) => k + \": \" + String(obj[k])).join(\", \") + \"}\";\n                }\n            }\n            else {\n                return obj instanceof Date ? dateToString(obj) : String(obj);\n            }\n    }\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (typeof x.GetHashCode === \"function\") {\n                return x.GetHashCode();\n            }\n            else if (isArray(x)) {\n                const ar = x;\n                const len = ar.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(ar[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(toString(x));\n            }\n        }\n    }\n}\nexport function isArray(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x[Symbol.iterator] === \"function\";\n}\nexport function isPlainObject(x) {\n    return x != null && Object.getPrototypeOf(x).constructor === Object;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (typeof x.Equals === \"function\") {\n        return x.Equals(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (typeof x.CompareTo === \"function\") {\n        return x.CompareTo(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && compareArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date && compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n};\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + toString(kvPair));\n    }\n    const o = {};\n    for (let kvPair of fields) {\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        kvPair = downcast(kvPair); // The item may be casted to an interface\n        if (typeof kvPair.toJSON === \"function\") { // Deflate unions\n            kvPair = kvPair.toJSON();\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    return isArray(col) ? col.length : col.size;\n}\nexport function clear(col) {\n    if (isArray(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // return (...args: any[]) => {\n    //   // In some cases there may be more arguments applied than necessary\n    //   // (e.g. index when mapping an array), discard them\n    //   args = args.slice(0, arity);\n    //   let res = f;\n    //   while (args.length > 0) {\n    //       const curArgs = args.splice(0, res.length);\n    //       res = res.apply(null, curArgs);\n    //   }\n    //   return res;\n    // };\n    switch (arity) {\n        case 2:\n            return (a1, a2) => f(a1)(a2);\n        case 3:\n            return (a1, a2, a3) => f(a1)(a2)(a3);\n        case 4:\n            return (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n        case 5:\n            return (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n        case 6:\n            return (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n        case 7:\n            return (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n        case 8:\n            return (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return null;\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\n","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash, toString } from \"./Util\";\n// Options are erased in runtime by Fable, but we have\n// the `Some` type below to wrap values that would evaluate\n// to null in runtime. These two rules must be followed:\n// 1- None is always null in runtime, a non-strict null check\n//    (`x == null`) is enough to check the case of an option.\n// 2- To get the value of an option the `getValue` helper\n//    below must **always** be used.\n// export type Option<T> = T | Some<T>;\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return toString(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        return other == null\n            ? false\n            : equals(this.value, other instanceof Some ? other.value : other);\n    }\n    CompareTo(other) {\n        return other == null\n            ? 1\n            : compare(this.value, other instanceof Some ? other.value : other);\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\n// CHOICE\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\n// RESULT\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n","import { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            let cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs) {\n    let count = 1;\n    const sum = reduce((acc, x) => {\n        count++;\n        return acc + x;\n    }, xs);\n    return sum / count;\n}\nexport function averageBy(f, xs) {\n    let count = 1;\n    const sum = reduce((acc, x) => {\n        count++;\n        return (count === 2 ? f(acc) : acc) + f(x);\n    }, xs);\n    return sum / count;\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => void 0);\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function forAll(f, xs) {\n    return fold((acc, x) => acc && f(x), true, xs);\n}\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => acc && f(x, y), true, xs, ys);\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => f(x), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => f(x, y), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => f(i, x), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => f(i, x, y), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan((last, next) => [last[1], next], [0, 0], xs));\n}\nexport function rangeStep(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null, first));\n}\nexport function range(first, last) {\n    return rangeStep(first, 1, last);\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs) {\n    return fold((acc, x) => acc + x, 0, xs);\n}\nexport function sumBy(f, xs) {\n    return fold((acc, x) => acc + f(x), 0, xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            return {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                },\n            };\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n","import { toString as dateToString } from \"./Date\";\nimport Long, { fromBytes as longFromBytes, toBytes as longToBytes, toString as longToString } from \"./Long\";\nimport { escape } from \"./RegExp\";\nimport { toString } from \"./Util\";\nconst fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:(.+?))?\\}/g;\n// From https://stackoverflow.com/a/13653180/3922220\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return longToString(x.unsigned ? x : longFromBytes(longToBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, pad, precision, format) => {\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                rep = Number(rep).toFixed(precision || 6);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = Number(rep).toPrecision(precision);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = Number(rep).toExponential(precision);\n                break;\n            case \"O\":\n                rep = toString(rep);\n                break;\n            case \"A\":\n                rep = toString(rep, true);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n        }\n        const plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep, 10) >= 0;\n        pad = parseInt(pad, 10);\n        if (!isNaN(pad)) {\n            const ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\n            rep = padLeft(String(rep), Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n        }\n        const once = prefix + (plusPrefix ? \"+\" + rep : rep);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (match, idx, pad, pattern) => {\n        let rep = args[idx];\n        let padSymbol = \" \";\n        if (typeof rep === \"number\" || rep instanceof Long) {\n            switch ((pattern || \"\").substring(0, 1)) {\n                case \"f\":\n                case \"F\":\n                    rep = pattern.length > 1 ? rep.toFixed(pattern.substring(1)) : rep.toFixed(2);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = pattern.length > 1 ? rep.toPrecision(pattern.substring(1)) : rep.toPrecision();\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = pattern.length > 1 ? rep.toExponential(pattern.substring(1)) : rep.toExponential();\n                    break;\n                case \"p\":\n                case \"P\":\n                    rep = (pattern.length > 1 ? (rep * 100).toFixed(pattern.substring(1)) : (rep * 100).toFixed(2)) + \" %\";\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default:\n                    const m = /^(0+)(\\.0+)?$/.exec(pattern);\n                    if (m != null) {\n                        let decs = 0;\n                        if (m[2] != null) {\n                            rep = rep.toFixed(decs = m[2].length - 1);\n                        }\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n                        padSymbol = \"0\";\n                    }\n                    else if (pattern) {\n                        rep = pattern;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern);\n        }\n        pad = parseInt((pad || \"\").substring(1), 10);\n        if (!isNaN(pad)) {\n            rep = padLeft(String(rep), Math.abs(pad), padSymbol, pad < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function join(delimiter, ...xs) {\n    return xs.map((x) => String(x)).join(delimiter);\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return join(delimiter, ...xs.slice(startIndex, endIndexPlusOne));\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmed = trim(str, \"{\", \"}\");\n    if (guidRegex.test(trimmed)) {\n        return doNotThrow ? [true, trimmed] : trimmed;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n/* tslint:disable */\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = '';\n    for (let a = 0; a++ < 36; b += a * 51 & 52\n        ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n        : '-')\n        ;\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (var i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, (function (oct) {\n        switch (i) {\n            // .NET saves first three byte groups with differten endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    return _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + '-' +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + '-' +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + '-' +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + '-' +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n}\n/* tslint:enable */\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n    if (count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter(pred).join(\"\");\n}\n","import { L, Record, declare, Union } from \"./Types\";\nimport { downcast, structuralHash, toString, extend, THIS_REF } from \"./Util\";\nimport { value as value$$2, some, Choice } from \"./Option\";\nimport { iterate as iterate$$1, empty as empty$$1, fold as fold$$2, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq\";\nimport { fold as fold$$1 } from \"./Array\";\nimport { join } from \"./String\";\nexport const SetTree$00601 = declare(function SetTree$00601(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTree$00601$$$System$002EIEquatable$00601($this$$3) {\n  return {\n    [THIS_REF]: $this$$3\n  };\n}\nexport function SetTree$00601$$$System$002EIComparable$00601($this$$4) {\n  return {\n    [THIS_REF]: $this$$4\n  };\n}\nexport function SetTreeModule$$$countAux(s, acc) {\n  SetTreeModule$$$countAux: while (true) {\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          const r = s.fields[2];\n          const l = s.fields[1];\n          s = l;\n          acc = SetTreeModule$$$countAux(r, acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        const h$$1 = t.fields[3] | 0;\n        return h$$1 | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  const matchValue = [l$$2, r$$2];\n  var $target$$5;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$5 = 0;\n    } else {\n      $target$$5 = 1;\n    }\n  } else {\n    $target$$5 = 1;\n  }\n\n  switch ($target$$5) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      const t2r = t2.fields[2];\n      const t2l = t2.fields[1];\n      const t2k = t2.fields[0];\n\n      if (SetTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 1) {\n          const t2lr = t2l.fields[2];\n          const t2ll = t2l.fields[1];\n          const t2lk = t2l.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2ll), t2lk, SetTreeModule$$$mk(t2lr, t2k, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2l), t2k, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      const t1r = t1.fields[2];\n      const t1l = t1.fields[1];\n      const t1k = t1.fields[0];\n\n      if (SetTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 1) {\n          const t1rr = t1r.fields[2];\n          const t1rl = t1r.fields[1];\n          const t1rk = t1r.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1l, t1k, t1rl), t1rk, SetTreeModule$$$mk(t1rr, k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1l, t1k, SetTreeModule$$$mk(t1r, k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const k2$$1 = t$$1.fields[0];\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const r$$3 = t$$1.fields[2];\n        const l$$3 = t$$1.fields[1];\n        const k2 = t$$1.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, l$$3), k2, r$$3);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(l$$3, k2, SetTreeModule$$$add(comparer, k$$2, r$$3));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  const matchValue$$1 = [t1$$1, t2$$1];\n  var $target$$6, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (matchValue$$1[0].tag === 2) {\n    if (matchValue$$1[1].tag === 0) {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    } else {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    }\n  } else if (matchValue$$1[0].tag === 1) {\n    if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 3;\n      k2$$2 = matchValue$$1[1].fields[0];\n      t1$$3 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 1) {\n      $target$$6 = 4;\n      h1 = matchValue$$1[0].fields[3];\n      h2 = matchValue$$1[1].fields[3];\n      k1$$1 = matchValue$$1[0].fields[0];\n      k2$$3 = matchValue$$1[1].fields[0];\n      t11 = matchValue$$1[0].fields[1];\n      t12 = matchValue$$1[0].fields[2];\n      t21 = matchValue$$1[1].fields[1];\n      t22 = matchValue$$1[1].fields[2];\n    } else {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    }\n  } else {\n    $target$$6 = 0;\n    t2$$2 = matchValue$$1[1];\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const k1$$3 = t$$2.fields[0];\n        const c$$3 = comparer$$2.Compare(k1$$3, pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const t12$$1 = t$$2.fields[2];\n        const t11$$1 = t$$2.fields[1];\n        const k1$$2 = t$$2.fields[0];\n        const c$$2 = comparer$$2.Compare(pivot, k1$$2) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t11$$1);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], k1$$2, t12$$1)];\n        } else if (c$$2 === 0) {\n          return [t11$$1, true, t12$$1];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t12$$1);\n          return [SetTreeModule$$$balance(comparer$$2, t11$$1, k1$$2, patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        const k2$$4 = t$$3.fields[0];\n        return [k2$$4, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        const r$$4 = t$$3.fields[2];\n        const l$$4 = t$$3.fields[1];\n        const k2$$5 = t$$3.fields[0];\n\n        if (l$$4.tag === 0) {\n          return [k2$$5, r$$4];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(l$$4);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], k2$$5, r$$4)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const k2$$6 = t$$4.fields[0];\n        const c$$4 = comparer$$3.Compare(k$$4, k2$$6) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const r$$5 = t$$4.fields[2];\n        const l$$5 = t$$4.fields[1];\n        const k2$$7 = t$$4.fields[0];\n        const c$$5 = comparer$$3.Compare(k$$4, k2$$7) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, l$$5), k2$$7, r$$5);\n        } else if (c$$5 === 0) {\n          const matchValue$$2 = [l$$5, r$$5];\n\n          if (matchValue$$2[0].tag === 0) {\n            return r$$5;\n          } else if (matchValue$$2[1].tag === 0) {\n            return l$$5;\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(r$$5);\n            return SetTreeModule$$$mk(l$$5, patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(l$$5, k2$$7, SetTreeModule$$$remove(comparer$$3, k$$4, r$$5));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem(comparer$$4, k$$5, t$$5) {\n  SetTreeModule$$$mem: while (true) {\n    switch (t$$5.tag) {\n      case 2:\n        {\n          const k2$$9 = t$$5.fields[0];\n          return comparer$$4.Compare(k$$5, k2$$9) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$6 = t$$5.fields[2];\n          const l$$6 = t$$5.fields[1];\n          const k2$$8 = t$$5.fields[0];\n          const c$$6 = comparer$$4.Compare(k$$5, k2$$8) | 0;\n\n          if (c$$6 < 0) {\n            comparer$$4 = comparer$$4;\n            k$$5 = k$$5;\n            t$$5 = l$$6;\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            comparer$$4 = comparer$$4;\n            k$$5 = k$$5;\n            t$$5 = r$$6;\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$iter(f, t$$6) {\n  switch (t$$6.tag) {\n    case 2:\n      {\n        const k2$$11 = t$$6.fields[0];\n        f(k2$$11);\n        break;\n      }\n\n    case 0:\n      {\n        break;\n      }\n\n    default:\n      {\n        const r$$7 = t$$6.fields[2];\n        const l$$7 = t$$6.fields[1];\n        const k2$$10 = t$$6.fields[0];\n        SetTreeModule$$$iter(f, l$$7);\n        f(k2$$10);\n        SetTreeModule$$$iter(f, r$$7);\n      }\n  }\n}\nexport function SetTreeModule$$$foldBack($arg$$9, $arg$$10, $arg$$11) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $arg$$9,\n          m$$1 = $arg$$10,\n          x$$1 = $arg$$11;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          const k$$7 = m$$1.fields[0];\n          return f$$1(k$$7, x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          const r$$8 = m$$1.fields[2];\n          const l$$8 = m$$1.fields[1];\n          const k$$6 = m$$1.fields[0];\n          $arg$$9 = f$$1;\n          $arg$$10 = l$$8;\n          $arg$$11 = f$$1(k$$6, SetTreeModule$$$foldBack(f$$1, r$$8, x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$fold($arg$$12, $arg$$13, $arg$$14) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $arg$$12,\n          x$$2 = $arg$$13,\n          m$$2 = $arg$$14;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          const k$$9 = m$$2.fields[0];\n          return f$$2(x$$2, k$$9);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const r$$9 = m$$2.fields[2];\n          const l$$9 = m$$2.fields[1];\n          const k$$8 = m$$2.fields[0];\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, l$$9);\n          const x$$4 = f$$2(x$$3, k$$8);\n          $arg$$12 = f$$2;\n          $arg$$13 = x$$4;\n          $arg$$14 = r$$9;\n          continue SetTreeModule$$$fold;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$forall($arg$$15, $arg$$16) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $arg$$15,\n          m$$3 = $arg$$16;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          const k2$$13 = m$$3.fields[0];\n          return f$$3(k2$$13);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          const r$$10 = m$$3.fields[2];\n          const l$$10 = m$$3.fields[1];\n          const k2$$12 = m$$3.fields[0];\n\n          if (f$$3(k2$$12) ? SetTreeModule$$$forall(f$$3, l$$10) : false) {\n            $arg$$15 = f$$3;\n            $arg$$16 = r$$10;\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$exists($arg$$17, $arg$$18) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $arg$$17,\n          m$$4 = $arg$$18;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          const k2$$15 = m$$4.fields[0];\n          return f$$4(k2$$15);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$11 = m$$4.fields[2];\n          const l$$11 = m$$4.fields[1];\n          const k2$$14 = m$$4.fields[0];\n\n          if (f$$4(k2$$14) ? true : SetTreeModule$$$exists(f$$4, l$$11)) {\n            return true;\n          } else {\n            $arg$$17 = f$$4;\n            $arg$$18 = r$$11;\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($arg$$19, $arg$$20, $arg$$21, $arg$$22) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$19,\n          f$$5 = $arg$$20,\n          s$$2 = $arg$$21,\n          acc$$1 = $arg$$22;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          const k$$11 = s$$2.fields[0];\n\n          if (f$$5(k$$11)) {\n            return SetTreeModule$$$add(comparer$$7, k$$11, acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const r$$12 = s$$2.fields[2];\n          const l$$12 = s$$2.fields[1];\n          const k$$10 = s$$2.fields[0];\n          const acc$$2 = f$$5(k$$10) ? SetTreeModule$$$add(comparer$$7, k$$10, acc$$1) : acc$$1;\n          $arg$$19 = comparer$$7;\n          $arg$$20 = f$$5;\n          $arg$$21 = l$$12;\n          $arg$$22 = SetTreeModule$$$filterAux(comparer$$7, f$$5, r$$12, acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux(comparer$$9, m$$6, acc$$3) {\n  SetTreeModule$$$diffAux: while (true) {\n    switch (m$$6.tag) {\n      case 2:\n        {\n          const k$$13 = m$$6.fields[0];\n          return SetTreeModule$$$remove(comparer$$9, k$$13, acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          const r$$13 = m$$6.fields[2];\n          const l$$13 = m$$6.fields[1];\n          const k$$12 = m$$6.fields[0];\n          const $var$$26 = comparer$$9;\n          m$$6 = l$$13;\n          acc$$3 = SetTreeModule$$$diffAux(comparer$$9, r$$13, SetTreeModule$$$remove(comparer$$9, k$$12, acc$$3));\n          comparer$$9 = $var$$26;\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  const matchValue$$3 = [t1$$4, t2$$4];\n  var $target$$27, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (matchValue$$3[0].tag === 0) {\n    $target$$27 = 1;\n    t$$7 = matchValue$$3[1];\n  } else if (matchValue$$3[0].tag === 2) {\n    if (matchValue$$3[1].tag === 0) {\n      $target$$27 = 2;\n      t$$8 = matchValue$$3[0];\n    } else if (matchValue$$3[1].tag === 2) {\n      $target$$27 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    } else {\n      $target$$27 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    }\n  } else if (matchValue$$3[1].tag === 0) {\n    $target$$27 = 2;\n    t$$8 = matchValue$$3[0];\n  } else if (matchValue$$3[1].tag === 2) {\n    $target$$27 = 4;\n    k2$$17 = matchValue$$3[1].fields[0];\n    t1$$5 = matchValue$$3[0];\n  } else {\n    $target$$27 = 0;\n    h1$$1 = matchValue$$3[0].fields[3];\n    h2$$1 = matchValue$$3[1].fields[3];\n    k1$$4 = matchValue$$3[0].fields[0];\n    k2$$16 = matchValue$$3[1].fields[0];\n    t11$$2 = matchValue$$3[0].fields[1];\n    t12$$2 = matchValue$$3[0].fields[2];\n    t21$$1 = matchValue$$3[1].fields[1];\n    t22$$1 = matchValue$$3[1].fields[2];\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7, acc$$4) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    switch (m$$7.tag) {\n      case 2:\n        {\n          const k$$15 = m$$7.fields[0];\n\n          if (SetTreeModule$$$mem(comparer$$12, k$$15, b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, k$$15, acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const r$$14 = m$$7.fields[2];\n          const l$$14 = m$$7.fields[1];\n          const k$$14 = m$$7.fields[0];\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, r$$14, acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, k$$14, b$$3) ? SetTreeModule$$$add(comparer$$12, k$$14, acc$$5) : acc$$5;\n          comparer$$12 = comparer$$12;\n          b$$3 = b$$3;\n          m$$7 = l$$14;\n          acc$$4 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($arg$$33, $arg$$34, $arg$$35, $arg$$36, $arg$$37) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $arg$$33,\n          f$$8 = $arg$$34,\n          s$$4 = $arg$$35,\n          acc_0 = $arg$$36,\n          acc_1 = $arg$$37;\n    const acc$$7 = [acc_0, acc_1];\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          const k$$18 = s$$4.fields[0];\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, k$$18, acc$$7[0], acc$$7[1]);\n        }\n\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      default:\n        {\n          const r$$15 = s$$4.fields[2];\n          const l$$15 = s$$4.fields[1];\n          const k$$17 = s$$4.fields[0];\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, r$$15, acc$$7[0], acc$$7[1]);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, k$$17, acc$$8[0], acc$$8[1]);\n          $arg$$33 = comparer$$15;\n          $arg$$34 = f$$8;\n          $arg$$35 = l$$15;\n          $arg$$36 = acc$$9[0];\n          $arg$$37 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        const k2$$19 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$19, new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        const r$$16 = s$$6.fields[2];\n        const l$$16 = s$$6.fields[1];\n        const k2$$18 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$18, l$$16, r$$16]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux(s$$7, n$$1) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    switch (s$$7.tag) {\n      case 2:\n        {\n          const k$$20 = s$$7.fields[0];\n          return k$$20;\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          const l$$17 = s$$7.fields[1];\n          const k$$19 = s$$7.fields[0];\n          s$$7 = l$$17;\n          n$$1 = k$$19;\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        const k$$22 = s$$8.fields[0];\n        return some(k$$22);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const l$$18 = s$$8.fields[1];\n        const k$$21 = s$$8.fields[0];\n        return some(SetTreeModule$$$minimumElementAux(l$$18, k$$21));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux(s$$9, n$$2) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    switch (s$$9.tag) {\n      case 2:\n        {\n          const k$$24 = s$$9.fields[0];\n          return k$$24;\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          const r$$17 = s$$9.fields[2];\n          const k$$23 = s$$9.fields[0];\n          s$$9 = r$$17;\n          n$$2 = k$$23;\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        const k$$26 = s$$10.fields[0];\n        return some(k$$26);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const r$$18 = s$$10.fields[2];\n        const k$$25 = s$$10.fields[0];\n        return some(SetTreeModule$$$maximumElementAux(r$$18, k$$25));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function SetTreeModule$002ESetIterator$00601(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$$$collapseLHS(stack) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        stack = L(stack.head.fields[1], L(SetTreeModule$$$SetOne(stack.head.fields[0]), L(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        stack = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return L();\n    }\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(L(s$$13, L())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function SetTreeModule$002EmkIEnumerator$00601(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this != null ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EGeneric$002EIEnumerator$00601($this$$41) {\n  return extend(SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EIEnumerator($this$$41), SetTreeModule$002EmkIEnumerator$00601$$$System$002EIDisposable($this$$41), {\n    [THIS_REF]: $this$$41,\n\n    get Current() {\n      return SetTreeModule$$$current($this$$41.i);\n    }\n\n  });\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EIEnumerator($this$$42) {\n  return {\n    [THIS_REF]: $this$$42,\n\n    get Current() {\n      return SetTreeModule$$$current($this$$42.i);\n    },\n\n    MoveNext() {\n      return SetTreeModule$$$moveNext($this$$42.i);\n    },\n\n    Reset() {\n      $this$$42.i = SetTreeModule$$$mkIterator($this$$42.s);\n    }\n\n  };\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$System$002EIDisposable($this$$43) {\n  return {\n    [THIS_REF]: $this$$43,\n\n    Dispose() {}\n\n  };\n}\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EGeneric$002EIEnumerator$00601(SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15));\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks(comparer$$17, l1, l2) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const matchValue$$8 = [l1, l2];\n    var $target$$44, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (matchValue$$8[0].tail != null) {\n      if (matchValue$$8[1].tail != null) {\n        if (matchValue$$8[1].head.tag === 2) {\n          if (matchValue$$8[0].head.tag === 2) {\n            $target$$44 = 4;\n            n1k = matchValue$$8[0].head.fields[0];\n            n2k = matchValue$$8[1].head.fields[0];\n            t1$$7 = matchValue$$8[0].tail;\n            t2$$7 = matchValue$$8[1].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            if (matchValue$$8[0].head.fields[1].tag === 0) {\n              $target$$44 = 6;\n              emp = matchValue$$8[0].head.fields[1];\n              n1k$$2 = matchValue$$8[0].head.fields[0];\n              n1r = matchValue$$8[0].head.fields[2];\n              n2k$$2 = matchValue$$8[1].head.fields[0];\n              t1$$9 = matchValue$$8[0].tail;\n              t2$$9 = matchValue$$8[1].tail;\n            } else {\n              $target$$44 = 9;\n              n1k$$5 = matchValue$$8[0].head.fields[0];\n              n1l = matchValue$$8[0].head.fields[1];\n              n1r$$2 = matchValue$$8[0].head.fields[2];\n              t1$$12 = matchValue$$8[0].tail;\n            }\n          } else {\n            $target$$44 = 10;\n            n2k$$4 = matchValue$$8[1].head.fields[0];\n            t2$$11 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[1].head.tag === 1) {\n          if (matchValue$$8[1].head.fields[1].tag === 0) {\n            if (matchValue$$8[0].head.tag === 2) {\n              $target$$44 = 5;\n              n1k$$1 = matchValue$$8[0].head.fields[0];\n              n2k$$1 = matchValue$$8[1].head.fields[0];\n              n2r = matchValue$$8[1].head.fields[2];\n              t1$$8 = matchValue$$8[0].tail;\n              t2$$8 = matchValue$$8[1].tail;\n            } else if (matchValue$$8[0].head.tag === 1) {\n              if (matchValue$$8[0].head.fields[1].tag === 0) {\n                $target$$44 = 7;\n                n1k$$3 = matchValue$$8[0].head.fields[0];\n                n1r$$1 = matchValue$$8[0].head.fields[2];\n                n2k$$3 = matchValue$$8[1].head.fields[0];\n                n2r$$1 = matchValue$$8[1].head.fields[2];\n                t1$$10 = matchValue$$8[0].tail;\n                t2$$10 = matchValue$$8[1].tail;\n              } else {\n                $target$$44 = 9;\n                n1k$$5 = matchValue$$8[0].head.fields[0];\n                n1l = matchValue$$8[0].head.fields[1];\n                n1r$$2 = matchValue$$8[0].head.fields[2];\n                t1$$12 = matchValue$$8[0].tail;\n              }\n            } else {\n              $target$$44 = 11;\n              n2k$$5 = matchValue$$8[1].head.fields[0];\n              n2l = matchValue$$8[1].head.fields[1];\n              n2r$$2 = matchValue$$8[1].head.fields[2];\n              t2$$12 = matchValue$$8[1].tail;\n            }\n          } else if (matchValue$$8[0].head.tag === 2) {\n            $target$$44 = 8;\n            n1k$$4 = matchValue$$8[0].head.fields[0];\n            t1$$11 = matchValue$$8[0].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            $target$$44 = 9;\n            n1k$$5 = matchValue$$8[0].head.fields[0];\n            n1l = matchValue$$8[0].head.fields[1];\n            n1r$$2 = matchValue$$8[0].head.fields[2];\n            t1$$12 = matchValue$$8[0].tail;\n          } else {\n            $target$$44 = 11;\n            n2k$$5 = matchValue$$8[1].head.fields[0];\n            n2l = matchValue$$8[1].head.fields[1];\n            n2r$$2 = matchValue$$8[1].head.fields[2];\n            t2$$12 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[0].head.tag === 2) {\n          $target$$44 = 8;\n          n1k$$4 = matchValue$$8[0].head.fields[0];\n          t1$$11 = matchValue$$8[0].tail;\n        } else if (matchValue$$8[0].head.tag === 1) {\n          $target$$44 = 9;\n          n1k$$5 = matchValue$$8[0].head.fields[0];\n          n1l = matchValue$$8[0].head.fields[1];\n          n1r$$2 = matchValue$$8[0].head.fields[2];\n          t1$$12 = matchValue$$8[0].tail;\n        } else {\n          $target$$44 = 3;\n          t1$$6 = matchValue$$8[0].tail;\n          t2$$6 = matchValue$$8[1].tail;\n        }\n      } else {\n        $target$$44 = 2;\n      }\n    } else if (matchValue$$8[1].tail != null) {\n      $target$$44 = 1;\n    } else {\n      $target$$44 = 0;\n    }\n\n    switch ($target$$44) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = t1$$6;\n          l2 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = t1$$7;\n            l2 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = L(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            l2 = L(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = L(n1r, t1$$9);\n            l2 = L(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = L(n1r$$1, t1$$10);\n            l2 = L(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = L(new SetTree$00601(0, \"SetEmpty\"), L(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          l2 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = L(n1l, L(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          l2 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = l1;\n          l2 = L(new SetTree$00601(0, \"SetEmpty\"), L(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = l1;\n          l2 = L(n2l, L(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  const matchValue$$9 = [s1, s2];\n\n  if (matchValue$$9[0].tag === 0) {\n    if (matchValue$$9[1].tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (matchValue$$9[1].tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, L(s1, L()), L(s2, L())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop(m$$8, acc$$10) {\n  SetTreeModule$$$loop: while (true) {\n    switch (m$$8.tag) {\n      case 2:\n        {\n          const k$$32 = m$$8.fields[0];\n          return L(k$$32, acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          const r$$20 = m$$8.fields[2];\n          const l$$20 = m$$8.fields[1];\n          const k$$31 = m$$8.fields[0];\n          m$$8 = l$$20;\n          acc$$10 = L(k$$31, SetTreeModule$$$loop(r$$20, acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, L());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator(comparer$$19, acc$$11, e) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const $var$$45 = comparer$$19;\n      acc$$11 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      e = e;\n      comparer$$19 = $var$$45;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    ie.Dispose();\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, l$$21) {\n  return fold$$1(function (acc$$12, k$$33) {\n    return SetTreeModule$$$add(comparer$$21, k$$33, acc$$12);\n  }, new SetTree$00601(0, \"SetEmpty\"), l$$21);\n}\nexport const FSharpSet = declare(function FSharpSet(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this != null ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$$System$002ECollections$002EGeneric$002EIEnumerable$00601($this$$46) {\n  return {\n    [THIS_REF]: $this$$46\n  };\n}\nexport function FSharpSet$$get_Comparer(__$$5) {\n  return __$$5.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$6) {\n  return __$$6.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  if (FSharpSet$$get_Tree(s$$27).tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  if (FSharpSet$$get_Tree(s$$28).tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$596F5D77(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$34) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$34), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  if (FSharpSet$$get_Tree(a$$4).tag === 0) {\n    return a$$4;\n  } else if (FSharpSet$$get_Tree(b$$5).tag === 0) {\n    return a$$4;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  if (FSharpSet$$get_Tree(b$$6).tag === 0) {\n    return a$$5;\n  } else if (FSharpSet$$get_Tree(a$$5).tag === 0) {\n    return b$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  if (FSharpSet$$get_Tree(b$$7).tag === 0) {\n    return b$$7;\n  } else if (FSharpSet$$get_Tree(a$$6).tag === 0) {\n    return a$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  const this$ = this;\n  return \"set [\" + join(\"; \", ...map$$1(toString, this$)) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$22, y$$4) {\n    return (x$$22 << 1) + y$$4 + 631;\n  };\n\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    res = combineHash(res, structuralHash(e$$1.Current));\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(downcast(that))) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(downcast(that$$1))) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$2(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$27, SetTreeModule$$$fold(function (acc$$14, k$$35) {\n    return SetTreeModule$$$add(comparer$$27, f$$23(k$$35), acc$$14);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$44)));\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$1, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$1));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source, comparer$$32) {\n  return createMutablePrivate(comparer$$32, SetTreeModule$$$ofSeq(comparer$$32, source));\n}\nexport function distinct(xs, comparer$$33) {\n  return createMutable(xs, comparer$$33);\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  const li$$1 = [];\n  const hashSet = createMutable(empty$$1(), comparer$$34);\n  iterate$$1(function (x$$37) {\n    if (hashSet.add_(projection(x$$37))) {\n      li$$1.push(x$$37);\n    }\n  }, xs$$1);\n  return li$$1;\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$2(function folder(acc$$15, x$$38) {\n    return acc$$15.add(x$$38);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$39) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$39)) {\n      s1$$5.delete(x$$39);\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$40) {\n    s1$$6.delete(x$$40);\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import { defaultArg, value as value$$9, some } from \"./Option\";\nimport { compare, addToSet, tryGetValue, comparerFromEqualityComparer, max as max$$1, comparePrimitives, count as count$$12 } from \"./Util\";\nimport { iterate as iterate$$1 } from \"./Seq\";\nimport { ofSeq as ofSeq$$1 } from \"./Array\";\nimport { createMutable } from \"./Map\";\nimport { createMutable as createMutable$$1 } from \"./Set\";\nimport { length as length$$2 } from \"./List\";\nimport { L } from \"./Types\";\n\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\n\nexport function append(array1, array2, cons) {\n  const len1 = array1.length | 0;\n  const len2 = array2.length | 0;\n  const newArray = new cons(len1 + len2);\n\n  for (let i = 0; i <= len1 - 1; i++) {\n    newArray[i] = array1[i];\n  }\n\n  for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n    newArray[i$$1 + len1] = array2[i$$1];\n  }\n\n  return newArray;\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  for (let i$$2 = targetIndex; i$$2 <= targetIndex + count - 1; i$$2++) {\n    target[i$$2] = value;\n  }\n\n  return target;\n}\nexport function getSubArray(array$$2, offset, length) {\n  return array$$2.slice(offset, offset + length);\n}\nexport function last(array$$4) {\n  if (array$$4.length === 0) {\n    throw new Error(\"The input array was empty\" + \"\\\\nParameter name: \" + \"array\");\n  }\n\n  return array$$4[array$$4.length - 1];\n}\nexport function tryLast(array$$5) {\n  if (array$$5.length === 0) {\n    return null;\n  } else {\n    return some(array$$5[array$$5.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  const len = source.length | 0;\n  const target$$1 = new cons$$1(len);\n\n  for (let i$$3 = 0; i$$3 <= len - 1; i$$3++) {\n    target$$1[i$$3] = f(i$$3, source[i$$3]);\n  }\n\n  return target$$1;\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  const len$$1 = source$$1.length | 0;\n  const target$$2 = new cons$$2(len$$1);\n\n  for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n    target$$2[i$$4] = f$$1(source$$1[i$$4]);\n  }\n\n  return target$$2;\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping, state, array$$6, cons$$7) {\n  const matchValue = array$$6.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    const len$$2 = matchValue | 0;\n    let acc = state;\n    const res = new cons$$7(len$$2);\n\n    for (let i$$9 = 0; i$$9 <= array$$6.length - 1; i$$9++) {\n      const patternInput = mapping(acc, array$$6[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$1, array$$7, state$$1, cons$$8) {\n  const matchValue$$1 = array$$7.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    const len$$3 = matchValue$$1 | 0;\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(len$$3);\n\n    for (let i$$10 = array$$7.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$1(array$$7[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\n\nfunction concatImpl(cons$$9, arrays) {\n  const arrays$$1 = Array.from(arrays);\n\n  if (count$$12(arrays$$1) > 0) {\n    let totalIdx = 0;\n    let totalLength = 0;\n    iterate$$1(function (arr) {\n      totalLength = totalLength + arr.length;\n    }, arrays$$1);\n    const result$$4 = new cons$$9(totalLength);\n\n    for (let i$$12 = 0; i$$12 <= count$$12(arrays$$1) - 1; i$$12++) {\n      const ar = arrays$$1[i$$12];\n\n      for (let j = 0; j <= ar.length - 1; j++) {\n        result$$4[totalIdx] = ar[j];\n        totalIdx = totalIdx + 1;\n      }\n    }\n\n    return result$$4;\n  } else {\n    return new cons$$9(0);\n  }\n}\n\nexport function truncate(count$$1, array$$8) {\n  const count$$2 = max$$1(comparePrimitives, 0, count$$1) | 0;\n  return array$$8.slice(0, count$$2);\n}\nexport function concat(arrays$$2, cons$$10) {\n  return concatImpl(cons$$10, ofSeq$$1(arrays$$2, Array));\n}\nexport function collect(mapping$$2, array$$10, cons$$11) {\n  return concatImpl(cons$$11, map(mapping$$2, array$$10, Array));\n}\nexport function countBy(projection, array$$11, eq) {\n  const dict = createMutable([], comparerFromEqualityComparer(eq));\n\n  for (let idx = 0; idx <= array$$11.length - 1; idx++) {\n    const value$$1 = array$$11[idx];\n    const key = projection(value$$1);\n    const matchValue$$2 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$2[0]) {\n      dict.set(key, matchValue$$2[1] + 1);\n    } else {\n      dict.set(key, 1);\n    }\n  }\n\n  const res$$2 = new Array(dict.size);\n  let i$$13 = 0;\n  iterate$$1(function (group) {\n    res$$2[i$$13] = [group[0], group[1]];\n    i$$13 = i$$13 + 1;\n  }, dict);\n  return res$$2;\n}\nexport function distinctBy(projection$$1, array$$12, eq$$1) {\n  const hashSet = createMutable$$1([], comparerFromEqualityComparer(eq$$1));\n  return filter(function predicate$$2($arg$$1) {\n    return addToSet(projection$$1($arg$$1), hashSet);\n  }, array$$12);\n}\nexport function distinct(array$$14, eq$$2) {\n  return distinctBy(function (x) {\n    return x;\n  }, array$$14, eq$$2);\n}\nexport function where(predicate$$3, array$$15) {\n  return array$$15.filter(predicate$$3);\n}\nexport function contains(value$$2, array$$17, eq$$3) {\n  const loop = function loop(i$$14) {\n    loop: while (true) {\n      if (i$$14 >= array$$17.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$2, array$$17[i$$14])) {\n        return true;\n      } else {\n        i$$14 = i$$14 + 1;\n        continue loop;\n      }\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$18, eq$$4) {\n  if (array$$18.length === 0) {\n    return array$$18;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, comparerFromEqualityComparer(eq$$4));\n    return array$$18.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$21, cons$$12, eq$$5) {\n  const dict$$1 = createMutable([], comparerFromEqualityComparer(eq$$5));\n\n  for (let idx$$1 = 0; idx$$1 <= array$$21.length - 1; idx$$1++) {\n    const v = array$$21[idx$$1];\n    const key$$1 = projection$$2(v);\n    const matchValue$$3 = tryGetValue(dict$$1, key$$1, null);\n\n    if (matchValue$$3[0]) {\n      matchValue$$3[1].push(v);\n    } else {\n      const prev$$2 = [v];\n      dict$$1.set(key$$1, prev$$2);\n    }\n  }\n\n  const result$$5 = new Array(dict$$1.size);\n  let i$$15 = 0;\n  iterate$$1(function (group$$1) {\n    result$$5[i$$15] = [group$$1[0], cons$$12.from(group$$1[1])];\n    i$$15 = i$$15 + 1;\n  }, dict$$1);\n  return result$$5;\n}\nexport function empty(cons$$13) {\n  return new cons$$13(0);\n}\nexport function singleton(value$$4, cons$$15) {\n  const ar$$1 = new cons$$15(1);\n  ar$$1[0] = value$$4;\n  return ar$$1;\n}\nexport function initialize(count$$3, initializer, cons$$16) {\n  if (count$$3 < 0) {\n    throw new Error(\"The input must be non-negative\" + \"\\\\nParameter name: \" + \"count\");\n  }\n\n  const result$$6 = new cons$$16(count$$3);\n\n  for (let i$$16 = 0; i$$16 <= count$$3 - 1; i$$16++) {\n    result$$6[i$$16] = initializer(i$$16);\n  }\n\n  return result$$6;\n}\nexport function pairwise(array$$23) {\n  if (array$$23.length < 2) {\n    return [];\n  } else {\n    const count$$4 = array$$23.length - 1 | 0;\n    const result$$7 = new Array(count$$4);\n\n    for (let i$$17 = 0; i$$17 <= count$$4 - 1; i$$17++) {\n      result$$7[i$$17] = [array$$23[i$$17], array$$23[i$$17 + 1]];\n    }\n\n    return result$$7;\n  }\n}\nexport function replicate(count$$5, initial, cons$$17) {\n  if (count$$5 < 0) {\n    throw new Error(\"The input must be non-negative\" + \"\\\\nParameter name: \" + \"count\");\n  }\n\n  const result$$8 = new cons$$17(count$$5);\n\n  for (let i$$18 = 0; i$$18 <= result$$8.length - 1; i$$18++) {\n    result$$8[i$$18] = initial;\n  }\n\n  return result$$8;\n}\nexport function reverse(array$$24, cons$$18) {\n  const res$$3 = new cons$$18(array$$24.length);\n  let j$$1 = array$$24.length - 1 | 0;\n\n  for (let i$$19 = 0; i$$19 <= array$$24.length - 1; i$$19++) {\n    res$$3[j$$1] = array$$24[i$$19];\n    j$$1 = j$$1 - 1;\n  }\n\n  return res$$3;\n}\nexport function scan(folder, state$$2, array$$25, cons$$19) {\n  const res$$4 = new cons$$19(array$$25.length + 1);\n  res$$4[0] = state$$2;\n\n  for (let i$$20 = 0; i$$20 <= array$$25.length - 1; i$$20++) {\n    res$$4[i$$20 + 1] = folder(res$$4[i$$20], array$$25[i$$20]);\n  }\n\n  return res$$4;\n}\nexport function scanBack(folder$$1, array$$26, state$$3, cons$$20) {\n  const res$$5 = new cons$$20(array$$26.length + 1);\n  res$$5[array$$26.length] = state$$3;\n\n  for (let i$$21 = array$$26.length - 1; i$$21 >= 0; i$$21--) {\n    res$$5[i$$21] = folder$$1(array$$26[i$$21], res$$5[i$$21 + 1]);\n  }\n\n  return res$$5;\n}\nexport function skip(count$$6, array$$27, cons$$21) {\n  if (count$$6 > array$$27.length) {\n    throw new Error(\"count is greater than array length\" + \"\\\\nParameter name: \" + \"count\");\n  }\n\n  if (count$$6 === array$$27.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$7 = (count$$6 < 0 ? 0 : count$$6) | 0;\n    return array$$27.slice(count$$7);\n  }\n}\nexport function skipWhile(predicate$$7, array$$29, cons$$23) {\n  let count$$8 = 0;\n\n  while (count$$8 < array$$29.length ? predicate$$7(array$$29[count$$8]) : false) {\n    count$$8 = count$$8 + 1;\n  }\n\n  if (count$$8 === array$$29.length) {\n    return new cons$$23(0);\n  } else {\n    return array$$29.slice(count$$8);\n  }\n}\nexport function take(count$$9, array$$31, cons$$25) {\n  if (count$$9 < 0) {\n    throw new Error(\"The input must be non-negative\" + \"\\\\nParameter name: \" + \"count\");\n  }\n\n  if (count$$9 > array$$31.length) {\n    throw new Error(\"count is greater than array length\" + \"\\\\nParameter name: \" + \"count\");\n  }\n\n  if (count$$9 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$31.slice(0, count$$9);\n  }\n}\nexport function takeWhile(predicate$$8, array$$33, cons$$27) {\n  let count$$10 = 0;\n\n  while (count$$10 < array$$33.length ? predicate$$8(array$$33[count$$10]) : false) {\n    count$$10 = count$$10 + 1;\n  }\n\n  if (count$$10 === 0) {\n    return new cons$$27(0);\n  } else {\n    return array$$33.slice(0, count$$10);\n  }\n}\nexport function addRangeInPlace(range, array$$35) {\n  const iter = range[Symbol.iterator]();\n  let cur = iter.next();\n\n  while (!cur.done) {\n    array$$35.push(cur.value);\n    cur = iter.next();\n  }\n}\nexport function removeInPlace(item$$3, array$$37) {\n  const i$$22 = array$$37.indexOf(item$$3);\n\n  if (i$$22 > -1) {\n    array$$37.splice(i$$22, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function copyTo(source$$4, sourceIndex, target$$4, targetIndex$$1, count$$11) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$23 = sourceIndex; i$$23 <= sourceIndex + count$$11 - 1; i$$23++) {\n    target$$4[i$$23 + diff] = source$$4[i$$23];\n  }\n}\nexport function partition(f$$6, source$$5, cons$$29) {\n  const len$$9 = source$$5.length | 0;\n  const res1 = new cons$$29(len$$9);\n  const res2 = new cons$$29(len$$9);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$24 = 0; i$$24 <= len$$9 - 1; i$$24++) {\n    if (f$$6(source$$5[i$$24])) {\n      res1[iTrue] = source$$5[i$$24];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$5[i$$24];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [res1, res2];\n}\nexport function find(predicate$$9, array$$40) {\n  const matchValue$$4 = array$$40.find(predicate$$9);\n\n  if (matchValue$$4 == null) {\n    return indexNotFound();\n  } else {\n    const res$$6 = value$$9(matchValue$$4);\n    return res$$6;\n  }\n}\nexport function tryFind(predicate$$11, array$$42) {\n  return array$$42.find(predicate$$11);\n}\nexport function findIndex(predicate$$13, array$$44) {\n  var index;\n  const matchValue$$5 = array$$44.findIndex(predicate$$13);\n\n  if (index = matchValue$$5 | 0, index > -1) {\n    const index$$1 = matchValue$$5 | 0;\n    return index$$1 | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nexport function tryFindIndex(predicate$$15, array$$46) {\n  var index$$2;\n  const matchValue$$6 = array$$46.findIndex(predicate$$15);\n\n  if (index$$2 = matchValue$$6 | 0, index$$2 > -1) {\n    const index$$3 = matchValue$$6 | 0;\n    return index$$3;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$48) {\n  const loop$$1 = function loop$$1(i$$25) {\n    loop$$1: while (true) {\n      if (i$$25 >= array$$48.length) {\n        return indexNotFound();\n      } else {\n        const matchValue$$7 = chooser(array$$48[i$$25]);\n\n        if (matchValue$$7 != null) {\n          const res$$7 = value$$9(matchValue$$7);\n          return res$$7;\n        } else {\n          i$$25 = i$$25 + 1;\n          continue loop$$1;\n        }\n      }\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$49) {\n  const loop$$2 = function loop$$2(i$$26) {\n    loop$$2: while (true) {\n      if (i$$26 >= array$$49.length) {\n        return null;\n      } else {\n        const matchValue$$8 = chooser$$1(array$$49[i$$26]);\n\n        if (matchValue$$8 == null) {\n          i$$26 = i$$26 + 1;\n          continue loop$$2;\n        } else {\n          const res$$8 = matchValue$$8;\n          return res$$8;\n        }\n      }\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$17, array$$50) {\n  const loop$$3 = function loop$$3(i$$27) {\n    loop$$3: while (true) {\n      if (i$$27 < 0) {\n        return indexNotFound();\n      } else if (predicate$$17(array$$50[i$$27])) {\n        return array$$50[i$$27];\n      } else {\n        i$$27 = i$$27 - 1;\n        continue loop$$3;\n      }\n    }\n  };\n\n  return loop$$3(array$$50.length - 1);\n}\nexport function tryFindBack(predicate$$18, array$$51) {\n  const loop$$4 = function loop$$4(i$$28) {\n    loop$$4: while (true) {\n      if (i$$28 < 0) {\n        return null;\n      } else if (predicate$$18(array$$51[i$$28])) {\n        return some(array$$51[i$$28]);\n      } else {\n        i$$28 = i$$28 - 1;\n        continue loop$$4;\n      }\n    }\n  };\n\n  return loop$$4(array$$51.length - 1);\n}\nexport function findIndexBack(predicate$$19, array$$52) {\n  const loop$$5 = function loop$$5(i$$29) {\n    loop$$5: while (true) {\n      if (i$$29 < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate$$19(array$$52[i$$29])) {\n        return i$$29 | 0;\n      } else {\n        i$$29 = i$$29 - 1;\n        continue loop$$5;\n      }\n    }\n  };\n\n  return loop$$5(array$$52.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$20, array$$53) {\n  const loop$$6 = function loop$$6(i$$30) {\n    loop$$6: while (true) {\n      if (i$$30 < 0) {\n        return null;\n      } else if (predicate$$20(array$$53[i$$30])) {\n        return i$$30;\n      } else {\n        i$$30 = i$$30 - 1;\n        continue loop$$6;\n      }\n    }\n  };\n\n  return loop$$6(array$$53.length - 1);\n}\nexport function choose(f$$7, source$$6, cons$$30) {\n  const res$$9 = new cons$$30(0);\n  let j$$2 = 0;\n\n  for (let i$$31 = 0; i$$31 <= source$$6.length - 1; i$$31++) {\n    const matchValue$$9 = f$$7(source$$6[i$$31]);\n\n    if (matchValue$$9 == null) {} else {\n      const y = value$$9(matchValue$$9);\n      res$$9[j$$2] = y;\n      j$$2 = j$$2 + 1;\n    }\n  }\n\n  return res$$9;\n}\nexport function foldIndexed(folder$$2, state$$4, array$$54) {\n  let acc$$2 = state$$4;\n\n  for (let i$$32 = 0; i$$32 <= array$$54.length - 1; i$$32++) {\n    acc$$2 = folder$$2(i$$32, acc$$2, array$$54[i$$32]);\n  }\n\n  return acc$$2;\n}\nexport function fold(folder$$3, state$$5, array$$55) {\n  let acc$$3 = state$$5;\n\n  for (let i$$33 = 0; i$$33 <= array$$55.length - 1; i$$33++) {\n    acc$$3 = folder$$3(acc$$3, array$$55[i$$33]);\n  }\n\n  return acc$$3;\n}\nexport function iterate(action, array$$56) {\n  for (let i$$34 = 0; i$$34 <= array$$56.length - 1; i$$34++) {\n    action(array$$56[i$$34]);\n  }\n}\nexport function iterate2(action$$1, array1$$1, array2$$1) {\n  if (array1$$1.length !== array2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$35 = 0; i$$35 <= array1$$1.length - 1; i$$35++) {\n    action$$1(array1$$1[i$$35], array2$$1[i$$35]);\n  }\n}\nexport function iterateIndexed(action$$2, array$$57) {\n  for (let i$$36 = 0; i$$36 <= array$$57.length - 1; i$$36++) {\n    action$$2(i$$36, array$$57[i$$36]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$37 = 0; i$$37 <= array1$$2.length - 1; i$$37++) {\n    action$$3(i$$37, array1$$2[i$$37], array2$$2[i$$37]);\n  }\n}\nexport function isEmpty(array$$58) {\n  return array$$58.length === 0;\n}\nexport function forAll(predicate$$21, array$$59) {\n  let i$$38 = 0;\n  let result$$9 = true;\n\n  while (i$$38 < array$$59.length ? result$$9 : false) {\n    result$$9 = predicate$$21(array$$59[i$$38]);\n    i$$38 = i$$38 + 1;\n  }\n\n  return result$$9;\n}\nexport function permute(f$$8, array$$60) {\n  const size = array$$60.length | 0;\n  const res$$10 = new array$$60.constructor(array$$60.length);\n  const checkFlags = new Array(size);\n  iterateIndexed(function (i$$39, x$$1) {\n    const j$$3 = f$$8(i$$39) | 0;\n\n    if (j$$3 < 0 ? true : j$$3 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$10[j$$3] = x$$1;\n    checkFlags[j$$3] = 1;\n  }, array$$60);\n  const isValid = forAll(function (y$$1) {\n    return 1 === y$$1;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$10;\n}\nexport function setSlice(target$$5, lower, upper, source$$7) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length$$1 = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  if (ArrayBuffer.isView(target$$5) ? source$$7.length <= length$$1 : false) {\n    return target$$5.set(source$$7, lower$$1);\n  } else {\n    for (let i$$40 = 0; i$$40 <= length$$1; i$$40++) {\n      target$$5[i$$40 + lower$$1] = source$$7[i$$40];\n    }\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$3, y$$2) {\n    return comparer.Compare(projection$$3(x$$3), projection$$3(y$$2));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$4, y$$3) {\n    return comparer$$1.Compare(x$$4, y$$3);\n  });\n}\n\nfunction copyArray(array$$61) {\n  const result$$10 = new array$$61.constructor(array$$61.length);\n\n  for (let i$$41 = 0; i$$41 <= array$$61.length - 1; i$$41++) {\n    result$$10[i$$41] = array$$61[i$$41];\n  }\n\n  return result$$10;\n}\n\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = copyArray(xs$$2);\n  xs$$3.sort(function comparer$$3(x$$5, y$$4) {\n    return comparer$$2.Compare(x$$5, y$$4);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = copyArray(xs$$4);\n  xs$$5.sort(function comparer$$5(x$$6, y$$5) {\n    return comparer$$4.Compare(projection$$4(x$$6), projection$$4(y$$5));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = copyArray(xs$$6);\n  xs$$7.sort(function comparer$$7(x$$7, y$$6) {\n    return comparer$$6.Compare(x$$7, y$$6) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = copyArray(xs$$8);\n  xs$$9.sort(function comparer$$9(x$$8, y$$7) {\n    return comparer$$8.Compare(projection$$5(x$$8), projection$$5(y$$7)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = copyArray(xs$$10);\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$6) {\n  const res$$11 = [];\n\n  const loop$$7 = function loop$$7(state$$7) {\n    const matchValue$$10 = generator(state$$7);\n\n    if (matchValue$$10 != null) {\n      const x$$9 = matchValue$$10[0];\n      const s$0027$$2 = matchValue$$10[1];\n      res$$11.push(x$$9);\n      loop$$7(s$0027$$2);\n    }\n  };\n\n  loop$$7(state$$6);\n  return res$$11;\n}\nexport function unzip(array$$63) {\n  const len$$11 = array$$63.length | 0;\n  const res1$$1 = new Array(len$$11);\n  const res2$$1 = new Array(len$$11);\n  iterateIndexed(function (i$$42, tupledArg) {\n    res1$$1[i$$42] = tupledArg[0];\n    res2$$1[i$$42] = tupledArg[1];\n  }, array$$63);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$64) {\n  const len$$14 = array$$64.length | 0;\n  const res1$$2 = new Array(len$$14);\n  const res2$$2 = new Array(len$$14);\n  const res3 = new Array(len$$14);\n  iterateIndexed(function (i$$43, tupledArg$$1) {\n    res1$$2[i$$43] = tupledArg$$1[0];\n    res2$$2[i$$43] = tupledArg$$1[1];\n    res3[i$$43] = tupledArg$$1[2];\n  }, array$$64);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$11 = new Array(array1$$3.length);\n\n  for (let i$$44 = 0; i$$44 <= array1$$3.length - 1; i$$44++) {\n    result$$11[i$$44] = [array1$$3[i$$44], array2$$3[i$$44]];\n  }\n\n  return result$$11;\n}\nexport function zip3(array1$$4, array2$$4, array3) {\n  if (array1$$4.length !== array2$$4.length ? true : array2$$4.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$12 = new Array(array1$$4.length);\n\n  for (let i$$45 = 0; i$$45 <= array1$$4.length - 1; i$$45++) {\n    result$$12[i$$45] = [array1$$4[i$$45], array2$$4[i$$45], array3[i$$45]];\n  }\n\n  return result$$12;\n}\nexport function chunkBySize(chunkSize, array$$65) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\" + \"\\\\nParameter name: \" + \"size\");\n  }\n\n  if (array$$65.length === 0) {\n    return [[]];\n  } else {\n    const result$$13 = [];\n\n    for (let x$$10 = 0; x$$10 <= ~~Math.ceil(array$$65.length / chunkSize) - 1; x$$10++) {\n      const start$$1 = x$$10 * chunkSize | 0;\n      const end$0027 = start$$1 + chunkSize | 0;\n      const slice = array$$65.slice(start$$1, end$0027);\n      result$$13.push(slice);\n    }\n\n    return result$$13;\n  }\n}\nexport function splitAt(index$$4, array$$68) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\" + \"\\\\nParameter name: \" + \"index\");\n  }\n\n  if (index$$4 > array$$68.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\" + \"\\\\nParameter name: \" + \"index\");\n  }\n\n  return [array$$68.slice(0, index$$4), array$$68.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$5, array2$$5) {\n  if (array1$$5 == null) {\n    if (array2$$5 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$5 == null) {\n    return 1;\n  } else {\n    let i$$46 = 0;\n    let result$$14 = 0;\n    const length1 = array1$$5.length | 0;\n    const length2 = array2$$5.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$46 < length1 ? result$$14 === 0 : false) {\n        result$$14 = comparer$$12(array1$$5[i$$46], array2$$5[i$$46]);\n        i$$46 = i$$46 + 1;\n      }\n\n      return result$$14 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$6, array2$$6) {\n  return compareWith(compare, array1$$6, array2$$6) === 0;\n}\nexport function exactlyOne(array$$71) {\n  if (array$$71.length === 1) {\n    return array$$71[0];\n  } else if (array$$71.length === 0) {\n    throw new Error(\"The input sequence was empty\" + \"\\\\nParameter name: \" + \"array\");\n  } else {\n    throw new Error(\"Input array too long\" + \"\\\\nParameter name: \" + \"array\");\n  }\n}\nexport function head(array$$72) {\n  if (array$$72.length === 0) {\n    throw new Error(\"The input array was empty\" + \"\\\\nParameter name: \" + \"array\");\n  } else {\n    return array$$72[0];\n  }\n}\nexport function tryHead(array$$73) {\n  if (array$$73.length === 0) {\n    return null;\n  } else {\n    return some(array$$73[0]);\n  }\n}\nexport function tail(array$$74) {\n  if (array$$74.length === 0) {\n    throw new Error(\"Not enough elements\" + \"\\\\nParameter name: \" + \"array\");\n  }\n\n  return array$$74.slice(1);\n}\nexport function item(index$$5, array$$76) {\n  return array$$76[index$$5];\n}\nexport function tryItem(index$$6, array$$77) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$77.length) {\n    return null;\n  } else {\n    return some(array$$77[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$4, array$$78, state$$8) {\n  let acc$$4 = state$$8;\n  const size$$1 = array$$78.length | 0;\n\n  for (let i$$47 = 1; i$$47 <= size$$1; i$$47++) {\n    acc$$4 = folder$$4(i$$47 - 1, array$$78[size$$1 - i$$47], acc$$4);\n  }\n\n  return acc$$4;\n}\nexport function foldBack(folder$$5, array$$79, state$$9) {\n  return foldBackIndexed(function (_arg1, x$$11, acc$$5) {\n    return folder$$5(x$$11, acc$$5);\n  }, array$$79, state$$9);\n}\nexport function foldIndexed2(folder$$6, state$$10, array1$$7, array2$$7) {\n  let acc$$6 = state$$10;\n\n  if (array1$$7.length !== array2$$7.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (let i$$48 = 0; i$$48 <= array1$$7.length - 1; i$$48++) {\n    acc$$6 = folder$$6(i$$48, acc$$6, array1$$7[i$$48], array2$$7[i$$48]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$7, state$$11, array1$$8, array2$$8) {\n  return foldIndexed2(function (_arg1$$1, acc$$7, x$$12, y$$8) {\n    return folder$$7(acc$$7, x$$12, y$$8);\n  }, state$$11, array1$$8, array2$$8);\n}\nexport function foldBackIndexed2(folder$$8, array1$$9, array2$$9, state$$12) {\n  let acc$$8 = state$$12;\n\n  if (array1$$9.length !== array2$$9.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const size$$2 = array1$$9.length | 0;\n\n  for (let i$$49 = 1; i$$49 <= size$$2; i$$49++) {\n    acc$$8 = folder$$8(i$$49 - 1, array1$$9[size$$2 - i$$49], array2$$9[size$$2 - i$$49], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$10, array2$$10, state$$13) {\n  return foldBackIndexed2(function (_arg1$$2, x$$13, y$$9, acc$$9) {\n    return f$$9(x$$13, y$$9, acc$$9);\n  }, array1$$10, array2$$10, state$$13);\n}\nexport function reduce(reduction, array$$80) {\n  if (array$$80.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    return foldIndexed(function (i$$50, acc$$10, x$$14) {\n      return i$$50 === 0 ? x$$14 : reduction(acc$$10, x$$14);\n    }, null, array$$80);\n  }\n}\nexport function reduceBack(reduction$$1, array$$81) {\n  if (array$$81.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    return foldBackIndexed(function (i$$51, x$$15, acc$$11) {\n      return i$$51 === 0 ? x$$15 : reduction$$1(acc$$11, x$$15);\n    }, array$$81, null);\n  }\n}\nexport function forAll2(predicate$$22, array1$$11, array2$$11) {\n  return fold2(function (acc$$12, x$$16, y$$10) {\n    return acc$$12 ? predicate$$22(x$$16, y$$10) : false;\n  }, true, array1$$11, array2$$11);\n}\nexport function existsOffset($arg$$162, $arg$$163, $arg$$164) {\n  existsOffset: while (true) {\n    const predicate$$23 = $arg$$162,\n          array$$82 = $arg$$163,\n          index$$7 = $arg$$164;\n\n    if (index$$7 === array$$82.length) {\n      return false;\n    } else if (predicate$$23(array$$82[index$$7])) {\n      return true;\n    } else {\n      $arg$$162 = predicate$$23;\n      $arg$$163 = array$$82;\n      $arg$$164 = index$$7 + 1;\n      continue existsOffset;\n    }\n  }\n}\nexport function exists(predicate$$24, array$$83) {\n  return existsOffset(predicate$$24, array$$83, 0);\n}\nexport function existsOffset2($arg$$167, $arg$$168, $arg$$169, $arg$$170) {\n  existsOffset2: while (true) {\n    const predicate$$25 = $arg$$167,\n          array1$$12 = $arg$$168,\n          array2$$12 = $arg$$169,\n          index$$8 = $arg$$170;\n\n    if (index$$8 === array1$$12.length) {\n      return false;\n    } else if (predicate$$25(array1$$12[index$$8], array2$$12[index$$8])) {\n      return true;\n    } else {\n      $arg$$167 = predicate$$25;\n      $arg$$168 = array1$$12;\n      $arg$$169 = array2$$12;\n      $arg$$170 = index$$8 + 1;\n      continue existsOffset2;\n    }\n  }\n}\nexport function exists2(predicate$$26, array1$$13, array2$$13) {\n  if (array1$$13.length !== array2$$13.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$26, array1$$13, array2$$13, 0);\n}\nexport function sum(array$$84) {\n  let acc$$13 = 0;\n\n  for (let i$$52 = 0; i$$52 <= array$$84.length - 1; i$$52++) {\n    acc$$13 = acc$$13 + array$$84[i$$52];\n  }\n\n  return acc$$13;\n}\nexport function sumBy(projection$$6, array$$85) {\n  let acc$$14 = 0;\n\n  for (let i$$53 = 0; i$$53 <= array$$85.length - 1; i$$53++) {\n    acc$$14 = acc$$14 + projection$$6(array$$85[i$$53]);\n  }\n\n  return acc$$14;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$17, y$$11) {\n    return comparer$$14.Compare(projection$$7(y$$11), projection$$7(x$$17)) > 0 ? y$$11 : x$$17;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$18, y$$12) {\n    return comparer$$15.Compare(y$$12, x$$18) > 0 ? y$$12 : x$$18;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$19, y$$13) {\n    return comparer$$16.Compare(projection$$8(y$$13), projection$$8(x$$19)) > 0 ? x$$19 : y$$13;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$20, y$$14) {\n    return comparer$$17.Compare(y$$14, x$$20) > 0 ? x$$20 : y$$14;\n  }, xs$$15);\n}\nexport function average(array$$86) {\n  if (array$$86.length === 0) {\n    throw new Error(\"The input array was empty\" + \"\\\\nParameter name: \" + \"array\");\n  }\n\n  const total = sum(array$$86);\n  return total / array$$86.length;\n}\nexport function averageBy(projection$$9, array$$87) {\n  if (array$$87.length === 0) {\n    throw new Error(\"The input array was empty\" + \"\\\\nParameter name: \" + \"array\");\n  }\n\n  const total$$1 = sumBy(projection$$9, array$$87);\n  return total$$1 / array$$87.length;\n}\nexport function ofSeq(source$$9, cons$$31) {\n  return cons$$31.from(source$$9);\n}\nexport function ofList(source$$10, cons$$32) {\n  const len$$20 = length$$2(source$$10) | 0;\n  const target$$7 = new cons$$32(len$$20);\n  let i$$54 = 0;\n  iterate$$1(function (x$$21) {\n    target$$7[i$$54] = x$$21;\n    i$$54 = i$$54 + 1;\n  }, source$$10);\n  return target$$7;\n}\nexport function toList(source$$11) {\n  const len$$21 = source$$11.length | 0;\n  let target$$8 = L();\n\n  for (let i$$55 = len$$21 - 1; i$$55 >= 0; i$$55--) {\n    target$$8 = L(source$$11[i$$55], target$$8);\n  }\n\n  return target$$8;\n}","import { defaultArg, value as value$$1, some } from \"./Option\";\nimport { FSharpRef, L } from \"./Types\";\nimport { iterate as iterate$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq\";\nimport { permute as permute$$1, ofList as ofList$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1, foldBack as foldBack$$1 } from \"./Array\";\nimport { ofList } from \"./Array\";\nimport { tryGetValue, addToSet, comparerFromEqualityComparer } from \"./Util\";\nimport { createMutable } from \"./Set\";\nimport { ofSeq as ofSeq$$1, length as length$$1 } from \"./List\";\nimport { createMutable as createMutable$$1 } from \"./Map\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    const x = _arg1.head;\n    return x;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    const x$$1 = _arg1$$1.head;\n    return some(x$$1);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    const xs = _arg1$$2.tail;\n    return xs;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last(_arg1$$3) {\n  last: while (true) {\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        _arg1$$3 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n  }\n}\nexport function tryLast(_arg1$$4) {\n  tryLast: while (true) {\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        _arg1$$4 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop(xs$$4, ys$$1) {\n      loop: while (true) {\n        const matchValue = [xs$$4, ys$$1];\n\n        if (matchValue[0].tail != null) {\n          if (matchValue[1].tail != null) {\n            const matchValue$$1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n\n            if (matchValue$$1 === 0) {\n              xs$$4 = matchValue[0].tail;\n              ys$$1 = matchValue[1].tail;\n              continue loop;\n            } else {\n              const res = matchValue$$1 | 0;\n              return res | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (matchValue[1].tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function equalsWith(comparer$$1, xs$$6, ys$$3) {\n  return compareWith(comparer$$1, xs$$6, ys$$3) === 0;\n}\nexport function foldIndexedAux($arg$$8, $arg$$9, $arg$$10, $arg$$11) {\n  foldIndexedAux: while (true) {\n    const f = $arg$$8,\n          i = $arg$$9,\n          acc = $arg$$10,\n          _arg1$$5 = $arg$$11;\n\n    if (_arg1$$5.tail != null) {\n      const xs$$7 = _arg1$$5.tail;\n      const x$$5 = _arg1$$5.head;\n      $arg$$8 = f;\n      $arg$$9 = i + 1;\n      $arg$$10 = f(i, acc, x$$5);\n      $arg$$11 = xs$$7;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$8) {\n  return foldIndexedAux(f$$1, 0, state, xs$$8);\n}\nexport function fold($arg$$15, $arg$$16, $arg$$17) {\n  fold: while (true) {\n    const f$$2 = $arg$$15,\n          state$$1 = $arg$$16,\n          xs$$9 = $arg$$17;\n\n    if (xs$$9.tail != null) {\n      const t = xs$$9.tail;\n      const h = xs$$9.head;\n      $arg$$15 = f$$2;\n      $arg$$16 = f$$2(state$$1, h);\n      $arg$$17 = t;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n  }\n}\nexport function reverse(xs$$10) {\n  return fold(function (acc$$1, x$$6) {\n    return L(x$$6, acc$$1);\n  }, L(), xs$$10);\n}\nexport function foldBack(f$$3, xs$$11, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$11));\n}\nexport function toSeq(xs$$12) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$12);\n}\nexport function ofSeq(xs$$13) {\n  return reverse(fold$$1(function (acc$$3, x$$9) {\n    return L(x$$9, acc$$3);\n  }, L(), xs$$13));\n}\nexport function concat(lists) {\n  return reverse(fold$$1(function (state$$3, xs$$15) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return L(x$$10, acc$$4);\n    }, state$$3, xs$$15);\n  }, L(), lists));\n}\nexport function foldIndexed2Aux($arg$$21, $arg$$22, $arg$$23, $arg$$24, $arg$$25) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $arg$$21,\n          i$$1 = $arg$$22,\n          acc$$5 = $arg$$23,\n          bs = $arg$$24,\n          cs = $arg$$25;\n    const matchValue$$2 = [bs, cs];\n    var $target$$26, x$$11, xs$$17, y$$1, ys$$4;\n\n    if (matchValue$$2[0].tail != null) {\n      if (matchValue$$2[1].tail != null) {\n        $target$$26 = 1;\n        x$$11 = matchValue$$2[0].head;\n        xs$$17 = matchValue$$2[0].tail;\n        y$$1 = matchValue$$2[1].head;\n        ys$$4 = matchValue$$2[1].tail;\n      } else {\n        $target$$26 = 2;\n      }\n    } else if (matchValue$$2[1].tail == null) {\n      $target$$26 = 0;\n    } else {\n      $target$$26 = 2;\n    }\n\n    switch ($target$$26) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $arg$$21 = f$$5;\n          $arg$$22 = i$$1 + 1;\n          $arg$$23 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $arg$$24 = xs$$17;\n          $arg$$25 = ys$$4;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$18, ys$$5) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$18, ys$$5);\n}\nexport function fold2(f$$7, state$$5, xs$$19, ys$$6) {\n  return fold2$$1(f$$7, state$$5, xs$$19, ys$$6);\n}\nexport function foldBack2(f$$8, xs$$20, ys$$7, state$$6) {\n  return foldBack2$$1(f$$8, xs$$20, ys$$7, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner(acc$$6, state$$8) {\n    unfoldInner: while (true) {\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        acc$$6 = L(x$$12, acc$$6);\n        state$$8 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n    }\n  };\n\n  return unfoldInner(L(), state$$7);\n}\nexport function foldIndexed3Aux($arg$$41, $arg$$42, $arg$$43, $arg$$44, $arg$$45, $arg$$46) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $arg$$41,\n          i$$2 = $arg$$42,\n          acc$$7 = $arg$$43,\n          bs$$1 = $arg$$44,\n          cs$$1 = $arg$$45,\n          ds = $arg$$46;\n    const matchValue$$4 = [bs$$1, cs$$1, ds];\n    var $target$$47, x$$13, xs$$21, y$$2, ys$$8, z, zs;\n\n    if (matchValue$$4[0].tail != null) {\n      if (matchValue$$4[1].tail != null) {\n        if (matchValue$$4[2].tail != null) {\n          $target$$47 = 1;\n          x$$13 = matchValue$$4[0].head;\n          xs$$21 = matchValue$$4[0].tail;\n          y$$2 = matchValue$$4[1].head;\n          ys$$8 = matchValue$$4[1].tail;\n          z = matchValue$$4[2].head;\n          zs = matchValue$$4[2].tail;\n        } else {\n          $target$$47 = 2;\n        }\n      } else {\n        $target$$47 = 2;\n      }\n    } else if (matchValue$$4[1].tail == null) {\n      if (matchValue$$4[2].tail == null) {\n        $target$$47 = 0;\n      } else {\n        $target$$47 = 2;\n      }\n    } else {\n      $target$$47 = 2;\n    }\n\n    switch ($target$$47) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $arg$$41 = f$$10;\n          $arg$$42 = i$$2 + 1;\n          $arg$$43 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $arg$$44 = xs$$21;\n          $arg$$45 = ys$$8;\n          $arg$$46 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$22, ys$$9, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$22, ys$$9, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$23, ys$$10, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$23, ys$$10, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$24) {\n  return ofSeq(scan$$1(f$$13, state$$11, xs$$24));\n}\nexport function scanBack(f$$14, xs$$26, state$$12) {\n  return ofSeq(scanBack$$1(f$$14, xs$$26, state$$12));\n}\nexport function length(xs$$28) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$28);\n}\nexport function append(xs$$29, ys$$11) {\n  return fold(function (acc$$10, x$$15) {\n    return L(x$$15, acc$$10);\n  }, ys$$11, reverse(xs$$29));\n}\nexport function collect(f$$15, xs$$30) {\n  return ofSeq(collect$$1(f$$15, xs$$30));\n}\nexport function map(f$$16, xs$$32) {\n  return reverse(fold(function (acc$$11, x$$16) {\n    return L(f$$16(x$$16), acc$$11);\n  }, L(), xs$$32));\n}\nexport function mapIndexed(f$$17, xs$$34) {\n  return reverse(foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return L(f$$17(i$$3, x$$17), acc$$12);\n  }, L(), xs$$34));\n}\nexport function indexed(xs$$36) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$36);\n}\nexport function map2(f$$18, xs$$37, ys$$12) {\n  return reverse(fold2(function (acc$$13, x$$19, y$$4) {\n    return L(f$$18(x$$19, y$$4), acc$$13);\n  }, L(), xs$$37, ys$$12));\n}\nexport function mapIndexed2(f$$19, xs$$39, ys$$13) {\n  return reverse(foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return L(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, L(), xs$$39, ys$$13));\n}\nexport function map3(f$$20, xs$$41, ys$$14, zs$$3) {\n  return reverse(fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return L(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, L(), xs$$41, ys$$14, zs$$3));\n}\nexport function mapIndexed3(f$$21, xs$$43, ys$$15, zs$$4) {\n  return reverse(foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return L(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, L(), xs$$43, ys$$15, zs$$4));\n}\nexport function mapFold(f$$22, s, xs$$45) {\n  const foldFn = function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [L(patternInput[0], tupledArg[0]), patternInput[1]];\n  };\n\n  const patternInput$$1 = fold(foldFn, [L(), s], xs$$45);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$46, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$46));\n}\nexport function iterate(f$$24, xs$$47) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$47);\n}\nexport function iterate2(f$$25, xs$$48, ys$$16) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$48, ys$$16);\n}\nexport function iterateIndexed(f$$26, xs$$49) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$49);\n}\nexport function iterateIndexed2(f$$27, xs$$50, ys$$17) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$50, ys$$17);\n}\nexport function ofArray(xs$$51) {\n  return foldBack$$1(function (x$$28, acc$$17) {\n    return L(x$$28, acc$$17);\n  }, xs$$51, L());\n}\nexport function empty() {\n  return L();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($arg$$100, $arg$$101, $arg$$102) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $arg$$100,\n          i$$9 = $arg$$101,\n          _arg1$$9 = $arg$$102;\n\n    if (_arg1$$9.tail != null) {\n      const xs$$52 = _arg1$$9.tail;\n      const x$$29 = _arg1$$9.head;\n      const result = f$$28(i$$9, x$$29);\n\n      if (result == null) {\n        $arg$$100 = f$$28;\n        $arg$$101 = i$$9 + 1;\n        $arg$$102 = xs$$52;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$53) {\n  return tryPickIndexedAux(f$$29, 0, xs$$53);\n}\nexport function tryPick(f$$30, xs$$54) {\n  return tryPickIndexed(function (_arg1$$10, x$$30) {\n    return f$$30(x$$30);\n  }, xs$$54);\n}\nexport function pick(f$$31, xs$$55) {\n  const matchValue$$5 = tryPick(f$$31, xs$$55);\n\n  if (matchValue$$5 != null) {\n    const x$$31 = value$$1(matchValue$$5);\n    return x$$31;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$56) {\n  return tryPickIndexed(function (i$$10, x$$32) {\n    return f$$32(i$$10, x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function tryFind(f$$33, xs$$57) {\n  return tryPickIndexed(function (_arg1$$11, x$$33) {\n    return f$$33(x$$33) ? some(x$$33) : null;\n  }, xs$$57);\n}\nexport function findIndexed(f$$34, xs$$58) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$58);\n\n  if (matchValue$$6 != null) {\n    const x$$34 = value$$1(matchValue$$6);\n    return x$$34;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$59) {\n  return findIndexed(function (_arg1$$12, x$$35) {\n    return f$$35(x$$35);\n  }, xs$$59);\n}\nexport function findBack(f$$36, xs$$60) {\n  return find(f$$36, reverse(xs$$60));\n}\nexport function tryFindBack(f$$37, xs$$63) {\n  return tryFind(f$$37, reverse(xs$$63));\n}\nexport function tryFindIndex(f$$38, xs$$66) {\n  return tryPickIndexed(function (i$$11, x$$36) {\n    return f$$38(x$$36) ? i$$11 : null;\n  }, xs$$66);\n}\nexport function tryFindIndexBack(f$$39, xs$$67) {\n  return tryFindIndexBack$$1(f$$39, ofList(xs$$67, Array));\n}\nexport function findIndex(f$$40, xs$$68) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$68);\n\n  if (matchValue$$7 != null) {\n    const x$$37 = matchValue$$7 | 0;\n    return x$$37 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$69) {\n  return findIndexBack$$1(f$$41, ofList(xs$$69, Array));\n}\nexport function item(n, xs$$70) {\n  return findIndexed(function (i$$12, _arg1$$13) {\n    return n === i$$12;\n  }, xs$$70);\n}\nexport function tryItem(n$$1, xs$$71) {\n  return tryFindIndexed(function (i$$13, _arg1$$14) {\n    return n$$1 === i$$13;\n  }, xs$$71);\n}\nexport function filter(f$$42, xs$$72) {\n  return foldBack(function (x$$38, acc$$18) {\n    return f$$42(x$$38) ? L(x$$38, acc$$18) : acc$$18;\n  }, xs$$72, L());\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$39) {\n    return f$$43(x$$39) ? [L(x$$39, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], L(x$$39, tupledArg$$1[1])];\n  }, [L(), L()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  return reverse(fold(function (acc$$19, x$$40) {\n    const matchValue$$8 = f$$44(x$$40);\n\n    if (matchValue$$8 == null) {\n      return acc$$19;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return L(y$$10, acc$$19);\n    }\n  }, L(), xs$$74));\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1(xs$$76) {\n    loop$$1: while (true) {\n      if (xs$$76.tail != null) {\n        const v$$1 = xs$$76.head;\n        const rest = xs$$76.tail;\n\n        if (eq.Equals(value, v$$1)) {\n          return true;\n        } else {\n          xs$$76 = rest;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, comparerFromEqualityComparer(eq$$1));\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = L();\n\n  for (let i$$14 = 1; i$$14 <= n$$2; i$$14++) {\n    xs$$78 = L(f$$46(n$$2 - i$$14), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$41) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$41;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    const t$$1 = _arg1$$16.tail;\n    const h$$1 = _arg1$$16.head;\n    return fold(f$$47, h$$1, t$$1);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    const t$$2 = _arg1$$17.tail;\n    const h$$2 = _arg1$$17.head;\n    return foldBack(f$$48, t$$2, h$$2);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$20, x$$42) {\n    return acc$$20 ? f$$49(x$$42) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$18) {\n  return fold2(function (acc$$21, x$$43, y$$11) {\n    return acc$$21 ? f$$50(x$$43, y$$11) : false;\n  }, true, xs$$80, ys$$18);\n}\nexport function exists($arg$$146, $arg$$147) {\n  exists: while (true) {\n    const f$$51 = $arg$$146,\n          _arg1$$18 = $arg$$147;\n\n    if (_arg1$$18.tail != null) {\n      const xs$$81 = _arg1$$18.tail;\n      const x$$44 = _arg1$$18.head;\n\n      if (f$$51(x$$44)) {\n        return true;\n      } else {\n        $arg$$146 = f$$51;\n        $arg$$147 = xs$$81;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n  }\n}\nexport function exists2($arg$$148, $arg$$149, $arg$$150) {\n  exists2: while (true) {\n    const f$$52 = $arg$$148,\n          bs$$2 = $arg$$149,\n          cs$$2 = $arg$$150;\n    const matchValue$$9 = [bs$$2, cs$$2];\n    var $target$$151, x$$45, xs$$82, y$$12, ys$$19;\n\n    if (matchValue$$9[0].tail != null) {\n      if (matchValue$$9[1].tail != null) {\n        $target$$151 = 1;\n        x$$45 = matchValue$$9[0].head;\n        xs$$82 = matchValue$$9[0].tail;\n        y$$12 = matchValue$$9[1].head;\n        ys$$19 = matchValue$$9[1].tail;\n      } else {\n        $target$$151 = 2;\n      }\n    } else if (matchValue$$9[1].tail == null) {\n      $target$$151 = 0;\n    } else {\n      $target$$151 = 2;\n    }\n\n    switch ($target$$151) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$45, y$$12)) {\n            return true;\n          } else {\n            $arg$$148 = f$$52;\n            $arg$$149 = xs$$82;\n            $arg$$150 = ys$$19;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [L(tupledArg$$2[0], tupledArg$$3[0]), L(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [L(), L()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [L(tupledArg$$4[0], tupledArg$$5[0]), L(tupledArg$$4[1], tupledArg$$5[1]), L(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [L(), L(), L()]);\n}\nexport function zip(xs$$85, ys$$20) {\n  return map2(function (x$$48, y$$15) {\n    return [x$$48, y$$15];\n  }, xs$$85, ys$$20);\n}\nexport function zip3(xs$$86, ys$$21, zs$$5) {\n  return map3(function (x$$49, y$$16, z$$5) {\n    return [x$$49, y$$16, z$$5];\n  }, xs$$86, ys$$21, zs$$5);\n}\nexport function sort(xs$$87, comparer$$2) {\n  var xs$$88;\n  return ofArray((xs$$88 = ofList$$1(xs$$87, Array), (xs$$88.sort(function comparer$$3(x$$50, y$$17) {\n    return comparer$$2.Compare(x$$50, y$$17);\n  }), xs$$88)));\n}\nexport function sortBy(projection, xs$$90, comparer$$4) {\n  var xs$$91;\n  return ofArray((xs$$91 = ofList$$1(xs$$90, Array), (xs$$91.sort(function comparer$$5(x$$51, y$$18) {\n    return comparer$$4.Compare(projection(x$$51), projection(y$$18));\n  }), xs$$91)));\n}\nexport function sortDescending(xs$$93, comparer$$6) {\n  var xs$$94;\n  return ofArray((xs$$94 = ofList$$1(xs$$93, Array), (xs$$94.sort(function comparer$$7(x$$52, y$$19) {\n    return comparer$$6.Compare(x$$52, y$$19) * -1;\n  }), xs$$94)));\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$8) {\n  var xs$$97;\n  return ofArray((xs$$97 = ofList$$1(xs$$96, Array), (xs$$97.sort(function comparer$$9(x$$53, y$$20) {\n    return comparer$$8.Compare(projection$$1(x$$53), projection$$1(y$$20)) * -1;\n  }), xs$$97)));\n}\nexport function sortWith(comparer$$10, xs$$99) {\n  var xs$$100;\n  return ofArray((xs$$100 = ofList$$1(xs$$99, Array), (xs$$100.sort(comparer$$10), xs$$100)));\n}\nexport function sum(xs$$102) {\n  return fold(function (x$$54, y$$21) {\n    return x$$54 + y$$21;\n  }, 0, xs$$102);\n}\nexport function sumBy(f$$53, xs$$103) {\n  return fold(function (acc$$22, x$$55) {\n    return acc$$22 + f$$53(x$$55);\n  }, 0, xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(projection$$2(y$$22), projection$$2(x$$56)) > 0 ? y$$22 : x$$56;\n  }, xs$$104);\n}\nexport function max(li, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(y$$23, x$$57) > 0 ? y$$23 : x$$57;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(projection$$3(y$$24), projection$$3(x$$58)) > 0 ? x$$58 : y$$24;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$15) {\n  return reduce(function (x$$59, y$$25) {\n    return comparer$$15.Compare(y$$25, x$$59) > 0 ? x$$59 : y$$25;\n  }, xs$$106);\n}\nexport function average(zs$$6) {\n  const total = sum(zs$$6);\n  return total / length$$1(zs$$6);\n}\nexport function averageBy(g, zs$$7) {\n  const total$$1 = sumBy(g, zs$$7);\n  return total$$1 / length$$1(zs$$7);\n}\nexport function permute(f$$54, xs$$107) {\n  return ofArray(permute$$1(f$$54, ofList(xs$$107, Array)));\n}\nexport function skip(i$$15, xs$$109) {\n  const skipInner = function skipInner(i$$16, xs$$110) {\n    skipInner: while (true) {\n      const matchValue$$10 = [i$$16, xs$$110];\n\n      if (matchValue$$10[0] === 0) {\n        return xs$$110;\n      } else if (matchValue$$10[1].tail != null) {\n        const xs$$111 = matchValue$$10[1].tail;\n        i$$16 = i$$16 - 1;\n        xs$$110 = xs$$111;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n    }\n  };\n\n  const matchValue$$11 = [i$$15, xs$$109];\n\n  if (matchValue$$11[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$172, i$$19, xs$$113;\n\n    if (matchValue$$11[0] === 0) {\n      $target$$172 = 0;\n    } else if (matchValue$$11[0] === 1) {\n      if (matchValue$$11[1].tail != null) {\n        $target$$172 = 1;\n      } else {\n        $target$$172 = 2;\n        i$$19 = matchValue$$11[0];\n        xs$$113 = matchValue$$11[1];\n      }\n    } else {\n      $target$$172 = 2;\n      i$$19 = matchValue$$11[0];\n      xs$$113 = matchValue$$11[1];\n    }\n\n    switch ($target$$172) {\n      case 0:\n        {\n          return xs$$109;\n        }\n\n      case 1:\n        {\n          const xs$$112 = matchValue$$11[1].tail;\n          return xs$$112;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$19, xs$$113);\n        }\n    }\n  }\n}\nexport function skipWhile($arg$$173, $arg$$174) {\n  var t$$3, h$$3;\n\n  skipWhile: while (true) {\n    const predicate = $arg$$173,\n          xs$$114 = $arg$$174;\n    var $target$$175, h$$4, t$$4;\n\n    if (xs$$114.tail != null) {\n      if (t$$3 = xs$$114.tail, (h$$3 = xs$$114.head, predicate(h$$3))) {\n        $target$$175 = 0;\n        h$$4 = xs$$114.head;\n        t$$4 = xs$$114.tail;\n      } else {\n        $target$$175 = 1;\n      }\n    } else {\n      $target$$175 = 1;\n    }\n\n    switch ($target$$175) {\n      case 0:\n        {\n          $arg$$173 = predicate;\n          $arg$$174 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$114;\n        }\n    }\n  }\n}\nexport function takeSplitAux(error, i$$20, acc$$23, xs$$115) {\n  takeSplitAux: while (true) {\n    const matchValue$$12 = [i$$20, xs$$115];\n\n    if (matchValue$$12[0] === 0) {\n      return [reverse(acc$$23), xs$$115];\n    } else if (matchValue$$12[1].tail != null) {\n      const xs$$116 = matchValue$$12[1].tail;\n      const x$$60 = matchValue$$12[1].head;\n      error = error;\n      i$$20 = i$$20 - 1;\n      acc$$23 = L(x$$60, acc$$23);\n      xs$$115 = xs$$116;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$23), xs$$115];\n      }\n    }\n  }\n}\nexport function take(i$$21, xs$$117) {\n  const matchValue$$13 = [i$$21, xs$$117];\n\n  if (matchValue$$13[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$176, i$$24, xs$$118;\n\n    if (matchValue$$13[0] === 0) {\n      $target$$176 = 0;\n    } else if (matchValue$$13[0] === 1) {\n      if (matchValue$$13[1].tail != null) {\n        $target$$176 = 1;\n      } else {\n        $target$$176 = 2;\n        i$$24 = matchValue$$13[0];\n        xs$$118 = matchValue$$13[1];\n      }\n    } else {\n      $target$$176 = 2;\n      i$$24 = matchValue$$13[0];\n      xs$$118 = matchValue$$13[1];\n    }\n\n    switch ($target$$176) {\n      case 0:\n        {\n          return L();\n        }\n\n      case 1:\n        {\n          const x$$61 = matchValue$$13[1].head;\n          return L(x$$61, L());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$24, L(), xs$$118)[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$119) {\n  if (xs$$119.tail != null) {\n    if (xs$$119.tail.tail == null) {\n      if (predicate$$1(xs$$119.head)) {\n        return xs$$119;\n      } else {\n        return xs$$119.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$119.head)) {\n        return L();\n      } else {\n        return L(xs$$119.head, takeWhile(predicate$$1, xs$$119.tail));\n      }\n    }\n  } else {\n    return xs$$119;\n  }\n}\nexport function truncate(i$$25, xs$$121) {\n  const matchValue$$14 = [i$$25, xs$$121];\n\n  if (matchValue$$14[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$179, i$$28, xs$$122;\n\n    if (matchValue$$14[0] === 0) {\n      $target$$179 = 0;\n    } else if (matchValue$$14[0] === 1) {\n      if (matchValue$$14[1].tail != null) {\n        $target$$179 = 1;\n      } else {\n        $target$$179 = 2;\n        i$$28 = matchValue$$14[0];\n        xs$$122 = matchValue$$14[1];\n      }\n    } else {\n      $target$$179 = 2;\n      i$$28 = matchValue$$14[0];\n      xs$$122 = matchValue$$14[1];\n    }\n\n    switch ($target$$179) {\n      case 0:\n        {\n          return L();\n        }\n\n      case 1:\n        {\n          const x$$64 = matchValue$$14[1].head;\n          return L(x$$64, L());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(false, i$$28, L(), xs$$122)[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$29, xs$$123) {\n  const matchValue$$15 = [i$$29, xs$$123];\n\n  if (matchValue$$15[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$180, i$$32, xs$$125;\n\n    if (matchValue$$15[0] === 0) {\n      $target$$180 = 0;\n    } else if (matchValue$$15[0] === 1) {\n      if (matchValue$$15[1].tail != null) {\n        $target$$180 = 1;\n      } else {\n        $target$$180 = 2;\n        i$$32 = matchValue$$15[0];\n        xs$$125 = matchValue$$15[1];\n      }\n    } else {\n      $target$$180 = 2;\n      i$$32 = matchValue$$15[0];\n      xs$$125 = matchValue$$15[1];\n    }\n\n    switch ($target$$180) {\n      case 0:\n        {\n          return [L(), xs$$123];\n        }\n\n      case 1:\n        {\n          const xs$$124 = matchValue$$15[1].tail;\n          const x$$65 = matchValue$$15[1].head;\n          return [L(x$$65, L()), xs$$124];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$32, L(), xs$$125);\n        }\n    }\n  }\n}\nexport function slice(lower, upper, xs$$126) {\n  const lower$$1 = defaultArg(lower, -1) | 0;\n  const upper$$1 = defaultArg(upper, -1) | 0;\n  return reverse(foldIndexed(function f$$55(i$$33, acc$$24, x$$66) {\n    if ((lower$$1 === -1 ? true : lower$$1 <= i$$33) ? upper$$1 === -1 ? true : i$$33 <= upper$$1 : false) {\n      return L(x$$66, acc$$24);\n    } else {\n      return acc$$24;\n    }\n  }, L(), xs$$126));\n}\nexport function distinctBy(projection$$4, xs$$129, eq$$2) {\n  const hashSet = createMutable([], comparerFromEqualityComparer(eq$$2));\n  return filter(function f$$56($arg$$1) {\n    return addToSet(projection$$4($arg$$1), hashSet);\n  }, xs$$129);\n}\nexport function distinct(xs$$131, eq$$3) {\n  return distinctBy(function (x$$67) {\n    return x$$67;\n  }, xs$$131, eq$$3);\n}\nexport function groupBy(projection$$5, xs$$132, eq$$4) {\n  const dict = createMutable$$1([], comparerFromEqualityComparer(eq$$4));\n  iterate$$1(function (v$$2) {\n    const key = projection$$5(v$$2);\n\n    if (dict.has(key)) {\n      dict.set(key, L(v$$2, dict.get(key)));\n    } else {\n      dict.set(key, L(v$$2, L()));\n    }\n  }, xs$$132);\n  return ofSeq$$1(map$$1(function mapping(kv) {\n    return [kv[0], reverse(kv[1])];\n  }, dict));\n}\nexport function countBy(projection$$6, xs$$133, eq$$5) {\n  const dict$$1 = createMutable$$1([], comparerFromEqualityComparer(eq$$5));\n  iterate(function (v$$3) {\n    const key$$1 = projection$$6(v$$3);\n    const matchValue$$16 = tryGetValue(dict$$1, key$$1, null);\n\n    if (matchValue$$16[0]) {\n      matchValue$$16[1].contents = matchValue$$16[1].contents + 1;\n    } else {\n      dict$$1.set(key$$1, new FSharpRef(1));\n    }\n  }, xs$$133);\n  let result$$1 = L();\n  iterate$$1(function (group) {\n    result$$1 = L([group[0], group[1].contents], result$$1);\n  }, dict$$1);\n  return result$$1;\n}\nexport function where(predicate$$2, xs$$134) {\n  return filter(predicate$$2, xs$$134);\n}","import { Record, L, declare, Union } from \"./Types\";\nimport { compare, downcast, structuralHash, extend, THIS_REF } from \"./Util\";\nimport { value as value$$3, some } from \"./Option\";\nimport { fold as fold$$1 } from \"./List\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$1, unfold, getEnumerator } from \"./Seq\";\nimport { join, toText, printf } from \"./String\";\nexport const MapTree$00602 = declare(function MapTree$00602(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTree$00602$$$System$002EIEquatable$00601($this$$3) {\n  return {\n    [THIS_REF]: $this$$3\n  };\n}\nexport function MapTree$00602$$$System$002EIComparable$00601($this$$4) {\n  return {\n    [THIS_REF]: $this$$4\n  };\n}\nexport function MapTreeModule$$$sizeAux(acc, m) {\n  MapTreeModule$$$sizeAux: while (true) {\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          const r = m.fields[3];\n          const l = m.fields[2];\n          acc = MapTreeModule$$$sizeAux(acc + 1, l);\n          m = r;\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        const h = _arg1.fields[4] | 0;\n        return h | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  const matchValue = [l$$1, r$$1];\n  var $target$$5;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$5 = 0;\n    } else {\n      $target$$5 = 1;\n    }\n  } else {\n    $target$$5 = 1;\n  }\n\n  switch ($target$$5) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      const t2v = t2.fields[1];\n      const t2r = t2.fields[3];\n      const t2l = t2.fields[2];\n      const t2k = t2.fields[0];\n\n      if (MapTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 2) {\n          const t2lv = t2l.fields[1];\n          const t2lr = t2l.fields[3];\n          const t2ll = t2l.fields[2];\n          const t2lk = t2l.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2ll), t2lk, t2lv, MapTreeModule$$$mk(t2lr, t2k, t2v, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2l), t2k, t2v, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      const t1v = t1.fields[1];\n      const t1r = t1.fields[3];\n      const t1l = t1.fields[2];\n      const t1k = t1.fields[0];\n\n      if (MapTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 2) {\n          const t1rv = t1r.fields[1];\n          const t1rr = t1r.fields[3];\n          const t1rl = t1r.fields[2];\n          const t1rk = t1r.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1l, t1k, t1v, t1rl), t1rk, t1rv, MapTreeModule$$$mk(t1rr, k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1l, t1k, t1v, MapTreeModule$$$mk(t1r, k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const k2 = m$$3.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const v2 = m$$3.fields[1];\n        const r$$2 = m$$3.fields[3];\n        const l$$2 = m$$3.fields[2];\n        const k2$$1 = m$$3.fields[0];\n        const h$$1 = m$$3.fields[4] | 0;\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, l$$2), k2$$1, v2, r$$2);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, l$$2, r$$2, h$$1);\n        } else {\n          return MapTreeModule$$$rebalance(l$$2, k2$$1, v2, MapTreeModule$$$add(comparer, k$$2, v$$2, r$$2));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find(comparer$$1, k$$3, m$$4) {\n  MapTreeModule$$$find: while (true) {\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const v2$$1 = m$$4.fields[1];\n          const k2$$2 = m$$4.fields[0];\n          const c$$2 = comparer$$1.Compare(k$$3, k2$$2) | 0;\n\n          if (c$$2 === 0) {\n            return v2$$1;\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const v2$$2 = m$$4.fields[1];\n          const r$$3 = m$$4.fields[3];\n          const l$$3 = m$$4.fields[2];\n          const k2$$3 = m$$4.fields[0];\n          const c$$3 = comparer$$1.Compare(k$$3, k2$$3) | 0;\n\n          if (c$$3 < 0) {\n            comparer$$1 = comparer$$1;\n            k$$3 = k$$3;\n            m$$4 = l$$3;\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return v2$$2;\n          } else {\n            comparer$$1 = comparer$$1;\n            k$$3 = k$$3;\n            m$$4 = r$$3;\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$tryFind(comparer$$2, k$$4, m$$5) {\n  MapTreeModule$$$tryFind: while (true) {\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const v2$$3 = m$$5.fields[1];\n          const k2$$4 = m$$5.fields[0];\n          const c$$4 = comparer$$2.Compare(k$$4, k2$$4) | 0;\n\n          if (c$$4 === 0) {\n            return some(v2$$3);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          const v2$$4 = m$$5.fields[1];\n          const r$$4 = m$$5.fields[3];\n          const l$$4 = m$$5.fields[2];\n          const k2$$5 = m$$5.fields[0];\n          const c$$5 = comparer$$2.Compare(k$$4, k2$$5) | 0;\n\n          if (c$$5 < 0) {\n            comparer$$2 = comparer$$2;\n            k$$4 = k$$4;\n            m$$5 = l$$4;\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(v2$$4);\n          } else {\n            comparer$$2 = comparer$$2;\n            k$$4 = k$$4;\n            m$$5 = r$$4;\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($arg$$12, $arg$$13, $arg$$14, $arg$$15, $arg$$16) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $arg$$12,\n          f$$1 = $arg$$13,\n          s = $arg$$14,\n          acc_0 = $arg$$15,\n          acc_1 = $arg$$16;\n    const acc$$1 = [acc_0, acc_1];\n\n    switch (s.tag) {\n      case 1:\n        {\n          const v$$4 = s.fields[1];\n          const k$$6 = s.fields[0];\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, k$$6, v$$4, acc$$1[0], acc$$1[1]);\n        }\n\n      case 2:\n        {\n          const v$$5 = s.fields[1];\n          const r$$5 = s.fields[3];\n          const l$$5 = s.fields[2];\n          const k$$7 = s.fields[0];\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, r$$5, acc$$1[0], acc$$1[1]);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, k$$7, v$$5, acc$$2[0], acc$$2[1]);\n          $arg$$12 = comparer$$4;\n          $arg$$13 = f$$1;\n          $arg$$14 = l$$5;\n          $arg$$15 = acc$$3[0];\n          $arg$$16 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return acc$$1;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($arg$$25, $arg$$26, $arg$$27, $arg$$28) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$25,\n          f$$4 = $arg$$26,\n          s$$2 = $arg$$27,\n          acc$$5 = $arg$$28;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          const v$$7 = s$$2.fields[1];\n          const k$$9 = s$$2.fields[0];\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, k$$9, v$$7, acc$$5);\n        }\n\n      case 2:\n        {\n          const v$$8 = s$$2.fields[1];\n          const r$$6 = s$$2.fields[3];\n          const l$$6 = s$$2.fields[2];\n          const k$$10 = s$$2.fields[0];\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, l$$6, acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, k$$10, v$$8, acc$$6);\n          $arg$$25 = comparer$$7;\n          $arg$$26 = f$$4;\n          $arg$$27 = r$$6;\n          $arg$$28 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        const v2$$5 = m$$6.fields[1];\n        const k2$$6 = m$$6.fields[0];\n        return [k2$$6, v2$$5, new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        const v2$$6 = m$$6.fields[1];\n        const r$$7 = m$$6.fields[3];\n        const l$$7 = m$$6.fields[2];\n        const k2$$7 = m$$6.fields[0];\n\n        if (l$$7.tag === 0) {\n          return [k2$$7, v2$$6, r$$7];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(l$$7);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], k2$$7, v2$$6, r$$7)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const k2$$8 = m$$7.fields[0];\n        const c$$6 = comparer$$9.Compare(k$$11, k2$$8) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const v2$$7 = m$$7.fields[1];\n        const r$$8 = m$$7.fields[3];\n        const l$$8 = m$$7.fields[2];\n        const k2$$9 = m$$7.fields[0];\n        const c$$7 = comparer$$9.Compare(k$$11, k2$$9) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, l$$8), k2$$9, v2$$7, r$$8);\n        } else if (c$$7 === 0) {\n          const matchValue$$1 = [l$$8, r$$8];\n\n          if (matchValue$$1[0].tag === 0) {\n            return r$$8;\n          } else if (matchValue$$1[1].tag === 0) {\n            return l$$8;\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(r$$8);\n            return MapTreeModule$$$mk(l$$8, patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(l$$8, k2$$9, v2$$7, MapTreeModule$$$remove(comparer$$9, k$$11, r$$8));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem(comparer$$10, k$$12, m$$8) {\n  MapTreeModule$$$mem: while (true) {\n    switch (m$$8.tag) {\n      case 1:\n        {\n          const k2$$10 = m$$8.fields[0];\n          return comparer$$10.Compare(k$$12, k2$$10) === 0;\n        }\n\n      case 2:\n        {\n          const r$$9 = m$$8.fields[3];\n          const l$$9 = m$$8.fields[2];\n          const k2$$11 = m$$8.fields[0];\n          const c$$8 = comparer$$10.Compare(k$$12, k2$$11) | 0;\n\n          if (c$$8 < 0) {\n            comparer$$10 = comparer$$10;\n            k$$12 = k$$12;\n            m$$8 = l$$9;\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            comparer$$10 = comparer$$10;\n            k$$12 = k$$12;\n            m$$8 = r$$9;\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$iter(f$$6, m$$9) {\n  switch (m$$9.tag) {\n    case 1:\n      {\n        const v2$$8 = m$$9.fields[1];\n        const k2$$12 = m$$9.fields[0];\n        f$$6(k2$$12, v2$$8);\n        break;\n      }\n\n    case 2:\n      {\n        const v2$$9 = m$$9.fields[1];\n        const r$$10 = m$$9.fields[3];\n        const l$$10 = m$$9.fields[2];\n        const k2$$13 = m$$9.fields[0];\n        MapTreeModule$$$iter(f$$6, l$$10);\n        f$$6(k2$$13, v2$$9);\n        MapTreeModule$$$iter(f$$6, r$$10);\n        break;\n      }\n\n    default:\n      {}\n  }\n}\nexport function MapTreeModule$$$tryPick($arg$$34, $arg$$35) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $arg$$34,\n          m$$10 = $arg$$35;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          const v2$$10 = m$$10.fields[1];\n          const k2$$14 = m$$10.fields[0];\n          return f$$7(k2$$14, v2$$10);\n        }\n\n      case 2:\n        {\n          const v2$$11 = m$$10.fields[1];\n          const r$$11 = m$$10.fields[3];\n          const l$$11 = m$$10.fields[2];\n          const k2$$15 = m$$10.fields[0];\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, l$$11);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(k2$$15, v2$$11);\n\n            if (matchValue$$3 == null) {\n              $arg$$34 = f$$7;\n              $arg$$35 = r$$11;\n              continue MapTreeModule$$$tryPick;\n            } else {\n              const res$$1 = matchValue$$3;\n              return res$$1;\n            }\n          } else {\n            const res = matchValue$$2;\n            return res;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$exists($arg$$36, $arg$$37) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $arg$$36,\n          m$$11 = $arg$$37;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          const v2$$12 = m$$11.fields[1];\n          const k2$$16 = m$$11.fields[0];\n          return f$$8(k2$$16, v2$$12);\n        }\n\n      case 2:\n        {\n          const v2$$13 = m$$11.fields[1];\n          const r$$12 = m$$11.fields[3];\n          const l$$12 = m$$11.fields[2];\n          const k2$$17 = m$$11.fields[0];\n\n          if (MapTreeModule$$$exists(f$$8, l$$12) ? true : f$$8(k2$$17, v2$$13)) {\n            return true;\n          } else {\n            $arg$$36 = f$$8;\n            $arg$$37 = r$$12;\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$forall($arg$$38, $arg$$39) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $arg$$38,\n          m$$12 = $arg$$39;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          const v2$$14 = m$$12.fields[1];\n          const k2$$18 = m$$12.fields[0];\n          return f$$9(k2$$18, v2$$14);\n        }\n\n      case 2:\n        {\n          const v2$$15 = m$$12.fields[1];\n          const r$$13 = m$$12.fields[3];\n          const l$$13 = m$$12.fields[2];\n          const k2$$19 = m$$12.fields[0];\n\n          if (MapTreeModule$$$forall(f$$9, l$$13) ? f$$9(k2$$19, v2$$15) : false) {\n            $arg$$38 = f$$9;\n            $arg$$39 = r$$13;\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        const v$$9 = m$$13.fields[1];\n        const k$$13 = m$$13.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$13, f$$10(v$$9));\n      }\n\n    case 2:\n      {\n        const v$$10 = m$$13.fields[1];\n        const r$$14 = m$$13.fields[3];\n        const l$$14 = m$$13.fields[2];\n        const k$$14 = m$$13.fields[0];\n        const h$$2 = m$$13.fields[4] | 0;\n        const l2 = MapTreeModule$$$map(f$$10, l$$14);\n        const v2$$16 = f$$10(v$$10);\n        const r2 = MapTreeModule$$$map(f$$10, r$$14);\n        return new MapTree$00602(2, \"MapNode\", k$$14, v2$$16, l2, r2, h$$2);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        const v$$11 = m$$14.fields[1];\n        const k$$15 = m$$14.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$15, f$$11(k$$15, v$$11));\n      }\n\n    case 2:\n      {\n        const v$$12 = m$$14.fields[1];\n        const r$$15 = m$$14.fields[3];\n        const l$$15 = m$$14.fields[2];\n        const k$$16 = m$$14.fields[0];\n        const h$$3 = m$$14.fields[4] | 0;\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, l$$15);\n        const v2$$17 = f$$11(k$$16, v$$12);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, r$$15);\n        return new MapTree$00602(2, \"MapNode\", k$$16, v2$$17, l2$$1, r2$$1, h$$3);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($arg$$44, $arg$$45, $arg$$46) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $arg$$44,\n          m$$15 = $arg$$45,\n          x$$1 = $arg$$46;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          const v$$13 = m$$15.fields[1];\n          const k$$17 = m$$15.fields[0];\n          return f$$12(k$$17, v$$13, x$$1);\n        }\n\n      case 2:\n        {\n          const v$$14 = m$$15.fields[1];\n          const r$$16 = m$$15.fields[3];\n          const l$$16 = m$$15.fields[2];\n          const k$$18 = m$$15.fields[0];\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, r$$16, x$$1);\n          const x$$3 = f$$12(k$$18, v$$14, x$$2);\n          $arg$$44 = f$$12;\n          $arg$$45 = l$$16;\n          $arg$$46 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$fold($arg$$47, $arg$$48, $arg$$49) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $arg$$47,\n          x$$4 = $arg$$48,\n          m$$16 = $arg$$49;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          const v$$15 = m$$16.fields[1];\n          const k$$19 = m$$16.fields[0];\n          return f$$13(x$$4, k$$19, v$$15);\n        }\n\n      case 2:\n        {\n          const v$$16 = m$$16.fields[1];\n          const r$$17 = m$$16.fields[3];\n          const l$$17 = m$$16.fields[2];\n          const k$$20 = m$$16.fields[0];\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, l$$17);\n          const x$$6 = f$$13(x$$5, k$$20, v$$16);\n          $arg$$47 = f$$13;\n          $arg$$48 = x$$6;\n          $arg$$49 = r$$17;\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const v$$17 = m$$17.fields[1];\n        const k$$21 = m$$17.fields[0];\n        const cLoKey = comparer$$11.Compare(lo, k$$21) | 0;\n        const cKeyHi = comparer$$11.Compare(k$$21, hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(k$$21, v$$17, x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const v$$18 = m$$17.fields[1];\n        const r$$18 = m$$17.fields[3];\n        const l$$18 = m$$17.fields[2];\n        const k$$22 = m$$17.fields[0];\n        const cLoKey$$1 = comparer$$11.Compare(lo, k$$22) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(k$$22, hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, l$$18, x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(k$$22, v$$18, x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, r$$18, x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop(m$$19, acc$$8) {\n  MapTreeModule$$$loop: while (true) {\n    switch (m$$19.tag) {\n      case 1:\n        {\n          const v$$19 = m$$19.fields[1];\n          const k$$23 = m$$19.fields[0];\n          return L([k$$23, v$$19], acc$$8);\n        }\n\n      case 2:\n        {\n          const v$$20 = m$$19.fields[1];\n          const r$$19 = m$$19.fields[3];\n          const l$$19 = m$$19.fields[2];\n          const k$$24 = m$$19.fields[0];\n          m$$19 = l$$19;\n          acc$$8 = L([k$$24, v$$20], MapTreeModule$$$loop(r$$19, acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, L());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator(comparer$$14, acc$$10, e) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      const $var$$62 = comparer$$14;\n      acc$$10 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      e = e;\n      comparer$$14 = $var$$62;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    ie.Dispose();\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function MapTreeModule$002EMapIterator$00602(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$$$collapseLHS(stack) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        stack = L(stack.head.fields[2], L(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), L(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        stack = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return L();\n    }\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(L(s$$5, L())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function MapTreeModule$002EmkIEnumerator$0027$00602(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this != null ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EGeneric$002EIEnumerator$00601($this$$63) {\n  return extend(MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EIEnumerator($this$$63), MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002EIDisposable($this$$63), {\n    [THIS_REF]: $this$$63,\n\n    get Current() {\n      return MapTreeModule$$$current($this$$63.i);\n    }\n\n  });\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EIEnumerator($this$$64) {\n  return {\n    [THIS_REF]: $this$$64,\n\n    get Current() {\n      return MapTreeModule$$$current($this$$64.i);\n    },\n\n    MoveNext() {\n      return MapTreeModule$$$moveNext($this$$64.i);\n    },\n\n    Reset() {\n      $this$$64.i = MapTreeModule$$$mkIterator($this$$64.s);\n    }\n\n  };\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002EIDisposable($this$$65) {\n  return {\n    [THIS_REF]: $this$$65,\n\n    Dispose() {}\n\n  };\n}\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EGeneric$002EIEnumerator$00601(MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7));\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function FSharpMap(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this != null ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$$System$002ECollections$002EGeneric$002EIEnumerable$00601($this$$66) {\n  return {\n    [THIS_REF]: $this$$66\n  };\n}\nexport function FSharpMap$$get_Comparer(__$$5) {\n  return __$$5.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$6) {\n  return __$$6.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$7, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$7.comparer, MapTreeModule$$$add(__$$7.comparer, k$$28, v$$24, __$$7.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$8) {\n  return MapTreeModule$$$isEmpty(__$$8.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$9, k$$29) {\n  return MapTreeModule$$$find(__$$9.comparer, k$$29, __$$9.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$10, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$10.comparer, k$$30, __$$10.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$Z52B03DBD(__$$11, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$11.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$12, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$12.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$13, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$13.comparer, MapTreeModule$$$filter(__$$13.comparer, f$$19, __$$13.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$14, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$14.tree);\n}\nexport function FSharpMap$$Fold(__$$15, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$15.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$16, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$16.comparer, lo$$2, hi$$2, f$$22, __$$16.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$17, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$17.tree);\n}\nexport function FSharpMap$$MapRange$$Z1D9544EB(__$$18, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$map(f$$24, __$$18.tree));\n}\nexport function FSharpMap$$Map$$Z5CD84AAA(__$$19, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, MapTreeModule$$$mapi(f$$25, __$$19.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$20, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$20.comparer, f$$26, __$$20.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$20.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$20.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$21) {\n  return MapTreeModule$$$size(__$$21.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$22, k$$31) {\n  return MapTreeModule$$$mem(__$$22.comparer, k$$31, __$$22.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$23, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$23.comparer, MapTreeModule$$$remove(__$$23.comparer, k$$32, __$$23.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$24, k$$33) {\n  return MapTreeModule$$$tryFind(__$$24.comparer, k$$33, __$$24.tree);\n}\nexport function FSharpMap$$ToList(__$$25) {\n  return MapTreeModule$$$toList(__$$25.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  return \"map [\" + join(\"; \", ...map$$1(function mapping(kv) {\n    return toText(printf(\"(%A, %A)\"))(kv[0])(kv[1]);\n  }, this$)) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const activePatternResult2372 = e$$1.Current;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult2372[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult2372[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$26 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$26.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  const m2 = downcast(obj);\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m2));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      e2.Dispose();\n    }\n  } finally {\n    e1.Dispose();\n  }\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$34, v$$26, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$34, v$$26);\n}\nexport function find(k$$35, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$35);\n}\nexport function tryFind(k$$36, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$36);\n}\nexport function remove(k$$37, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$37);\n}\nexport function containsKey(k$$38, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$38);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$Z52B03DBD(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$Z1D9544EB(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z5CD84AAA(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  const _arg1$$1 = MapTreeModule$$$tryPick(function f$$39(k$$39, v$$27) {\n    if (f$$38(k$$39, v$$27)) {\n      return some(k$$39);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$41));\n\n  if (_arg1$$1 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$40 = value$$3(_arg1$$1);\n    return k$$40;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  return MapTreeModule$$$tryPick(function f$$41(k$$41, v$$28) {\n    if (f$$40(k$$41, v$$28)) {\n      return some(k$$41);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$43));\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  const res$$6 = new Array(FSharpMap$$get_Count(m$$46));\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$42) {\n      return MapTreeModule$$$find(comparer$$22, k$$42, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      return map$$1(function mapping$$1(kv$$1) {\n        return kv$$1[0];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    set(k$$43, v$$29) {\n      const this$$$3 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$43, v$$29, tree$$1);\n      return this$$$3;\n    },\n\n    values() {\n      return map$$1(function mapping$$2(kv$$2) {\n        return kv$$2[1];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$3, comparer$$23) {\n  return createMutablePrivate(comparer$$23, MapTreeModule$$$ofSeq(comparer$$23, source$$3));\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$30) {\n    const key = projection(v$$30);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$30);\n    } else {\n      dict.set(key, Array.from([v$$30]));\n    }\n  }, xs);\n  return map$$1(function mapping$$3(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n  }, xs$$1);\n  return map$$1(function mapping$$4(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}","import { createMutable as createMutableMap } from \"./Map\";\nimport { createMutable as createMutableSet } from \"./Set\";\nimport { combineHashCodes, compare, compareArrays, equals, equalArrays, identityHash, structuralHash, numberHash, toString } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + toString(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map(x => toString(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function L(h, t) {\n    return new List(h, t);\n}\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + toString(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map(toString).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    let hashes = this.fields.map(structuralHash);\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + toString(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\n// EXCEPTIONS\nexport const Exception = declare(function Exception(msg) {\n    this.stack = Error().stack;\n    this.message = msg;\n});\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter(k => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map(k => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n}, FSharpException);\nexport const Dictionary = declare(function Dictionary(source, comparer) {\n    this.__mutableMap = createMutableMap(source, comparer);\n});\nObject.defineProperty(Dictionary.prototype, \"size\", { get: function () {\n        return this.__mutableMap.size;\n    } });\nDictionary.prototype.clear = function () { return this.__mutableMap.clear(); };\nDictionary.prototype.delete = function (k) { return this.__mutableMap.delete(k); };\nDictionary.prototype.entries = function () { return this.__mutableMap.entries(); };\nDictionary.prototype.get = function (k) { return this.__mutableMap.get(k); };\nDictionary.prototype.has = function (k) { return this.__mutableMap.has(k); };\nDictionary.prototype.keys = function () { return this.__mutableMap.keys(); };\nDictionary.prototype.set = function (k, v) { return this.__mutableMap.set(k, v); };\nDictionary.prototype.values = function () { return this.__mutableMap.values(); };\nDictionary.prototype[Symbol.iterator] = function () { return this.__mutableMap[Symbol.iterator](); };\nexport const HashSet = declare(function HashSet(source, comparer) {\n    this.__mutableSet = createMutableSet(source, comparer);\n});\nObject.defineProperty(HashSet.prototype, \"size\", { get: function () {\n        return this.__mutableSet.size;\n    } });\nHashSet.prototype.add = function (v) { return this.__mutableSet.add(v); };\nHashSet.prototype.clear = function () { return this.__mutableSet.clear(); };\nHashSet.prototype.delete = function (k) { return this.__mutableSet.delete(k); };\nHashSet.prototype.has = function (k) { return this.__mutableSet.has(k); };\nHashSet.prototype.values = function () { return this.__mutableSet.values(); };\nHashSet.prototype[Symbol.iterator] = function () { return this.__mutableSet[Symbol.iterator](); };\nexport const Attribute = declare(function Attribute() { });\n","module Fable.Helpers.React\n\nopen FSharp.Reflection\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Fable.Import\n\nmodule rec Props =\n    type IProp =\n        interface end\n\n    type IHTMLProp =\n        inherit IProp\n\n    type IFragmentProp =\n        inherit IProp\n\n    type FragmentProp =\n        | Key of string\n        interface IFragmentProp\n\n    type Prop =\n        | Key of string\n        | Ref of (Browser.Element->unit)\n        interface IHTMLProp\n\n    type DangerousHtml = {\n        __html: string\n    }\n\n    type DOMAttr =\n        | DangerouslySetInnerHTML of DangerousHtml\n        | OnCut of (React.ClipboardEvent -> unit)\n        | OnPaste of (React.ClipboardEvent -> unit)\n        | OnCompositionEnd of (React.CompositionEvent -> unit)\n        | OnCompositionStart of (React.CompositionEvent -> unit)\n        | OnCopy of (React.ClipboardEvent -> unit)\n        | OnCompositionUpdate of (React.CompositionEvent -> unit)\n        | OnFocus of (React.FocusEvent -> unit)\n        | OnBlur of (React.FocusEvent -> unit)\n        | OnChange of (React.FormEvent -> unit)\n        | OnInput of (React.FormEvent -> unit)\n        | OnSubmit of (React.FormEvent -> unit)\n        | OnLoad of (React.SyntheticEvent -> unit)\n        | OnError of (React.SyntheticEvent -> unit)\n        | OnKeyDown of (React.KeyboardEvent -> unit)\n        | OnKeyPress of (React.KeyboardEvent -> unit)\n        | OnKeyUp of (React.KeyboardEvent -> unit)\n        | OnAbort of (React.SyntheticEvent -> unit)\n        | OnCanPlay of (React.SyntheticEvent -> unit)\n        | OnCanPlayThrough of (React.SyntheticEvent -> unit)\n        | OnDurationChange of (React.SyntheticEvent -> unit)\n        | OnEmptied of (React.SyntheticEvent -> unit)\n        | OnEncrypted of (React.SyntheticEvent -> unit)\n        | OnEnded of (React.SyntheticEvent -> unit)\n        | OnLoadedData of (React.SyntheticEvent -> unit)\n        | OnLoadedMetadata of (React.SyntheticEvent -> unit)\n        | OnLoadStart of (React.SyntheticEvent -> unit)\n        | OnPause of (React.SyntheticEvent -> unit)\n        | OnPlay of (React.SyntheticEvent -> unit)\n        | OnPlaying of (React.SyntheticEvent -> unit)\n        | OnProgress of (React.SyntheticEvent -> unit)\n        | OnRateChange of (React.SyntheticEvent -> unit)\n        | OnSeeked of (React.SyntheticEvent -> unit)\n        | OnSeeking of (React.SyntheticEvent -> unit)\n        | OnStalled of (React.SyntheticEvent -> unit)\n        | OnSuspend of (React.SyntheticEvent -> unit)\n        | OnTimeUpdate of (React.SyntheticEvent -> unit)\n        | OnVolumeChange of (React.SyntheticEvent -> unit)\n        | OnWaiting of (React.SyntheticEvent -> unit)\n        | OnClick of (React.MouseEvent -> unit)\n        | OnContextMenu of (React.MouseEvent -> unit)\n        | OnDoubleClick of (React.MouseEvent -> unit)\n        | OnDrag of (React.DragEvent -> unit)\n        | OnDragEnd of (React.DragEvent -> unit)\n        | OnDragEnter of (React.DragEvent -> unit)\n        | OnDragExit of (React.DragEvent -> unit)\n        | OnDragLeave of (React.DragEvent -> unit)\n        | OnDragOver of (React.DragEvent -> unit)\n        | OnDragStart of (React.DragEvent -> unit)\n        | OnDrop of (React.DragEvent -> unit)\n        | OnMouseDown of (React.MouseEvent -> unit)\n        | OnMouseEnter of (React.MouseEvent -> unit)\n        | OnMouseLeave of (React.MouseEvent -> unit)\n        | OnMouseMove of (React.MouseEvent -> unit)\n        | OnMouseOut of (React.MouseEvent -> unit)\n        | OnMouseOver of (React.MouseEvent -> unit)\n        | OnMouseUp of (React.MouseEvent -> unit)\n        | OnSelect of (React.SyntheticEvent -> unit)\n        | OnTouchCancel of (React.TouchEvent -> unit)\n        | OnTouchEnd of (React.TouchEvent -> unit)\n        | OnTouchMove of (React.TouchEvent -> unit)\n        | OnTouchStart of (React.TouchEvent -> unit)\n        | OnScroll of (React.UIEvent -> unit)\n        | OnWheel of (React.WheelEvent -> unit)\n        | OnAnimationStart of (React.AnimationEvent -> unit)\n        | OnAnimationEnd of (React.AnimationEvent -> unit)\n        | OnAnimationIteration of (React.AnimationEvent -> unit)\n        | OnTransitionEnd of (React.TransitionEvent -> unit)\n        interface IHTMLProp\n\n    type SVGAttr =\n        | ClipPath of string\n        | Cx of obj\n        | Cy of obj\n        | D of string\n        | Dx of obj\n        | Dy of obj\n        | Fill of string\n        | FillOpacity of obj\n        | FontFamily of string\n        | FontSize of obj\n        | Fx of obj\n        | Fy of obj\n        | GradientTransform of string\n        | GradientUnits of string\n        | Height of obj\n        | MarkerEnd of string\n        | MarkerMid of string\n        | MarkerStart of string\n        | Offset of obj\n        | Opacity of obj\n        | PatternContentUnits of string\n        | PatternUnits of string\n        | Points of string\n        | PreserveAspectRatio of string\n        | R of obj\n        | Rx of obj\n        | Ry of obj\n        | SpreadMethod of string\n        | StopColor of string\n        | StopOpacity of obj\n        | Stroke of string\n        | StrokeDasharray of string\n        | StrokeLinecap of string\n        | StrokeMiterlimit of string\n        | StrokeOpacity of obj\n        | StrokeWidth of obj\n        | TextAnchor of string\n        | Transform of string\n        | Version of string\n        | ViewBox of string\n        | Width of obj\n        | X1 of obj\n        | X2 of obj\n        | X of obj\n        | XlinkActuate of string\n        | XlinkArcrole of string\n        | XlinkHref of string\n        | XlinkRole of string\n        | XlinkShow of string\n        | XlinkTitle of string\n        | XlinkType of string\n        | XmlBase of string\n        | XmlLang of string\n        | XmlSpace of string\n        | Y1 of obj\n        | Y2 of obj\n        | Y of obj\n#if !FABLE_COMPILER\n        | Custom of string * obj\n#else\n        /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\n        static member inline Custom (key: string, value: obj) : SVGAttr = !!(key, value)\n#endif\n        interface IProp\n\n    type HTMLAttr =\n        | DefaultChecked of bool\n        | DefaultValue of string\n        | Accept of string\n        | AcceptCharset of string\n        | AccessKey of string\n        | Action of string\n        | AllowFullScreen of bool\n        | AllowTransparency of bool\n        | Alt of string\n        | [<CompiledName(\"aria-haspopup\")>] AriaHasPopup of bool\n        | [<CompiledName(\"aria-expanded\")>] AriaExpanded of bool\n        | Async of bool\n        | AutoComplete of string\n        | AutoFocus of bool\n        | AutoPlay of bool\n        | Capture of bool\n        | CellPadding of obj\n        | CellSpacing of obj\n        | CharSet of string\n        | Challenge of string\n        | Checked of bool\n        | ClassID of string\n        | ClassName of string\n        /// Alias of ClassName\n        | [<CompiledName(\"className\")>] Class of string\n        | Cols of float\n        | ColSpan of float\n        | Content of string\n        | ContentEditable of bool\n        | ContextMenu of string\n        | Controls of bool\n        | Coords of string\n        | CrossOrigin of string\n        // | Data of string\n        | [<CompiledName(\"data-toggle\")>] DataToggle of string\n        | DateTime of string\n        | Default of bool\n        | Defer of bool\n        | Dir of string\n        | Disabled of bool\n        | Download of obj\n        | Draggable of bool\n        | EncType of string\n        | Form of string\n        | FormAction of string\n        | FormEncType of string\n        | FormMethod of string\n        | FormNoValidate of bool\n        | FormTarget of string\n        | FrameBorder of obj\n        | Headers of string\n        | Height of obj\n        | Hidden of bool\n        | High of float\n        | Href of string\n        | HrefLang of string\n        | HtmlFor of string\n        | HttpEquiv of string\n        | Icon of string\n        | Id of string\n        | InputMode of string\n        | Integrity of string\n        | Is of string\n        | KeyParams of string\n        | KeyType of string\n        | Kind of string\n        | Label of string\n        | Lang of string\n        | List of string\n        | Loop of bool\n        | Low of float\n        | Manifest of string\n        | MarginHeight of float\n        | MarginWidth of float\n        | Max of obj\n        | MaxLength of float\n        | Media of string\n        | MediaGroup of string\n        | Method of string\n        | Min of obj\n        | MinLength of float\n        | Multiple of bool\n        | Muted of bool\n        | Name of string\n        | NoValidate of bool\n        | Open of bool\n        | Optimum of float\n        | Pattern of string\n        | Placeholder of string\n        | Poster of string\n        | Preload of string\n        | RadioGroup of string\n        | ReadOnly of bool\n        | Rel of string\n        | Required of bool\n        | Role of string\n        | Rows of float\n        | RowSpan of float\n        | Sandbox of string\n        | Scope of string\n        | Scoped of bool\n        | Scrolling of string\n        | Seamless of bool\n        | Selected of bool\n        | Shape of string\n        | Size of float\n        | Sizes of string\n        | Span of float\n        | SpellCheck of bool\n        | Src of string\n        | SrcDoc of string\n        | SrcLang of string\n        | SrcSet of string\n        | Start of float\n        | Step of obj\n        | Summary of string\n        | TabIndex of float\n        | Target of string\n        | Title of string\n        | Type of string\n        | UseMap of string\n        | Value of string\n        | Width of obj\n        | Wmode of string\n        | Wrap of string\n        | About of string\n        | Datatype of string\n        | Inlist of obj\n        | Prefix of string\n        | Property of string\n        | Resource of string\n        | Typeof of string\n        | Vocab of string\n        | AutoCapitalize of string\n        | AutoCorrect of string\n        | AutoSave of string\n        // | Color of string // Conflicts with CSSProp, shouldn't be used in HTML5\n        | ItemProp of string\n        | ItemScope of bool\n        | ItemType of string\n        | ItemID of string\n        | ItemRef of string\n        | Results of float\n        | Security of string\n        | Unselectable of bool\n#if !FABLE_COMPILER\n        | Custom of string * obj\n        | Style of CSSProp list\n        | Data of string * obj\n#else\n        static member inline Custom (key: string, value: obj) : HTMLAttr = !!(key, value)\n#endif\n        interface IHTMLProp\n\n    type CSSProp =\n        | AlignContent of obj\n        | AlignItems of obj\n        | AlignSelf of obj\n        | AlignmentAdjust of obj\n        | AlignmentBaseline of obj\n        | All of obj\n        | Animation of obj\n        | AnimationDelay of obj\n        | AnimationDirection of obj\n        | AnimationDuration of obj\n        | AnimationFillMode of obj\n        | AnimationIterationCount of obj\n        | AnimationName of obj\n        | AnimationPlayState of obj\n        | AnimationTimingFunction of obj\n        | Appearance of obj\n        | BackfaceVisibility of obj\n        | Background of obj\n        | BackgroundAttachment of obj\n        | BackgroundBlendMode of obj\n        | BackgroundClip of obj\n        | BackgroundColor of obj\n        | BackgroundComposite of obj\n        | BackgroundImage of obj\n        | BackgroundOrigin of obj\n        | BackgroundPosition of obj\n        | BackgroundPositionX of obj\n        | BackgroundPositionY of obj\n        | BackgroundRepeat of obj\n        | BackgroundSize of obj\n        | BaselineShift of obj\n        | Behavior of obj\n        | BlockSize of obj\n        | Border of obj\n        | BorderBlockEnd of obj\n        | BorderBlockEndColor of obj\n        | BorderBlockEndStyle of obj\n        | BorderBlockEndWidth of obj\n        | BorderBlockStart of obj\n        | BorderBlockStartColor of obj\n        | BorderBlockStartStyle of obj\n        | BorderBlockStartWidth of obj\n        | BorderBottom of obj\n        | BorderBottomColor of obj\n        | BorderBottomLeftRadius of obj\n        | BorderBottomRightRadius of obj\n        | BorderBottomStyle of obj\n        | BorderBottomWidth of obj\n        | BorderCollapse of obj\n        | BorderColor of obj\n        | BorderCornerShape of obj\n        | BorderImage of obj\n        | BorderImageOutset of obj\n        | BorderImageRepeat of obj\n        | BorderImageSlice of obj\n        | BorderImageSource of obj\n        | BorderImageWidth of obj\n        | BorderInlineEnd of obj\n        | BorderInlineEndColor of obj\n        | BorderInlineEndStyle of obj\n        | BorderInlineEndWidth of obj\n        | BorderInlineStart of obj\n        | BorderInlineStartColor of obj\n        | BorderInlineStartStyle of obj\n        | BorderInlineStartWidth of obj\n        | BorderLeft of obj\n        | BorderLeftColor of obj\n        | BorderLeftStyle of obj\n        | BorderLeftWidth of obj\n        | BorderRadius of obj\n        | BorderRight of obj\n        | BorderRightColor of obj\n        | BorderRightStyle of obj\n        | BorderRightWidth of obj\n        | BorderSpacing of obj\n        | BorderStyle of obj\n        | BorderTop of obj\n        | BorderTopColor of obj\n        | BorderTopLeftRadius of obj\n        | BorderTopRightRadius of obj\n        | BorderTopStyle of obj\n        | BorderTopWidth of obj\n        | BorderWidth of obj\n        | Bottom of obj\n        | BoxAlign of obj\n        | BoxDecorationBreak of obj\n        | BoxDirection of obj\n        | BoxFlex of obj\n        | BoxFlexGroup of obj\n        | BoxLineProgression of obj\n        | BoxLines of obj\n        | BoxOrdinalGroup of obj\n        | BoxShadow of obj\n        | BoxSizing of obj\n        | BreakAfter of obj\n        | BreakBefore of obj\n        | BreakInside of obj\n        | CaptionSide of obj\n        | CaretColor of obj\n        | Clear of obj\n        | Clip of obj\n        | ClipPath of obj\n        | ClipRule of obj\n        | Color of obj\n        | ColorInterpolation of obj\n        | ColorInterpolationFilters of obj\n        | ColorProfile of obj\n        | ColorRendering of obj\n        | ColumnCount of obj\n        | ColumnFill of obj\n        | ColumnGap of obj\n        | ColumnRule of obj\n        | ColumnRuleColor of obj\n        | ColumnRuleStyle of obj\n        | ColumnRuleWidth of obj\n        | ColumnSpan of obj\n        | ColumnWidth of obj\n        | Columns of obj\n        | Content of obj\n        | CounterIncrement of obj\n        | CounterReset of obj\n        | Cue of obj\n        | CueAfter of obj\n        | Cursor of obj\n        | Direction of obj\n        | Display of obj\n        | DominantBaseline of obj\n        | EmptyCells of obj\n        | EnableBackground of obj\n        | Fill of obj\n        | FillOpacity of obj\n        | FillRule of obj\n        | Filter of obj\n        | Flex of obj\n        | FlexAlign of obj\n        | FlexBasis of obj\n        | FlexDirection of obj\n        | FlexFlow of obj\n        | FlexGrow of obj\n        | FlexItemAlign of obj\n        | FlexLinePack of obj\n        | FlexOrder of obj\n        | FlexShrink of obj\n        | FlexWrap of obj\n        | Float of obj\n        | FloodColor of obj\n        | FloodOpacity of obj\n        | FlowFrom of obj\n        | Font of obj\n        | FontFamily of obj\n        | FontFeatureSettings of obj\n        | FontKerning of obj\n        | FontLanguageOverride of obj\n        | FontSize of obj\n        | FontSizeAdjust of obj\n        | FontStretch of obj\n        | FontStyle of obj\n        | FontSynthesis of obj\n        | FontVariant of obj\n        | FontVariantAlternates of obj\n        | FontVariantCaps of obj\n        | FontVariantEastAsian of obj\n        | FontVariantLigatures of obj\n        | FontVariantNumeric of obj\n        | FontVariantPosition of obj\n        | FontWeight of obj\n        | GlyphOrientationHorizontal of obj\n        | GlyphOrientationVertical of obj\n        | Grid of obj\n        | GridArea of obj\n        | GridAutoColumns of obj\n        | GridAutoFlow of obj\n        | GridAutoRows of obj\n        | GridColumn of obj\n        | GridColumnEnd of obj\n        | GridColumnGap of obj\n        | GridColumnStart of obj\n        | GridGap of obj\n        | GridRow of obj\n        | GridRowEnd of obj\n        | GridRowGap of obj\n        | GridRowPosition of obj\n        | GridRowSpan of obj\n        | GridRowStart of obj\n        | GridTemplate of obj\n        | GridTemplateAreas of obj\n        | GridTemplateColumns of obj\n        | GridTemplateRows of obj\n        | HangingPunctuation of obj\n        | Height of obj\n        | HyphenateLimitChars of obj\n        | HyphenateLimitLines of obj\n        | HyphenateLimitZone of obj\n        | Hyphens of obj\n        | ImageOrientation of obj\n        | ImageRendering of obj\n        | ImageResolution of obj\n        | ImeMode of obj\n        | InlineSize of obj\n        | Isolation of obj\n        | JustifyContent of obj\n        | Kerning of obj\n        | LayoutGrid of obj\n        | LayoutGridChar of obj\n        | LayoutGridLine of obj\n        | LayoutGridMode of obj\n        | LayoutGridType of obj\n        | Left of obj\n        | LetterSpacing of obj\n        | LightingColor of obj\n        | LineBreak of obj\n        | LineClamp of obj\n        | LineHeight of obj\n        | ListStyle of obj\n        | ListStyleImage of obj\n        | ListStylePosition of obj\n        | ListStyleType of obj\n        | Margin of obj\n        | MarginBlockEnd of obj\n        | MarginBlockStart of obj\n        | MarginBottom of obj\n        | MarginInlineEnd of obj\n        | MarginInlineStart of obj\n        | MarginLeft of obj\n        | MarginRight of obj\n        | MarginTop of obj\n        | MarkerEnd of obj\n        | MarkerMid of obj\n        | MarkerStart of obj\n        | MarqueeDirection of obj\n        | MarqueeStyle of obj\n        | Mask of obj\n        | MaskBorder of obj\n        | MaskBorderRepeat of obj\n        | MaskBorderSlice of obj\n        | MaskBorderSource of obj\n        | MaskBorderWidth of obj\n        | MaskClip of obj\n        | MaskComposite of obj\n        | MaskImage of obj\n        | MaskMode of obj\n        | MaskOrigin of obj\n        | MaskPosition of obj\n        | MaskRepeat of obj\n        | MaskSize of obj\n        | MaskType of obj\n        | MaxFontSize of obj\n        | MaxHeight of obj\n        | MaxWidth of obj\n        | MinBlockSize of obj\n        | MinHeight of obj\n        | MinInlineSize of obj\n        | MinWidth of obj\n        | MixBlendMode of obj\n        | ObjectFit of obj\n        | ObjectPosition of obj\n        | OffsetBlockEnd of obj\n        | OffsetBlockStart of obj\n        | OffsetInlineEnd of obj\n        | OffsetInlineStart of obj\n        | Opacity of obj\n        | Order of obj\n        | Orphans of obj\n        | Outline of obj\n        | OutlineColor of obj\n        | OutlineOffset of obj\n        | OutlineStyle of obj\n        | OutlineWidth of obj\n        | Overflow of obj\n        | OverflowStyle of obj\n        | OverflowWrap of obj\n        | OverflowX of obj\n        | OverflowY of obj\n        | Padding of obj\n        | PaddingBlockEnd of obj\n        | PaddingBlockStart of obj\n        | PaddingBottom of obj\n        | PaddingInlineEnd of obj\n        | PaddingInlineStart of obj\n        | PaddingLeft of obj\n        | PaddingRight of obj\n        | PaddingTop of obj\n        | PageBreakAfter of obj\n        | PageBreakBefore of obj\n        | PageBreakInside of obj\n        | Pause of obj\n        | PauseAfter of obj\n        | PauseBefore of obj\n        | Perspective of obj\n        | PerspectiveOrigin of obj\n        | PointerEvents of obj\n        | Position of obj\n        | PunctuationTrim of obj\n        | Quotes of obj\n        | RegionFragment of obj\n        | Resize of obj\n        | RestAfter of obj\n        | RestBefore of obj\n        | Right of obj\n        | RubyAlign of obj\n        | RubyMerge of obj\n        | RubyPosition of obj\n        | ScrollBehavior of obj\n        | ScrollSnapCoordinate of obj\n        | ScrollSnapDestination of obj\n        | ScrollSnapType of obj\n        | ShapeImageThreshold of obj\n        | ShapeInside of obj\n        | ShapeMargin of obj\n        | ShapeOutside of obj\n        | ShapeRendering of obj\n        | Speak of obj\n        | SpeakAs of obj\n        | StopColor of obj\n        | StopOpacity of obj\n        | Stroke of obj\n        | StrokeDasharray of obj\n        | StrokeDashoffset of obj\n        | StrokeLinecap of obj\n        | StrokeLinejoin of obj\n        | StrokeMiterlimit of obj\n        | StrokeOpacity of obj\n        | StrokeWidth of obj\n        | TabSize of obj\n        | TableLayout of obj\n        | TextAlign of obj\n        | TextAlignLast of obj\n        | TextAnchor of obj\n        | TextCombineUpright of obj\n        | TextDecoration of obj\n        | TextDecorationColor of obj\n        | TextDecorationLine of obj\n        | TextDecorationLineThrough of obj\n        | TextDecorationNone of obj\n        | TextDecorationOverline of obj\n        | TextDecorationSkip of obj\n        | TextDecorationStyle of obj\n        | TextDecorationUnderline of obj\n        | TextEmphasis of obj\n        | TextEmphasisColor of obj\n        | TextEmphasisPosition of obj\n        | TextEmphasisStyle of obj\n        | TextHeight of obj\n        | TextIndent of obj\n        | TextJustify of obj\n        | TextJustifyTrim of obj\n        | TextKashidaSpace of obj\n        | TextLineThrough of obj\n        | TextLineThroughColor of obj\n        | TextLineThroughMode of obj\n        | TextLineThroughStyle of obj\n        | TextLineThroughWidth of obj\n        | TextOrientation of obj\n        | TextOverflow of obj\n        | TextOverline of obj\n        | TextOverlineColor of obj\n        | TextOverlineMode of obj\n        | TextOverlineStyle of obj\n        | TextOverlineWidth of obj\n        | TextRendering of obj\n        | TextScript of obj\n        | TextShadow of obj\n        | TextTransform of obj\n        | TextUnderlinePosition of obj\n        | TextUnderlineStyle of obj\n        | Top of obj\n        | TouchAction of obj\n        | Transform of obj\n        | TransformBox of obj\n        | TransformOrigin of obj\n        | TransformOriginZ of obj\n        | TransformStyle of obj\n        | Transition of obj\n        | TransitionDelay of obj\n        | TransitionDuration of obj\n        | TransitionProperty of obj\n        | TransitionTimingFunction of obj\n        | UnicodeBidi of obj\n        | UnicodeRange of obj\n        | UserFocus of obj\n        | UserInput of obj\n        | VerticalAlign of obj\n        | Visibility of obj\n        | VoiceBalance of obj\n        | VoiceDuration of obj\n        | VoiceFamily of obj\n        | VoicePitch of obj\n        | VoiceRange of obj\n        | VoiceRate of obj\n        | VoiceStress of obj\n        | VoiceVolume of obj\n        | WhiteSpace of obj\n        | WhiteSpaceTreatment of obj\n        | Widows of obj\n        | Width of obj\n        | WillChange of obj\n        | WordBreak of obj\n        | WordSpacing of obj\n        | WordWrap of obj\n        | WrapFlow of obj\n        | WrapMargin of obj\n        | WrapOption of obj\n        | WritingMode of obj\n        | ZIndex of obj\n        | Zoom of obj\n#if !FABLE_COMPILER\n        | Custom of string * obj\n#else\n        /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\n        static member inline Custom (key: string, value: obj) : CSSProp = !!(key, value)\n#endif\n\n#if FABLE_COMPILER\n    let inline Style (css: CSSProp seq): HTMLAttr =\n        !!(\"style\", keyValueList CaseRules.LowerFirst css)\n\n    let inline Data (key: string, value: obj): IHTMLProp =\n        !!(\"data-\" + key, value)\n#endif\n\nopen Props\nopen Fable.Import.React\n\n[<Erase>]\ntype HTMLNode =\n| Text of string\n| RawText of string\n| Node of string * IProp seq * ReactElement seq\n| List of ReactElement seq\n| Empty\nwith interface ReactElement\n\n[<Import(\"createElement\", from=\"react\")>]\nlet createElement(comp: obj, props: obj, [<ParamList>] children: obj) =\n    HTMLNode.Empty :> ReactElement\n\n[<StringEnum>]\ntype ServerElementType =\n| Tag\n| Fragment\n| Component\n\nlet [<Literal>] private ChildrenName = \"children\"\n\nmodule ServerRenderingInternal =\n\n#if FABLE_COMPILER\n    let inline createServerElement (tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        createElement(tag, props, children)\n    let inline createServerElementByFn (f, props, children) =\n        createElement(f, props, children)\n#else\n    let createServerElement (tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        match elementType with\n        | ServerElementType.Tag ->\n            HTMLNode.Node (string tag, props :?> IProp seq, children) :> ReactElement\n        | ServerElementType.Fragment ->\n            HTMLNode.List children :> ReactElement\n        | ServerElementType.Component ->\n            let tag = tag :?> System.Type\n            let comp = System.Activator.CreateInstance(tag, props)\n#if NETSTANDARD1_6\n            let tag = tag.GetTypeInfo()\n#endif\n            let childrenProp = tag.GetProperty(ChildrenName)\n            childrenProp.SetValue(comp, children |> Seq.toArray)\n            let render = tag.GetMethod(\"render\")\n            render.Invoke(comp, null) :?> ReactElement\n\n    let createServerElementByFn = fun (f, props, children) ->\n#if NETSTANDARD1_6\n        let propsType' = props.GetType()\n        let propsType = propsType'.GetTypeInfo()\n#else\n        let propsType = props.GetType()\n#endif\n        let props =\n            if propsType.GetProperty (ChildrenName) |> isNull then\n                props\n            else\n                let values = ResizeArray<obj> ()\n                let properties = propsType.GetProperties()\n                for p in properties do\n                    if p.Name = ChildrenName then\n                        values.Add (children |> Seq.toArray)\n                    else\n                        values.Add (FSharpValue.GetRecordField(props, p))\n#if NETSTANDARD1_6\n                let propsType = propsType'\n#endif\n                FSharpValue.MakeRecord(propsType, values.ToArray()) :?> 'P\n        f props\n\n#endif\n\nopen ServerRenderingInternal\n\n/// Instantiate an imported React component\nlet inline from<'P> (com: ComponentClass<'P>) (props: 'P) (children: ReactElement seq): ReactElement =\n    createElement(com, props, children)\n\n/// Instantiate a component from a type inheriting React.Component\n/// Example: `ofType<MyComponent,_,_> { myProps = 5 } []`\nlet inline ofType<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(jsConstructor<'T>, props, children)\n#else\n    createServerElement(typeof<'T>, props, children, ServerElementType.Component)\n#endif\n\n\n/// OBSOLETE: Use `ofType`\n[<System.Obsolete(\"Use ofType\")>]\nlet inline com<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n    ofType<'T, 'P, 'S> props children\n\n/// Instantiate a stateless component from a function\n/// Example:\n/// ```\n/// let Hello (p: MyProps) = div [] [ofString (\"Hello \" + p.name)]\n/// ofFunction Hello { name = \"Maxime\" } []\n/// ```\nlet inline ofFunction<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(f, props, children)\n#else\n    createServerElementByFn(f, props, children)\n#endif\n\n/// OBSOLETE: Use `ofFunction`\n[<System.Obsolete(\"Use ofFunction\")>]\nlet inline fn<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n    ofFunction f props children\n\n/// Instantiate an imported React component. The first two arguments must be string literals, \"default\" can be used for the first one.\n/// Example: `ofImport \"Map\" \"leaflet\" { x = 10; y = 50 } []`\nlet inline ofImport<'P> (importMember: string) (importPath: string) (props: 'P) (children: ReactElement seq): ReactElement =\n    createElement(import importMember importPath, props, children)\n\n#if FABLE_COMPILER\n/// Alias of `ofString`\nlet inline str (s: string): ReactElement = unbox s\n\n/// Cast a string to a React element (erased in runtime)\nlet inline ofString (s: string): ReactElement = unbox s\n\n/// Cast an option value to a React element (erased in runtime)\nlet inline ofOption (o: ReactElement option): ReactElement =\n    match o with Some o -> o | None -> null // Option.toObj(o)\n\n/// OBSOLETE: Use `ofOption`\n[<System.Obsolete(\"Use ofOption\")>]\nlet inline opt (o: ReactElement option): ReactElement = ofOption o\n\n/// Cast an int to a React element (erased in runtime)\nlet inline ofInt (i: int): ReactElement = unbox i\n\n/// Cast a float to a React element (erased in runtime)\nlet inline ofFloat (f: float): ReactElement = unbox f\n\n/// Returns a list **from .render() method**\nlet inline ofList (els: ReactElement list): ReactElement = unbox(List.toArray els)\n\n/// Returns an array **from .render() method**\nlet inline ofArray (els: ReactElement array): ReactElement = unbox els\n\n#else\n/// Alias of `ofString`\nlet inline str (s: string): ReactElement = HTMLNode.Text s :> ReactElement\n\n/// Cast a string to a React element (erased in runtime)\nlet inline ofString (s: string): ReactElement = str s\n\n/// Cast an option value to a React element (erased in runtime)\nlet inline ofOption (o: ReactElement option): ReactElement =\n    match o with Some o -> o | None -> null // Option.toObj(o)\n\n/// OBSOLETE: Use `ofOption`\n[<System.Obsolete(\"Use ofOption\")>]\nlet inline opt (o: ReactElement option): ReactElement = ofOption o\n\n/// Cast an int to a React element (erased in runtime)\nlet inline ofInt (i: int): ReactElement = HTMLNode.RawText (string i) :> ReactElement\n\n/// Cast a float to a React element (erased in runtime)\nlet inline ofFloat (f: float): ReactElement = HTMLNode.RawText (string f) :> ReactElement\n\n/// Returns a list **from .render() method**\nlet inline ofList (els: ReactElement list): ReactElement = HTMLNode.List els :> ReactElement\n\n/// Returns an array **from .render() method**\nlet inline ofArray (els: ReactElement array): ReactElement = HTMLNode.List els :> ReactElement\n\n#endif\n\n\n/// Instantiate a DOM React element\nlet inline domEl (tag: string) (props: IHTMLProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n/// Instantiate a DOM React element (void)\nlet inline voidEl (tag: string) (props: IHTMLProp seq) : ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, [])\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), [], ServerElementType.Tag)\n#endif\n\n/// Instantiate an SVG React element\nlet inline svgEl (tag: string) (props: IProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n/// Instantiate a React fragment\nlet inline fragment (props: IFragmentProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(jsConstructor<Fragment>, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(typeof<Fragment>, (props |> Seq.cast<IProp>), children, ServerElementType.Fragment)\n#endif\n\n// Standard elements\nlet inline a b c = domEl \"a\" b c\nlet inline abbr b c = domEl \"abbr\" b c\nlet inline address b c = domEl \"address\" b c\nlet inline article b c = domEl \"article\" b c\nlet inline aside b c = domEl \"aside\" b c\nlet inline audio b c = domEl \"audio\" b c\nlet inline b b' c = domEl \"b\" b' c\nlet inline bdi b c = domEl \"bdi\" b c\nlet inline bdo b c = domEl \"bdo\" b c\nlet inline big b c = domEl \"big\" b c\nlet inline blockquote b c = domEl \"blockquote\" b c\nlet inline body b c = domEl \"body\" b c\nlet inline button b c = domEl \"button\" b c\nlet inline canvas b c = domEl \"canvas\" b c\nlet inline caption b c = domEl \"caption\" b c\nlet inline cite b c = domEl \"cite\" b c\nlet inline code b c = domEl \"code\" b c\nlet inline colgroup b c = domEl \"colgroup\" b c\nlet inline data b c = domEl \"data\" b c\nlet inline datalist b c = domEl \"datalist\" b c\nlet inline dd b c = domEl \"dd\" b c\nlet inline del b c = domEl \"del\" b c\nlet inline details b c = domEl \"details\" b c\nlet inline dfn b c = domEl \"dfn\" b c\nlet inline dialog b c = domEl \"dialog\" b c\nlet inline div b c = domEl \"div\" b c\nlet inline dl b c = domEl \"dl\" b c\nlet inline dt b c = domEl \"dt\" b c\nlet inline em b c = domEl \"em\" b c\nlet inline fieldset b c = domEl \"fieldset\" b c\nlet inline figcaption b c = domEl \"figcaption\" b c\nlet inline figure b c = domEl \"figure\" b c\nlet inline footer b c = domEl \"footer\" b c\nlet inline form b c = domEl \"form\" b c\nlet inline h1 b c = domEl \"h1\" b c\nlet inline h2 b c = domEl \"h2\" b c\nlet inline h3 b c = domEl \"h3\" b c\nlet inline h4 b c = domEl \"h4\" b c\nlet inline h5 b c = domEl \"h5\" b c\nlet inline h6 b c = domEl \"h6\" b c\nlet inline head b c = domEl \"head\" b c\nlet inline header b c = domEl \"header\" b c\nlet inline hgroup b c = domEl \"hgroup\" b c\nlet inline html b c = domEl \"html\" b c\nlet inline i b c = domEl \"i\" b c\nlet inline iframe b c = domEl \"iframe\" b c\nlet inline ins b c = domEl \"ins\" b c\nlet inline kbd b c = domEl \"kbd\" b c\nlet inline label b c = domEl \"label\" b c\nlet inline legend b c = domEl \"legend\" b c\nlet inline li b c = domEl \"li\" b c\nlet inline main b c = domEl \"main\" b c\nlet inline map b c = domEl \"map\" b c\nlet inline mark b c = domEl \"mark\" b c\nlet inline menu b c = domEl \"menu\" b c\nlet inline meter b c = domEl \"meter\" b c\nlet inline nav b c = domEl \"nav\" b c\nlet inline noscript b c = domEl \"noscript\" b c\nlet inline ``object`` b c = domEl \"object\" b c\nlet inline ol b c = domEl \"ol\" b c\nlet inline optgroup b c = domEl \"optgroup\" b c\nlet inline option b c = domEl \"option\" b c\nlet inline output b c = domEl \"output\" b c\nlet inline p b c = domEl \"p\" b c\nlet inline picture b c = domEl \"picture\" b c\nlet inline pre b c = domEl \"pre\" b c\nlet inline progress b c = domEl \"progress\" b c\nlet inline q b c = domEl \"q\" b c\nlet inline rp b c = domEl \"rp\" b c\nlet inline rt b c = domEl \"rt\" b c\nlet inline ruby b c = domEl \"ruby\" b c\nlet inline s b c = domEl \"s\" b c\nlet inline samp b c = domEl \"samp\" b c\nlet inline script b c = domEl \"script\" b c\nlet inline section b c = domEl \"section\" b c\nlet inline select b c = domEl \"select\" b c\nlet inline small b c = domEl \"small\" b c\nlet inline span b c = domEl \"span\" b c\nlet inline strong b c = domEl \"strong\" b c\nlet inline style b c = domEl \"style\" b c\nlet inline sub b c = domEl \"sub\" b c\nlet inline summary b c = domEl \"summary\" b c\nlet inline sup b c = domEl \"sup\" b c\nlet inline table b c = domEl \"table\" b c\nlet inline tbody b c = domEl \"tbody\" b c\nlet inline td b c = domEl \"td\" b c\nlet inline textarea b c = domEl \"textarea\" b c\nlet inline tfoot b c = domEl \"tfoot\" b c\nlet inline th b c = domEl \"th\" b c\nlet inline thead b c = domEl \"thead\" b c\nlet inline time b c = domEl \"time\" b c\nlet inline title b c = domEl \"title\" b c\nlet inline tr b c = domEl \"tr\" b c\nlet inline u b c = domEl \"u\" b c\nlet inline ul b c = domEl \"ul\" b c\nlet inline var b c = domEl \"var\" b c\nlet inline video b c = domEl \"video\" b c\n\n// Void element\nlet inline area b = voidEl \"area\" b\nlet inline ``base`` b = voidEl \"base\" b\nlet inline br b = voidEl \"br\" b\nlet inline col b = voidEl \"col\" b\nlet inline embed b = voidEl \"embed\" b\nlet inline hr b = voidEl \"hr\" b\nlet inline img b = voidEl \"img\" b\nlet inline input b = voidEl \"input\" b\nlet inline keygen b = voidEl \"keygen\" b\nlet inline link b = voidEl \"link\" b\nlet inline menuitem b = voidEl \"menuitem\" b\nlet inline meta b = voidEl \"meta\" b\nlet inline param b = voidEl \"param\" b\nlet inline source b = voidEl \"source\" b\nlet inline track b = voidEl \"track\" b\nlet inline wbr b = voidEl \"wbr\" b\n\n// SVG elements\nlet inline svg b c = svgEl \"svg\" b c\nlet inline circle b c = svgEl \"circle\" b c\nlet inline clipPath b c = svgEl \"clipPath\" b c\nlet inline defs b c = svgEl \"defs\" b c\nlet inline ellipse b c = svgEl \"ellipse\" b c\nlet inline g b c = svgEl \"g\" b c\nlet inline image b c = svgEl \"image\" b c\nlet inline line b c = svgEl \"line\" b c\nlet inline linearGradient b c = svgEl \"linearGradient\" b c\nlet inline mask b c = svgEl \"mask\" b c\nlet inline path b c = svgEl \"path\" b c\nlet inline pattern b c = svgEl \"pattern\" b c\nlet inline polygon b c = svgEl \"polygon\" b c\nlet inline polyline b c = svgEl \"polyline\" b c\nlet inline radialGradient b c = svgEl \"radialGradient\" b c\nlet inline rect b c = svgEl \"rect\" b c\nlet inline stop b c = svgEl \"stop\" b c\nlet inline text b c = svgEl \"text\" b c\nlet inline tspan b c = svgEl \"tspan\" b c\n\n// Class list helpers\nlet classBaseList std classes =\n    classes\n    |> List.fold (fun complete -> function | (name,true) -> complete + \" \" + name | _ -> complete) std\n    |> ClassName\n\nlet classList classes = classBaseList \"\" classes\n\n/// Finds a DOM element by its ID and mounts the React element there\nlet inline mountById (domElId: string) (reactEl: ReactElement): unit =\n    ReactDom.render(reactEl, Browser.document.getElementById(domElId))\n\n/// Finds the first DOM element matching a CSS selector and mounts the React element there\nlet inline mountBySelector (domElSelector: string) (reactEl: ReactElement): unit =\n    ReactDom.render(reactEl, Browser.document.querySelector(domElSelector))\n\ntype Fable.Import.React.FormEvent with\n    /// Access the value from target\n    /// Equivalent to `unbox<string> this.target?value`\n    member this.Value =\n        unbox<string> this.target?value\n\n// Helpers for ReactiveComponents (see #44)\nmodule ReactiveComponents =\n    type Props<'P, 'S, 'Msg> = {\n        key: string\n        props: 'P\n        update: 'Msg -> 'S -> 'S\n        view: Model<'P, 'S> -> ('Msg->unit) -> ReactElement\n        init: 'P -> 'S\n    }\n\n    and State<'T> = {\n        value: 'T\n    }\n\n    and Model<'P, 'S> = {\n        props: 'P\n        state: 'S\n        children: ReactElement[]\n    }\n\nopen ReactiveComponents\n\ntype ReactiveCom<'P, 'S, 'Msg>(initProps) =\n    inherit Component<Props<'P, 'S, 'Msg>, State<'S>>(initProps)\n    do base.setInitState { value = initProps.init(initProps.props) }\n\n    override this.render() =\n        let model =\n            { props = this.props.props\n              state = this.state.value\n              children = this.children }\n        this.props.view model (fun msg ->\n            let newState = this.props.update msg this.state.value\n            this.setState({ value = newState }))\n\n/// Renders a stateful React component from functions similar to Elmish\n///  * `init` - Initializes component state with given props\n///  * `update` - Updates the state when `dispatch` is triggered\n///  * `view` - Render function, receives a `ReactiveComponents.Model` object and a `dispatch` function\n///  * `key` - The key is necessary to identify React elements in a list, an empty string can be passed otherwise\n///  * `props` - External properties passed to the component each time it's rendered, usually from its parent\n///  * `children` - A list of children React elements\nlet reactiveCom<'P, 'S, 'Msg>\n        (init: 'P -> 'S)\n        (update: 'Msg -> 'S -> 'S)\n        (view: Model<'P, 'S> -> ('Msg->unit) -> ReactElement)\n        (key: string)\n        (props: 'P)\n        (children: ReactElement seq): ReactElement =\n    ofType<ReactiveCom<'P, 'S, 'Msg>, Props<'P, 'S, 'Msg>, State<'S>>\n        { key=key; props=props; update=update; view=view; init=init }\n        children\n","namespace Fabulosa.Extensions\n\nopen Fable.Helpers.React.Props\n\nmodule Fable =\n    module Helpers =\n        module React =\n            module Props =\n                type HTMLProps = IHTMLProp list\n                \n                let nonEmpty =\n                    function\n                    | \"\" -> None\n                    | value -> Some value\n\n                let concatStrings =\n                    List.choose nonEmpty\n                    >> String.concat \" \"\n\n                let htmlAttrs (prop: IProp) =\n                    match prop with\n                    | :? HTMLAttr as htmlAttr -> Some htmlAttr\n                    | _ -> None\n\n                let tryCast (prop: IHTMLProp) =\n                    try  prop :?> HTMLAttr with e -> Id \"\"\n\n                let combineProp (prop: IHTMLProp) (htmlProp: IHTMLProp) =\n                    match tryCast prop , tryCast htmlProp with\n                    | ClassName a, ClassName b ->\n                        concatStrings [a;b]\n                        |> ClassName\n                        :> IHTMLProp\n                        |> Some\n                    | _ -> None\n                    \n                let addPropOld (prop: IHTMLProp) (htmlProps: IHTMLProp list) =\n                    if htmlProps |> List.length > 0 then\n                        let filtered = htmlProps |> List.filter (combineProp prop >> Option.isNone)\n                        let combined = htmlProps |> List.choose (combineProp prop)\n                        if combined |> List.length > 0 then\n                            List.append combined filtered\n                        else\n                            prop :: filtered\n                    else [prop]\n\n                let addPropsOld (props: HTMLProps) (htmlProps: HTMLProps) =\n                    props |> List.fold\n                        (fun acc prop -> acc |> addPropOld prop) htmlProps\n\n                type Unmerged =\n                    Unmerged of HTMLProps\n\n                let className text = ClassName text :> IHTMLProp\n\n                let unit = Unmerged\n\n                let addProp (prop: IHTMLProp) (Unmerged htmlProps) =\n                    Unmerged (prop :: htmlProps)\n\n                let addProps (other: HTMLProps) (Unmerged existing) = \n                    other |> List.fold\n                        (fun acc prop -> addProp prop acc) (Unmerged existing)\n                \n                let addPropOpt (prop: IHTMLProp option) propList =\n                    match prop with\n                    | Some p -> addProp p propList\n                    | None -> propList\n                \n                let addOptionOrElse (get: IHTMLProp -> IHTMLProp option) (orElse: IHTMLProp) (unmerged: Unmerged) =\n                    let (Unmerged props) = unmerged\n                    match List.tryPick get props with \n                    | Some result ->  addProp result unmerged \n                    | None -> addProp orElse unmerged\n\n                let merge (unmerged: Unmerged) =\n                    let propToClassNames =\n                        List.choose htmlAttrs\n                        >> List.choose\n                            (function\n                             | ClassName a -> Some a\n                             | _ -> None)\n                    let withoutClassNames =\n                        List.filter\n                            (fun (prop: IHTMLProp) ->\n                                match prop with\n                                | :? HTMLAttr as htmlAttr ->\n                                    match htmlAttr with\n                                    | ClassName _ -> false\n                                    | _ -> true\n                                | _ -> true)\n                    let (Unmerged props) = unmerged\n                    let classNames = propToClassNames props\n                    let otherProps = withoutClassNames props\n                    (classNames\n                     |> String.concat \" \"\n                     |> ClassName\n                     :> IHTMLProp)\n                    :: otherProps\n\n                let map (mapping: IHTMLProp -> IHTMLProp) (unmerged: Unmerged) =\n                    let (Unmerged props) = unmerged\n                    List.map mapping props |> Unmerged\n                    \n                \n                    \n","﻿namespace Fabulosa\n\nmodule Button =\n\n    open Fable.Import.React\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type Kind =\n        | Default\n        | Primary\n        | Link\n\n    type Color =\n        | Success\n        | Error\n\n    type State =\n        | Disabled\n        | Active\n        | Loading\n\n    type Shape =\n        | Squared\n        | Round\n\n    type ButtonOptional =\n        | Kind of Kind\n        | Color of Color\n        | State of State\n        | Shape of Shape\n        interface P.IHTMLProp\n\n    type Button =\n        P.HTMLProps * ReactElement list\n\n    type Nested =\n        Button of Button\n\n    let private propToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? ButtonOptional as opt ->\n            match opt with\n            | Kind Default -> \"btn-default\"\n            | Kind Primary -> \"btn-primary\"\n            | Kind Link -> \"btn-link\"\n            | Color Success -> \"btn-success\"\n            | Color Error -> \"btn-error\"\n            | State Disabled -> \"disabled\"\n            | State Loading -> \"loading\"\n            | State Active -> \"active\"\n            | Shape Squared -> \"btn-action\"\n            | Shape Round -> \"btn-action circle\"\n            |> P.className\n        | :? FabulosaFormSize as opt ->\n            match opt with\n            | Size Small -> \"btn-sm\"\n            | Size Large -> \"btn-lg\"\n            |> P.className\n        | _ -> prop\n\n    let private createButton renderer ((opt, chi): Button) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"btn\")\n        |> P.map propToClassName\n        |> P.merge\n        |> renderer <| chi\n\n    let button = createButton R.button\n\n    let anchor = createButton R.a","module Renderer\n\nmodule R = Fable.Helpers.React\n\nlet tryMount id elem =\n    try\n        R.mountById id elem\n    with\n        | _ -> ()","module IndexPage\n\n\nopen Fable.Import.React\nopen Fabulosa.Image\nopen Fabulosa.Button\nopen Fabulosa.Tooltip\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Renderer\n\n(*** hide ***)\ntype OptionalProps = unit\ntype RequiredPropsTuple = unit\ntype ChildrenTuple = unit\n//Could refer the actual types, but this is just easier for docs purposes.\ntype HTMLProps = unit \ntype IHTMLProp = interface end \ntype RequiredProps = unit\ntype Children = unit   \n\n(*** define: anchor ***)\nlet fabulous =\n    anchor\n        ([ Kind Primary\n           P.Href \"button.html\" ],\n         [ R.str \"Fabulosa Anchor-Button\" ])\n(*** hide ***)\nlet render () =\n    tryMount \"anchor-demo\" fabulous\n    \n(*** define: button-type ***)\nlet buttonRenderingFn: Button -> ReactElement = Fabulosa.Button.button    \n\n(*** define: button-rendering ***)\nlet buttonData: Button = ([ Kind Primary ], [ R.str \"Default\" ])\nlet renderedElement: ReactElement = button buttonData\n\n\n\n(*** define: component-pattern ***)\ntype MyComponent = OptionalProps list * RequiredPropsTuple * ChildrenTuple\n\n(*** define: tooltip-type-example ***)\ntype Tooltip = HTMLProps * TooltipContent * TooltipChildren\n\n(*** define: tooltip-optional-params ***)\ntype TooltipOptional =\n    | Orientation of Orientation\n    interface IHTMLProp\n\n(*** define: required-props ***)\ntype MyComponentType = OptionalProps * RequiredProps * Children\n\n(*** define: missing-required-props ***)\ntype MySecondComponentType = OptionalProps * Children\n\n(*** define: children-example ***)\ntype FigureChildren =\n    | Image of Image\n            \ntype Figure = HTMLProps * FigureChildren\n\n(**\n<div id=\"intro\">\n\n<h2 class=\"s-title\">Intro to Fabulosa</h2>\n\nWe strongly recommend reading the whole section.\n\n</div>\n\n<div id=\"installation\">\n\n<h2 class=\"s-title\">Installation</h2>\n\nDocumentation not ready yet.\n\n</div>\n\n*)\n\n(**\n\n<div id=\"getting-started\">\n\n<h2 class=\"s-title\">Getting Started</h2>\n\nCreating a fabulous button\n\n*)\n(*** include: anchor ***)\n(**\n\n<div class=\"demo\" id=\"anchor-demo\"></div>\n\nThis is quite a simple example. Anchor itself is quite simple and it just takes a list of optional parameters followed by\nthe anchors' children. More details on components at <a href=\"#complex-example\">Anatomy of a Component</a>\n\n</div>\n\n<div id=\"anatomy-of-a-component\">\n\n<h2 class=\"s-title\">Anatomy of a Component</h2>\n \nComponent interfaces are quite simple to understand in Fabulosa but also, if you are using other types of commponents\n available in the Fable Community, you want to check this out because Fabulosa's work conceptually different.\n\nEvery component is defined in its own module inside of Fabulosa. \nWe recommend opening each module individually to avoid verbosity such as in <code>open Fabulosa.Button</code>\n\nThere are two main things you can expect to find inside of each module: \n - a rendering function named after the component name\n - the component type definition\n \nThe rendering function takes only one parameter that is the type and returns a ReactElement.\nThus, in the button module, one will find the button function with the following type:\n*)\n(*** include: button-type ***)\n(**\nand it can be used like:\n*)\n(*** include: button-rendering ***)\n\n(**\n<br/>\n\n### The Types\n\nEvery Component in Fabulosa can be defined in term of its type. So, a button component will have a Type \n<code>Button</code> associated with it, breakcrumb will have a <code>Breadcrumb</code> and so on.\n\nThere is a pattern to these types and it goes as follows:\n*)\n(*** include: component-pattern ***)\n\n(**\n<br/>\n\n#### Optional Parameters\n\nOptinalParameter list will contain a list of IHTMLProps(these are the same defined in fable-react) and additional OptionalParameters to that component.\nFor instance a modal component type <a href=\"https://github.com/tmonte/fabulosa/blob/d78ca0f41a7390c390436c9058d225c784435a12/src/Fabulosa/Components/Tooltip.fs#L32\">straight from the source</a> is defined as\n*)\n\n(*** include: tooltip-type-example ***)\n\n(**\n\nwhere HTMLProps is alias to IHTMLProp list. On top of that, all of the <b>optional parameters will implement the IHTMLProp interface</b> in Fabulosa as seen <a href=\"https://github.com/tmonte/fabulosa/blob/d78ca0f41a7390c390436c9058d225c784435a12/src/Fabulosa/Components/Tooltip.fs#L28\">here</a>     \n*)\n(*** include: tooltip-optional-params ***)\n(**\n<br />\n\n#### Required Props\n\nRequired props are defined as tuple that sits in between the list of optional props and the children. \n*)\n(*** include: required-props ***)\n(**\n\nIn case a component has no required props, the component interface will be composed of a tuple of only 2 items\n*)\n(*** include: missing-required-props ***)\n(**\n\n#### Children\n\nThe biggest difference in fabulosa and other libraries is arguably the way we treat our children.\nMost importantly, they will reference internal types over ReactElements as much as possible. The main diffence we we get by doing this is the fact that we believe in the manipulation of the data in destination components and we don't believe that that is easily achievable after componets are rendered. On the other hand, manipulating data is straight forward.\nLet's take the Figure type for example\n\n*)\n(*** include: children-example ***)\n(**\n\nMaking the dependency of Figure on Image and not a ReactElement, allows us a few things:\n- Guarantee that it is a image that gets rendered\n- Easy manipulate images attributes inside of Figure if necessary\n- Simpler usage of Figure itself when trying to render it\n- Future proof, as this pattern allows us more flexibility to future endeavors.\n\nAlso note that not all components have Children and in those case they just do not make part of the tuple defining the component type.  \n\n</div>\n\n<div id=\"theming\">\n\n<h2 class=\"s-title\">Theming</h2>\n\nDocumentation not ready yet.\n\n</div>\n\n*)\n\n","﻿namespace Fabulosa\n\nmodule Icon =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Kind =\n        | ArrowUp\n        | ArrowRight\n        | ArrowDown\n        | ArrowLeft\n        | Upward\n        | Forward\n        | Downward\n        | Back\n        | Caret\n        | Menu\n        | Apps\n        | MoreHoriz\n        | MoreVert\n        | ResizeHoriz\n        | ResizeVert\n        | Plus\n        | Minus\n        | Cross\n        | Check\n        | Stop\n        | Shutdown\n        | Refresh\n        | Search\n        | Flag\n        | Bookmark\n        | Edit\n        | Delete\n        | Share\n        | Download\n        | Upload\n        | Mail\n        | People\n        | Message\n        | Photo\n        | Time\n        | Location\n        | Link\n        | Emoji\n        | Loading\n\n    type Size =\n        | X2\n        | X3\n        | X4\n\n    type IconOptional =\n        | Size of Size\n        interface IHTMLProp\n\n    type IconRequired =\n        Kind of Kind\n\n    type Icon =\n        HTMLProps * IconRequired\n\n    let private kind =\n        function\n        | ArrowUp -> \"icon-arrow-up\"\n        | ArrowRight -> \"icon-arrow-right\"\n        | ArrowDown -> \"icon-arrow-down\"\n        | ArrowLeft -> \"icon-arrow-left\"\n        | Upward -> \"icon-upward\"\n        | Forward -> \"icon-forward\"\n        | Downward -> \"icon-downward\"\n        | Back -> \"icon-back\"\n        | Caret -> \"icon-caret\"\n        | Menu -> \"icon-menu\"\n        | Apps -> \"icon-apps\"\n        | MoreHoriz -> \"icon-more-horiz\"\n        | MoreVert -> \"icon-more-vert\"\n        | ResizeHoriz -> \"icon-resize-horiz\"\n        | ResizeVert -> \"icon-resize-vert\"\n        | Plus -> \"icon-plus\"\n        | Minus -> \"icon-minus\"\n        | Cross -> \"icon-cross\"\n        | Check -> \"icon-check\"\n        | Stop -> \"icon-stop\"\n        | Shutdown -> \"icon-shutdown\"\n        | Refresh -> \"icon-refresh\"\n        | Search -> \"icon-search\"\n        | Flag -> \"icon-flag\"\n        | Bookmark -> \"icon-bookmark\"\n        | Edit -> \"icon-edit\"\n        | Delete -> \"icon-delete\"\n        | Share -> \"icon-share\"\n        | Download -> \"icon-download\"\n        | Upload -> \"icon-upload\"\n        | Mail -> \"icon-mail\"\n        | People -> \"icon-people\"\n        | Message -> \"icon-message\"\n        | Photo -> \"icon-photo\"\n        | Time -> \"icon-time\"\n        | Location -> \"icon-location\"\n        | Link -> \"icon-link\"\n        | Emoji -> \"icon-emoji\"\n        | Loading -> \"loading\"\n        >> ClassName\n\n    let private size (prop: IHTMLProp) =\n        match prop with\n        | :? IconOptional as opt ->\n            match opt with\n            | Size X2 -> \"icon-2x\"\n            | Size X3 -> \"icon-3x\"\n            | Size X4 -> \"icon-4x\"\n            |> ClassName\n            :> IHTMLProp\n        | _ -> prop\n\n    let icon ((opt, (Kind req)): Icon) =\n        Unmerged opt\n        |> addProps\n            [ ClassName \"icon\"\n              kind req ]\n        |> map size\n        |> merge\n        |> R.i <| []\n","import { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, constructor, fields, cases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.constructor = constructor;\n        this.fields = fields;\n        this.cases = cases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics() : [];\n}\nexport function equals(t1, t2) {\n    return t1.fullname === t2.fullname\n        && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function type(fullname, generics) {\n    return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n    return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function union(fullname, generics, constructor, cases) {\n    const t = new TypeInfo(fullname, generics, constructor, null, () => cases().map((x, i) => typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, () => generics);\n}\nexport function delegate(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, () => generics);\n}\nexport function lambda(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", () => [argType, returnType]);\n}\nexport function option(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", () => [generic]);\n}\nexport function list(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", () => [generic]);\n}\nexport function array(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", () => [generic]);\n}\nexport const obj = new TypeInfo(\"System.Object\");\nexport const unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char = new TypeInfo(\"System.Char\");\nexport const string = new TypeInfo(\"System.String\");\nexport const bool = new TypeInfo(\"System.Boolean\");\nexport const int8 = new TypeInfo(\"System.SByte\");\nexport const uint8 = new TypeInfo(\"System.Byte\");\nexport const int16 = new TypeInfo(\"System.Int16\");\nexport const uint16 = new TypeInfo(\"System.UInt16\");\nexport const int32 = new TypeInfo(\"System.Int32\");\nexport const uint32 = new TypeInfo(\"System.UInt32\");\nexport const float32 = new TypeInfo(\"System.Single\");\nexport const float64 = new TypeInfo(\"System.Double\");\nexport const decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics() : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map(fullName).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    return isArray(t) ? t.generics()[0] : null;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics().length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, () => t.generics().map(() => obj));\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t)) {\n        return t.generics();\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t)) {\n        const gen = t.generics();\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t.cases != null;\n}\nexport function isRecord(t) {\n    return t.fields != null;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields.map((t, i) => [\"Data\" + i, t]);\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return new uci.declaringType.constructor(uci.tag, uci.name, ...values);\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return new t.constructor(...values);\n}\nexport function makeTuple(values, t) {\n    return values;\n}\n","﻿namespace Fabulosa\n\nmodule Table =\n\n    open Fable.Import.React\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type TableColumn = HTMLProps * ReactElement list\n\n    let tableColumn ((opt, chi): TableColumn) =\n        R.td opt chi\n\n    type TableTitleColumn = HTMLProps * ReactElement list\n\n    let tableTitleColumn ((opt, chi): TableTitleColumn) =\n        R.th opt chi\n\n    type TableRowChild =\n        | Column of TableColumn\n        | TitleColumn of TableTitleColumn\n\n    type TableRowChildren =\n        TableRowChild list\n\n    type TableRow =\n        HTMLProps * TableRowChildren\n\n    let private rowPropToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaActive as opt ->\n            match opt with\n            | Active -> className \"active\"\n        | _ -> prop\n        \n    let tableRow ((opt, chi): TableRow) =\n        Unmerged opt\n        |> map rowPropToClassName\n        |> merge\n        |> R.tr\n        <| List.map\n            (function\n             | Column col -> tableColumn col\n             | TitleColumn col -> tableTitleColumn col)\n            chi\n\n    type TableHeadOrBodyChild =\n        Row of TableRow\n\n    type TableHead =\n        HTMLProps * TableHeadOrBodyChild list\n\n    let tableHead ((opt, chi): TableHead) =\n        R.thead\n            opt\n            (List.map (fun (Row row) -> tableRow row) chi)\n            \n    type TableBody =\n        HTMLProps * TableHeadOrBodyChild list\n\n    let tableBody ((opt, chi): TableBody) =\n        R.tbody\n            opt\n            (List.map (fun (Row row) -> tableRow row) chi)\n\n    type TableKind =\n        | Striped\n        | Hover\n\n    type TableOptional =\n        | Kind of TableKind\n        interface IHTMLProp\n\n    type TableChild =\n        | Head of TableHead\n        | Body of TableBody\n\n    type Table =\n        HTMLProps * TableChild list\n\n    let private tablePropToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? TableOptional as opt ->\n            match opt with\n            | Kind Striped -> className \"table-striped\"\n            | Kind Hover -> className \"table-hover\"\n        | _ -> prop\n\n    let table ((opt, chi): Table) =\n        Unmerged opt\n        |> addProp (ClassName \"table\")\n        |> map tablePropToClassName\n        |> merge\n        |> R.table\n        <| List.map\n            (function\n             | Head head -> tableHead head\n             | Body body -> tableBody body)\n            chi\n","namespace Fabulosa.Docs\n\nmodule rec PropTable =\n    open System.Reflection\n    open FSharp.Reflection\n    open Fable.Import.React\n    open Fable.Helpers.React.Props\n    open Fabulosa.Table\n    module R = Fable.Helpers.React\n    module P = R.Props\n        \n    let flip f a b = f b a\n    \n    module SystemType =\n        let name (typ: PropertyInfo) = typ.Name\n\n    let typeMatches checker systemType =\n            checker systemType\n            |> function\n               | true -> Some systemType\n               | false -> None\n\n    let (|Union|_|) = typeMatches FSharpType.IsUnion\n\n    let (|Tuple|_|) = typeMatches FSharpType.IsTuple\n\n    let (|List|_|) (systemType: System.Type) =\n        match systemType.Name.Contains \"FSharpList\" with\n        | true -> Some \"list\"\n        | false -> None\n\n    let (|Option|_|) (systemType: System.Type) =\n        match systemType.Name.Contains \"FSharpOption\" with\n        | true -> Some \"option\"\n        | false -> None\n    \n    let rec systemTypeName (aType: System.Type) =\n        match aType with \n            | (List strType) | (Option strType) ->\n                aType.GenericTypeArguments\n                |> List.ofArray\n                |> List.map systemTypeName\n                |> flip List.append [ strType ]\n                |> List.reduce (fun x -> (fun y -> x + \" \" + y))\n            | Tuple tuple ->\n                tuple\n                |> FSharpType.GetTupleElements\n                |> Array.map systemTypeName\n                |> List.ofArray\n                |> String.concat \" * \"\n                |> (fun str -> \"(\" + str + \")\")\n            | option when option.Name = \"FSharpFunc`2\" -> \n                option.GenericTypeArguments\n                |> List.ofArray\n                |> List.map systemTypeName\n                |> List.reduce (fun x -> (fun y -> x + \" -> \" + y))\n            | t ->\n                t.Name\n\n    let rec describeType (propType: System.Type) =\n        match propType with\n        | Tuple propType ->\n            propType\n            |> FSharpType.GetTupleElements\n            |> Array.map systemTypeName\n            |> List.ofArray\n            |> String.concat \" * \"\n            |> (fun str -> \"(\" + str + \")\")\n        | Union propType ->\n            let cases = FSharpType.GetUnionCases propType\n            let more =\n                if Seq.length cases > 6\n                then \" | ...\"\n                else \"\"\n            (cases\n            |> Array.truncate 6\n            |> Array.map (fun c -> c.Name)\n            |> String.concat \" | \") + more\n        | _ -> systemTypeName propType\n\n    let getRecordPropFields aType (record: obj) = \n        let recordTypeFields = FSharpType.GetRecordFields aType\n        let fieldNames = recordTypeFields |> Array.map SystemType.name\n        let fieldPropertyTypes =\n            recordTypeFields\n            |> Array.map (fun propInfo -> propInfo.PropertyType)\n            |> Array.map describeType\n        record\n        |> FSharpValue.GetRecordFields\n        |> Array.zip3 fieldNames fieldPropertyTypes\n        |> List.ofArray \n        |> List.map (fun (x, y, _) -> R.str x, R.str y, R.str \"\")\n        \n    let getUnionPropFields (union: System.Type) kind = \n        FSharpType.GetUnionCases union\n        |> List.ofArray\n        |> List.collect\n            (fun case ->\n                let fields = case.GetFields()\n                let propTypes =\n                    fields\n                    |> Array.map (fun e -> e.PropertyType)\n                propTypes\n                |> Array.map\n                    (fun typ -> (case.Name, describeType typ))\n                |> Array.map (fun (a, b) ->\n                    (R.str a, R.str b, R.str kind))\n                |> List.ofArray\n            )\n\n    let getTuplePropFields st (kind: string) =\n        FSharpType.GetTupleElements st\n        |> List.ofArray\n        |> List.collect (getFields kind)\n\n    let getFields (kind: string) = \n        function\n        | Union u -> getUnionPropFields u kind\n        | Tuple t -> getTuplePropFields t kind\n        | _ -> []\n\n    let toTableRow rowValue =\n        let (col1, col2, col3) = rowValue\n        Row ([],\n         [ Column ([], [ col1 ])\n           Column ([ Style [ WhiteSpace \"pre\" ] ], [ col2 ])\n           Column ([], [ col3 ]) ])\n\n    let renderTable rowValues =\n        table\n            ([ Kind Striped ],\n             [ Head ([],\n                 [ Row ([],\n                     [ TitleColumn ([ Style [ Width \"150px\"]], [ R.str \"Name\" ])\n                       TitleColumn ([], [ R.str \"Type\" ])\n                       TitleColumn ([], [ R.str \"Kind\" ]) ]) ])\n               Body ([],\n                   (rowValues |> List.map toTableRow)) ])\n\n    let propTable aType obj = getRecordPropFields aType obj |> renderTable \n\n    let unionPropTable union = getUnionPropFields union \"None\" |> renderTable\n\n    let paramTable optType reqType chiType =\n        let fields (typ: System.Type option) (kind: string) =\n            match typ with\n            | Some t -> getFields kind t\n            | None -> []\n        (fields optType \"IHTMLProp\" )\n        @ (fields reqType \"Required\")\n        @ (fields chiType \"Child\")\n        |> renderTable\n\n    let definition compType =\n        let name, def, _ =\n            getFields \"\" compType\n            |> List.head\n        R.p [ Style [\n            Padding \"10px\"\n            Background \"#fafaff\"\n            Color \"#5755d9\"\n            FontFamily \"\\\"SF Mono\\\", \\\"Segoe UI Mono\\\",\\\"Roboto Mono\\\",Menlo,Courier,monospace\"\n            FontSize \"10pt\"\n            FontWeight \"100\"] ] [\n            R.span [ Style [ TextTransform \"lowercase\" ] ] [ name ]\n            R.str \" \"\n            R.span [] [ def ] ]\n        ","﻿module ButtonPage\n\n\nopen Fabulosa.Docs\nopen Fabulosa.Icon\nopen Fabulosa.Button\nopen Fabulosa\nmodule R = Fable.Helpers.React\nopen Renderer\n\n(*** define: button-kind-sample ***)\nlet def = button ([], [ R.str \"Default\" ])\n\nlet primary = button ([ Kind Primary ], [ R.str \"Primary\" ])\n\nlet link = button ([ Kind Link ], [ R.str \"Link\" ])\n(*** define: button-size-sample ***)\nlet small = button ([ Size Small ], [ R.str \"Small\" ])\n\nlet medium = button ([], [ R.str \"Medium\" ])\n\nlet large = button ([ Size Large ], [ R.str \"Large\" ])\n(*** define: button-color-sample ***)\nlet success = button ([ Color Success ], [ R.str \"Success\" ])\n\nlet error = button ([ Color Error ], [ R.str \"Error\" ])\n(*** hide ***)\nlet icon = icon ([], IconRequired.Kind Plus)\n(*** define: button-format-sample ***)\nlet squared = button ([ Shape Squared ], [ icon ])\n\nlet round = button ([ Shape Round; Kind Primary ], [ icon ])\n(*** define: button-state-sample ***)\nlet disabled = button ([ State Disabled ], [ R.str \"Disabled\" ])\n\nlet active = button ([ State Button.Active ], [ R.str \"Active\" ])\n\nlet loading = button ([ State Loading ], [ R.str \"-------\" ])\n(*** hide ***)\nlet render () =\n    tryMount \"button-default-demo\" def\n    tryMount \"button-primary-demo\" primary\n    tryMount \"button-link-demo\" link\n    tryMount \"button-small-demo\" small\n    tryMount \"button-medium-demo\" medium\n    tryMount \"button-large-demo\" large\n    tryMount \"button-success-demo\" success\n    tryMount \"button-error-demo\" error\n    tryMount \"button-squared-demo\" squared\n    tryMount \"button-round-demo\" round\n    tryMount \"button-disabled-demo\" disabled\n    tryMount \"button-active-demo\" active\n    tryMount \"button-loading-demo\" loading\n    tryMount \"button-params-table\"\n        (PropTable.paramTable\n            (Some typeof<ButtonOptional>)\n            None\n            None)\n(**\n\n<div id=\"buttons\">\n\n<h2 class=\"s-title\">Buttons</h2>\n\nButtons include simple button styles for\nactions in different types and sizes.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"button-params-table\"></div>\n\n#### Kinds\n\nButtons can have kinds Default, Primary or Link.\n\n<div class=\"demo\">\n    <span id=\"button-default-demo\"></span>\n    <span id=\"button-primary-demo\"></span>\n    <span id=\"button-link-demo\"></span>\n</div>\n\n*)\n(*** include: button-kind-sample ***)\n(**\n\n#### Sizes\n\nButtons can have sizes Small or Large.\n\n<div class=\"demo\">\n    <span id=\"button-small-demo\"></span>\n    <span id=\"button-medium-demo\"></span>\n    <span id=\"button-large-demo\"></span>\n</div>\n\n*)\n(*** include: button-size-sample ***)\n(**\n\n#### Colors\n\nButtons can have colors for Success and Error.\n\n<div class=\"demo\">\n    <span id=\"button-success-demo\"></span>\n    <span id=\"button-error-demo\"></span>\n</div>\n\n*)\n(*** include: button-color-sample ***)\n(**\n\n#### Formats\n\nButtons can have formats of SquaredAction and RoundAction.\n\n<div class=\"demo\">\n    <span id=\"button-squared-demo\"></span>\n    <span id=\"button-round-demo\"></span>\n</div>\n\n*)\n(*** include: button-format-sample ***)\n(**\n\n#### States\n\nButtons can have states of SquaredAction and RoundAction.\n\n<div class=\"demo\">\n    <span id=\"button-disabled-demo\"></span>\n    <span id=\"button-active-demo\"></span>\n    <span id=\"button-loading-demo\"></span>\n</div>\n\n*)\n(*** include: button-state-sample ***)\n(**\n\n</div>\n\n*)\n","﻿namespace Fabulosa\n\nmodule rec Select =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type SelectOption = P.HTMLProps * FabulosaText\n\n    let selectOption ((opt, (Text txt)): SelectOption) =\n        R.option opt [ R.str txt ]\n\n    type SelectOptionGroupChild =\n        | Option of SelectOption\n\n    type SelectOptionGroup =\n        P.HTMLProps * SelectChild list\n\n    type SelectChild =\n        | Group of SelectOptionGroup\n        | Option of SelectOption\n\n    let selectOptionGroup ((opt, chi): SelectOptionGroup) =\n        R.optgroup opt\n            (Seq.map\n                (function\n                | Option opt -> selectOption opt\n                | Group grp -> selectOptionGroup grp)\n                chi)\n\n    type Select =\n        P.HTMLProps * SelectChild list\n\n    let private propToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? FabulosaFormSize as opt ->\n            match opt with\n            | Size Small -> \"select-sm\"\n            | Size Large -> \"select-lg\"\n            |> P.className\n        | _ -> prop\n\n    let select ((opt, chi): Select) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"form-select\")\n        |> P.map propToClassName\n        |> P.merge\n        |> R.select\n        <| Seq.map\n            (function\n             | Group g -> selectOptionGroup g\n             | Option o -> selectOption o)\n            chi\n","﻿namespace Fabulosa\n\nmodule Input =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type Input = P.HTMLProps\n\n    let private propToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? FabulosaFormSize as opt ->\n            match opt with\n            | Size Small -> \"input-sm\"\n            | Size Large -> \"input-lg\"\n            |> P.className\n        | _ -> prop\n\n    let input (opt: Input) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"form-input\")\n        |> P.map propToClassName\n        |> P.merge\n        |> R.input\n\nmodule IconInput =\n\n    open Fabulosa.Icon\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    module P = R.Props\n    open Input\n\n    type IconInputChildInput =\n        | Input of Input\n\n    type private IconInputChildIconChild =\n        | Icon of Icon\n\n    type IconInputChildIcon =\n        | LeftIcon of Icon\n        | RightIcon of Icon\n\n    type IconInput = P.HTMLProps * (IconInputChildIcon * IconInputChildInput)\n\n    let private childToClassName =\n        function\n        | LeftIcon li -> \"has-icon-left\"\n        | RightIcon ri -> \"has-icon-right\"\n        >> P.className\n\n    let private iconChild =\n        function\n        | LeftIcon li -> li\n        | RightIcon ri -> ri\n\n    let iconInput ((opt, (icn, (Input inp))): IconInput) =\n        let (icnOpt, icnReq) = iconChild icn\n        let className = childToClassName icn\n        let icn = \n            (P.Unmerged icnOpt\n            |> P.addProp (P.ClassName \"form-icon\")\n            |> P.merge, icnReq)\n        P.Unmerged opt\n        |> P.addProp className\n        |> P.merge\n        |> R.div\n        <| [ input inp\n             icon icn ]\n\nmodule InputGroup =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Button\n    module R = Fable.Helpers.React\n    open R.Props\n    open Input\n    open Fabulosa.Select\n    \n    type InputGroupAddonRight =\n        | OptButton of Button option\n\n    type InputGroupAddonLeft =\n        | OptText of string option\n        \n    type InputGroupChild =\n        | Input of Input\n        | Select of Select\n\n    type InputGroup =\n        HTMLProps * (InputGroupAddonLeft * InputGroupChild list * InputGroupAddonRight)\n\n    let private btn =\n        function\n        | OptButton (Some (opt, chi)) ->\n            button\n                (Unmerged opt\n                |> addProp (ClassName \"input-group-btn\")\n                |> merge, chi)\n        | _ -> R.ofOption None\n\n    let private txt =\n        function\n        | OptText (Some text) ->\n            R.span\n                [ ClassName \"input-group-addon\" ]\n                [ R.str text ]\n        | _ -> R.ofOption None\n\n    let private propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaFormInline as opt ->\n            match opt with\n            | Inline -> className \"input-inline\"\n        | _ -> prop\n\n    let inputGroup ((opt, (addl, chi, addr)): InputGroup) =\n        Unmerged opt\n        |> addProp (ClassName \"input-group\")\n        |> map propToClassName\n        |> merge\n        |> R.div\n        <| [ txt addl\n             R.fragment\n               []\n               (Seq.map\n                  (function\n                   | Input i -> input i\n                   | Select s -> select s)\n                  chi)\n             btn addr ]\n","﻿namespace Fabulosa\n\nmodule Label =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type Label = P.HTMLProps * FabulosaText\n\n    let private propToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? FabulosaFormSize as opt ->\n            match opt with\n            | Size Small -> \"label-sm\"\n            | Size Large -> \"label-lg\"\n            |> P.className\n        | _ -> prop\n\n    let label ((opt, (Text txt)): Label) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"form-label\")\n        |> P.map propToClassName\n        |> P.merge\n        |> R.label\n        <| [ R.str txt ]\n","﻿namespace Fabulosa\n\nmodule Radio =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Radio = HTMLProps * FabulosaText\n\n    let private isInline (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaFormInline as opt ->\n            match opt with\n            | Inline -> true\n        | _ -> false\n\n    let propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaFormInline as opt ->\n            match opt with\n            | Inline -> className \"form-inline\"\n        | _ -> prop\n\n    let radio ((opt, Text txt): Radio) =\n        let withInline, withoutInline =\n            List.partition isInline opt\n        Unmerged withInline\n        |> addProp (ClassName \"form-radio\")\n        |> map propToClassName\n        |> merge\n        |> R.label\n        <| [ R.input (Type \"radio\" :> IHTMLProp :: withoutInline)\n             R.i [ClassName \"form-icon\"] []\n             R.str txt ]\n","﻿namespace Fabulosa\n\nmodule Switch =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Switch = HTMLProps * FabulosaText\n\n    let switch ((opt, (Text txt)): Switch) =\n        R.label [ ClassName \"form-switch\" ]\n            [ R.input (Type \"checkbox\" :> IHTMLProp :: opt)\n              R.i [ ClassName \"form-icon\" ] []\n              R.str txt ]\n","﻿namespace Fabulosa\n\nmodule Checkbox =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Checkbox = HTMLProps * FabulosaText\n\n    let private isInline (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaFormInline as opt ->\n            match opt with\n            | Inline -> true\n        | _ -> false\n\n    let propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaFormInline as opt ->\n            match opt with\n            | Inline -> className \"form-inline\"\n        | _ -> prop\n\n    let checkbox ((opt, Text txt): Checkbox) =\n        let withInline, withoutInline =\n            List.partition isInline opt\n        Unmerged withInline\n        |> addProp (ClassName \"form-checkbox\")\n        |> map propToClassName\n        |> merge\n        |> R.label\n        <| [ R.input (Type \"checkbox\" :> IHTMLProp :: withoutInline)\n             R.i [ClassName \"form-icon\"] []\n             R.str txt ]\n","namespace Fabulosa\n\nmodule Validation =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fabulosa.Checkbox\n    open Fabulosa.Input\n    open Fabulosa.Radio\n    open Fabulosa.Select\n    open Fabulosa.Switch\n\n    type ValidationOptional =\n        | Error of string\n        | Success of string\n        interface IHTMLProp\n\n    type ValidationChild =\n        | Checkbox of Checkbox\n        | Input of Input\n        | Radio of Radio\n        | Select of Select\n        | Switch of Switch\n\n    type Validation =\n        HTMLProps * ValidationChild\n\n    let private propToMessage (props: HTMLProps) =\n        List.tryPick\n            (fun (prop: IHTMLProp) ->\n                match prop with\n                | :? ValidationOptional as opt ->\n                    match opt with\n                    | Success message -> [ R.str message ]\n                    | Error message -> [ R.str message ]\n                    |> R.p [ ClassName \"form-input-hint\" ]\n                    |> Some\n                | _ -> None)\n            props\n        |> R.ofOption\n\n    let private propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? ValidationOptional as opt ->\n            match opt with\n            | Success _ -> \"has-success\"\n            | Error _ -> \"has-error\"\n            |> className\n        | _ -> prop\n\n    let validation ((opt, chi): Validation) =\n        Unmerged opt\n        |> map propToClassName\n        |> merge\n        |> R.span\n        <| [ (match chi with\n               | Checkbox c -> checkbox c\n               | Input i -> input i\n               | Radio r -> radio r\n               | Select s -> select s\n               | Switch s -> switch s)\n             propToMessage opt]\n","﻿namespace Fabulosa\n\nmodule Group =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fabulosa.Checkbox\n    open Fabulosa.Radio\n    open Fabulosa.Label\n    open Fabulosa.Switch\n    open Fabulosa.Input\n    open Fabulosa.Select\n    open Fabulosa.InputGroup\n    open Fabulosa.Validation\n    open Fabulosa.Textarea\n\n    type GroupChild =\n        | Checkbox of Checkbox\n        | Input of Input\n        | InputGroup of InputGroup\n        | Label of Label\n        | Radio of Radio\n        | Select of Select\n        | Switch of Switch\n        | Textarea of Textarea\n        | Validation of Validation\n\n    type Group =\n        HTMLProps * GroupChild list\n\n    let group ((opt, chi): Group) =\n        Unmerged opt\n        |> addProp (ClassName \"form-group\")\n        |> merge\n        |> R.div\n        <| Seq.map\n            (function\n             | Checkbox c -> checkbox c\n             | Input i -> input i\n             | InputGroup i -> inputGroup i\n             | Label l -> label l\n             | Radio r -> radio r\n             | Select s -> select s\n             | Switch s -> switch s\n             | Textarea t -> textarea t\n             | Validation v -> validation v)\n             chi\n","﻿namespace Fabulosa\n\nmodule Textarea =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Textarea = HTMLProps * FabulosaText\n\n    let textarea ((opt, (Text txt)): Textarea) =\n        Unmerged opt\n        |> addProp (ClassName \"form-input\")\n        |> merge\n        |> R.textarea <| [ R.str txt ]\n","﻿module FormPage\n\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Fable.Import.React\nopen Fabulosa\nopen Fabulosa.Docs\nopen Fabulosa.Group\nopen Fabulosa.Select\nopen Fabulosa.Extensions.Fable.Helpers.React.Props\nopen Renderer\n\n(*** define: form-checkbox-sample ***)\nlet checkbox =\n    group ([],\n      [ Label ([], Text \"Login Preferences\")\n        Checkbox ([ Name \"remember-me\" ], Text \"Remember me\") ])\n(*** define: form-input-sample ***)\nlet input =\n    group ([],\n      [ Label ([], Text \"Name\")\n        Input [ Placeholder \"Please enter your name\" ] ])\n(*** hide ***)\nopen Fabulosa.InputGroup\n(*** define: form-input-group-sample ***)\nlet inputGroup =\n    group ([],\n      [ Label ([], Text \"Email Address\")\n        InputGroup ([],\n          (OptText None,\n           [ Input [ Placeholder \"Please enter email address\" ]\n             Select ([],\n                [ Option ([], Text \"@gmail.com\")\n                  Option ([], Text \"@hotmail.com\") ]) ],\n           OptButton None))\n        Label ([], Text \"Website\")\n        InputGroup ([],\n           (OptText (Some \"https://\"),\n            [ Input [ Placeholder \"Please enter website address\" ] ],\n            OptButton (Some ([], [ R.str \"Save\" ])))) ])\n(*** define: form-radio-sample ***)\nlet radio =\n    group ([],\n      [ Label ([], Text \"Gender\")\n        Radio ([ Name \"gender\" ], Text \"Male\")\n        Radio ([ Name \"gender\"], Text \"Female\") ])\n(*** hide ***)\nopen Fabulosa.Group\n(*** define: form-select-sample ***)\nlet select =\n    group ([],\n      [ Label ([], Text \"Language\")\n        Select ([],\n          [ Option ([], Text \"English\")\n            Option ([], Text \"Spanish\")\n            Option ([], Text \"Assembly\") ]) ])\n(*** define: form-sizes-sample ***)\nlet sizes =\n    group ([],\n      [ Label ([ Size Small ], Text \"Small\")\n        Input ([ Placeholder \"Please enter a value\"; Size Small ])\n        Label ([ Size Large ], Text \"Large\")\n        Select ([ Size Large ],\n          [ Option ([], Text \"Large\") ]) ])\n(*** define: form-switch-sample ***)\nlet switch =\n    group ([],\n      [ Label ([], Text \"Email Preferences\")\n        Switch ([], Text \"Send me promotional emails\") ])\n(*** define: form-textarea-sample ***)\nlet textarea =\n    group ([],\n      [ Label ([], Text \"Description\")\n        Textarea ([ Placeholder \"Please enter a description\" ], Text \"\") ])\n(*** hide ***)\nopen Fabulosa.Validation\n(*** define: form-validation-sample ***)\nlet validation =\n    group ([],\n      [ Label ([], Text \"Valid Input\")\n        Validation ([ Success \"This input is valid\"],\n          Input [ Placeholder \"Please enter a value\" ])\n        Label ([], Text \"Invalid Input\")\n        Validation ([ Error \"This input is invalid\" ],\n          Input [ Placeholder \"Please enter a value\"]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"form-input-demo\" input\n    tryMount \"form-input-params-table\"\n        (PropTable.paramTable\n            (Some typeof<FabulosaFormSize>)\n            None\n            None)\n    tryMount \"form-select-demo\" select\n    tryMount \"form-select-params-table\"\n        (PropTable.paramTable\n            (Some typeof<FabulosaFormSize>)\n            None\n            (Some typeof<SelectChild>))\n    tryMount \"form-textarea-demo\" textarea\n    tryMount \"form-textarea-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<FabulosaText>))\n    tryMount \"form-radio-demo\" radio\n    tryMount \"form-radio-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<FabulosaText>))\n    tryMount \"form-checkbox-demo\" checkbox\n    tryMount \"form-checkbox-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<FabulosaText>))\n    tryMount \"form-switch-demo\" switch\n    tryMount \"form-switch-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<FabulosaText>))\n    tryMount \"form-sizes-demo\" sizes\n    tryMount \"form-validation-demo\" validation\n    tryMount \"form-validation-params-table\"\n        (PropTable.paramTable\n            (Some typeof<ValidationOptional>)\n            None\n            (Some typeof<ValidationChild>))\n    tryMount \"form-input-group-demo\" inputGroup\n    tryMount \"form-input-group-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<InputGroupChild>))\n(**\n\n<div class=\"forms-page-container\">\n\n<div id=\"forms\">\n\n<h2 class=\"s-title\">Forms</h2>\n\nForms provide the most common control styles\nused in forms, including input, textarea,\nselect, checkbox, radio and switch.\n\n</div>\n\n<div id=\"checkbox\">\n\n<h3 class=\"s-title\">Checkbox</h3>\n\nThe default checkbox component for a form.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-checkbox-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-checkbox-demo\"></div>\n\n*)\n(*** include: form-checkbox-sample ***)\n(**\n\n</div>\n\n<div id=\"input\">\n\n<h3 class=\"s-title\">Input</h3>\n\nThe default input component for a form.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-input-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-input-demo\"></div>\n\n*)\n(*** include: form-input-sample ***)\n(**\n\n</div>\n\n<div id=\"inputgroup\">\n\n<h3 class=\"s-title\">Input Group</h3>\n\nComponent for grouping different kinds of input.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-input-group-params-table\"></div>\n\n<h4>Example</h2>\n\n<div class=\"demo\" id=\"form-input-group-demo\"></div>\n\n*)\n(*** include: form-input-group-sample ***)\n(**\n\n</div>\n\n<div id=\"radio\">\n\n<h3 class=\"s-title\">Radio</h3>\n\nThe default radio component for a form.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-radio-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-radio-demo\"></div>\n\n*)\n(*** include: form-radio-sample ***)\n(**\n\n</div>\n\n<div id=\"select\">\n\n<h3 class=\"s-title\">Select</h3>\n\nThe default select component for a form.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-select-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-select-demo\"></div>\n\n*)\n(*** include: form-select-sample ***)\n(**\n\n</div>\n\n<div id=\"sizes\">\n\n<h3 class=\"s-title\">Sizes</h3>\n\nInput, select and label components can be Small or Large.\n\n<div class=\"demo\" id=\"form-sizes-demo\"></div>\n\n*)\n(*** include: form-sizes-sample ***)\n(**\n\n</div>\n\n<div id=\"switch\">\n\n<h3 class=\"s-title\">\n    Switch\n</h3>\n\nA switch component for forms.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-switch-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-switch-demo\"></div>\n\n*)\n(*** include: form-switch-sample ***)\n(**\n\n</div>\n\n<div id=\"textarea\">\n\n<h3 class=\"s-title\">Textarea</h3>\n\nThe default textarea component for a form.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-textarea-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-textarea-demo\"></div>\n\n*)\n(*** include: form-textarea-sample ***)\n(**\n\n</div>\n\n<div id=\"validation\">\n\n<h3 class=\"s-title\">\n    Validation\n</h3>\n\nValidation component for forms.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"form-validation-params-table\"></div>\n\n#### Example\n\n<div class=\"demo\" id=\"form-validation-demo\"></div>\n\n*)\n(*** include: form-validation-sample ***)\n(**\n\n</div>\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Accordion =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Icon\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type AccordionIcon =\n        | OptIcon of (Icon option)\n\n    type AccordionHeader =\n        | Header of string\n\n    type AccordionBody =\n        | Body of (ReactElement list)\n\n    type AccordionItemChildren =\n        AccordionIcon * AccordionHeader * AccordionBody\n\n    type AccordionItem =\n        P.HTMLProps * AccordionItemChildren\n\n    let private createIcon icn =\n        match icn with\n        | Some (opt, req) -> \n            icon (P.Unmerged opt\n            |> P.addProp (P.ClassName \"mr-1\")\n            |> P.merge, req)\n        | None ->\n            icon ([ P.ClassName \"mr-1\" ], Kind ArrowRight)\n\n    let private accordionItem ((opt, (OptIcon icn, Header hdr, Body bod)): AccordionItem) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"accordion\")\n        |> P.merge\n        |> R.details\n        <| [ R.summary\n               [ P.ClassName \"accordion-header\" ]\n               [ createIcon icn\n                 R.RawText \"\\n\"\n                 R.str hdr ]\n             R.div\n               [ P.ClassName \"accordion-body\" ]\n               [ R.ul\n                   [ P.ClassName \"menu menu-nav\"]\n                   [ R.li\n                       [ P.ClassName \"menu-item\" ] bod ] ] ]\n\n    type AccordionChild =\n        Item of AccordionItem\n    \n    type Accordion =\n        P.HTMLProps * AccordionChild list\n\n    let accordion ((opt, chi): Accordion) =\n        R.div\n            opt\n            (Seq.map\n               (fun (Item item) -> accordionItem item)\n               chi)","﻿module AccordionPage\n\nopen Fabulosa.Icon\nopen Fabulosa.Accordion\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Renderer\n\n(*** define: accordion-sample ***)\nlet def =\n    accordion ([],\n      [ Item ([],\n          (OptIcon None,\n           Header \"Header One\",\n           Body\n             [ R.a [] [ R.str \"Item One\" ]\n               R.a [] [ R.str \"Item Two\" ] ]))\n        Item ([],\n          (OptIcon None,\n           Header \"Header One\",\n           Body\n             [ R.a [] [ R.str \"Item One\" ]\n               R.a [] [ R.str \"Item Two\" ] ])) ])\n(*** define: accordion-custom-sample ***)\nlet custom =\n    accordion ([],\n      [ Item ([],\n          (OptIcon (Some ([], Kind Forward)),\n           Header \"Header One\",\n           Body\n             [ R.a [] [ R.str \"Item One\" ]\n               R.a [] [ R.str \"Item Two\" ] ] ))\n        Item ([],\n          (OptIcon (Some ([], Kind Back)),\n           Header \"Header One\",\n           Body\n             [ R.a [] [ R.str \"Item One\" ]\n               R.a [] [ R.str \"Item Two\" ] ])) ])\n(*** hide ***)\nlet render () =\n    tryMount \"accordion-demo\" def\n    tryMount \"accordion-custom-demo\" custom\n    tryMount \"accordion-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<AccordionChild>))\n    tryMount \"accordion-item-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<AccordionItemChildren>))\n(**\n\n<div id=\"accordions\">\n\n<h2 class=\"s-title\">Accordions</h2>\n\nAccordions are used to toggle sections of content.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"accordion-params-table\"></div>\n\n#### Item Parameters\n\n<div class=\"props-table\" id=\"accordion-item-params-table\"></div>\n\n#### Example\n\nAn accordion with default settings.\n\n<div class=\"demo\" id=\"accordion-demo\"></div>\n\n*)\n(*** include: accordion-sample ***)\n(**\n\n#### Custom Icon\n\nAccordions accept icon props for a custom icon.\n\n<div class=\"demo\" id=\"accordion-custom-demo\"></div>\n\n*)\n(*** include: accordion-custom-sample ***)\n(**\n\n</div>\n\n*)\n    ","﻿namespace Fabulosa\n\nmodule Avatar =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Size =\n        | ExtraSmall\n        | Small\n        | Large\n        | ExtraLarge\n\n    type Presence =\n        | Online\n        | Busy\n        | Away\n\n    type AvatarOptional =\n        | Presence of Presence\n        | Size of Size\n        interface IHTMLProp\n\n    type AvatarChildren =\n        | Initial of string\n        | Url of string\n\n    type Avatar =\n        HTMLProps * AvatarChildren\n        \n    let private size (prop: IHTMLProp) =\n        match prop with\n        | :? AvatarOptional as opt ->\n            match opt with\n            | Size ExtraSmall -> className \"avatar-xs\"\n            | Size Small -> className \"avatar-sm\"\n            | Size Large -> className \"avatar-lg\"\n            | Size ExtraLarge -> className \"avatar-xl\"\n            | _ -> prop\n        | _ -> prop\n\n    let private presenceIcon presence =\n        let props =\n            Unmerged [ presence ]\n            |> addProp (ClassName \"avatar-presence\")\n            |> merge\n        R.i props []\n\n    let private presence (props: HTMLProps) =\n        List.tryPick\n            (fun (prop: IHTMLProp) ->\n                match prop with\n                | :? AvatarOptional as opt ->\n                    match opt with\n                    | Presence Away -> Some \"away\"\n                    | Presence Busy -> Some \"busy\"\n                    | Presence Online -> Some \"online\"\n                    | _ -> None\n                    |> Option.map ClassName\n                    |> Option.map presenceIcon\n                | _ -> None)\n            props\n        |> R.ofOption\n\n    let private initial children (props: IHTMLProp list) =\n        match children with\n        | Initial initial ->\n            Unmerged props |> addProp (Data (\"initial\", initial)) |> merge\n        | _ -> props\n\n    let private image children =\n        match children with\n        | Url url ->\n            R.img [ Src url ]\n        | _ -> R.ofOption None\n\n    let avatar ((opt, chi): Avatar) =\n        Unmerged opt\n        |> addProp (ClassName \"avatar\")\n        |> map size\n        |> merge\n        |> initial chi\n        |> R.figure\n        <| [ image chi\n             presence opt ]","﻿module AvatarPage\n\nopen Fabulosa.Avatar\nopen Fabulosa.Docs\nopen Fable.Import.React\nmodule R = Fable.Helpers.React\nopen Renderer\n\n(*** define: avatar-initial-sample ***)\nlet def = avatar ([], Initial \"FA\")\n(*** define: avatar-source-sample ***)\nlet source = avatar ([], Url \"Assets/avatar-1.png\")\n(*** define: avatar-sizes-sample ***)\nlet extraSmall = avatar ([ Size ExtraSmall ], Initial \"FA\")\n(*** hide ***)\nlet small = avatar ([ Size Small ], Initial \"FA\")\n\nlet medium = avatar ([], Initial \"FA\")\n\nlet large = avatar ([ Size Large ], Initial \"FA\")\n\nlet extraLarge = avatar ([ Size ExtraLarge ], Initial \"FA\")\n(*** define: avatar-presence-sample ***)\nlet presence = avatar ([ Presence Online ], Url \"Assets/avatar-1.png\")\n(*** hide ***)\nlet render () =\n    tryMount \"avatar-initial-demo\" def\n    tryMount \"avatar-source-demo\" source\n    tryMount \"avatar-xs-demo\" extraSmall\n    tryMount \"avatar-sm-demo\" small\n    tryMount \"avatar-md-demo\" medium\n    tryMount \"avatar-lg-demo\" large\n    tryMount \"avatar-xl-demo\" extraLarge\n    tryMount \"avatar-presence-demo\" presence\n    tryMount \"avatar-params-table\"\n        (PropTable.paramTable\n            (Some typeof<AvatarOptional>)\n            None\n            (Some typeof<AvatarChildren>))\n(**\n\n<div id=\"avatars\">\n\n<h2 class=\"s-title\">Avatars</h2>\n\nAvatars are user profile pictures.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"avatar-params-table\"></div>\n\n#### Initial\n\nAvatars can have an Initial prop with name initials instead of images.\n\n<div class=\"demo\" id=\"avatar-initial-demo\"></div>\n\n*)\n(*** include: avatar-initial-sample ***)\n(**\n\n#### Source\n\nAvatars can also have a source image\n\n<div class=\"demo\" id=\"avatar-source-demo\"></div>\n\n*)\n(*** include: avatar-source-sample ***)\n(**\n\n#### Sizes\n\nAvatar can be ExtraSmall, Small, Medium, Large and ExtraLarge.\n\n<div class=\"demo\">\n    <span id=\"avatar-xs-demo\"></span>\n    <span id=\"avatar-sm-demo\"></span>\n    <span id=\"avatar-md-demo\"></span>\n    <span id=\"avatar-lg-demo\"></span>\n    <span id=\"avatar-xl-demo\"></span>\n</div>\n\n*)\n\n(*** include: avatar-sizes-sample ***)\n\n(**\n\n#### Presence\n\nAvatar can have a presence indicator.\n\n<div class=\"demo\">\n    <span id=\"avatar-presence-demo\"></span>\n</div>\n\n*)\n(*** include: avatar-presence-sample ***)\n(**\n\n</div>\n\n*)","namespace Fabulosa\n\nmodule Badge =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Button\n    open Fabulosa.Avatar\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    let private combine props badge =\n        P.Unmerged props\n        |> P.addProps\n            [ P.ClassName \"badge\"\n              P.Data (\"badge\", badge) ]\n        |> P.merge\n\n    type private Element = P.HTMLProps * ReactElement list\n    \n    type BadgeChildren =\n        | Avatar of Avatar\n        | Button of Button\n        | Anchor of Element\n        | Div of Element\n        | Span of Element\n\n    type Badge =\n        P.HTMLProps * FabulosaValue * BadgeChildren\n\n    let badge ((optional, (Value value), children): Badge) =\n        match children with\n        | Avatar (opt, children) ->\n            avatar (combine opt value, children)\n        | Button (opt, req) ->\n            button (combine opt value, req)\n        | Anchor (anchorProps, children) ->\n            R.a (combine anchorProps value) children\n        | Div (divProps, children) ->\n            R.div (combine divProps value) children\n        | Span (spanProps, children) ->\n            R.span (combine spanProps value) children","﻿module BadgePage\n\nopen Fabulosa\nopen Fabulosa.Badge\nopen Fabulosa.Avatar\nopen Fabulosa.Docs\nopen Renderer\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\n\n(*** define: badge-div-span-sample ***)\nlet div = badge ([], Value 1, Div ([], [ R.str \"Text\" ]))\n\nlet span = badge ([], Value 2, Span ([], [ R.str \"Text\" ]))\n(*** define: badge-button-avatar-sample ***)\nlet button = badge ([], Value 3, Button ([], [ R.str \"Button\" ]))\n\nlet avatar = badge ([], Value 4, Avatar ([ Size Large ], Url \"Assets/avatar-1.png\"))\n(*** hide ***)\nlet render () =\n    tryMount \"badge-div-demo\" div\n    tryMount \"badge-span-demo\" span\n    tryMount \"badge-button-demo\" button\n    tryMount \"badge-avatar-demo\" avatar\n    tryMount \"badge-params-table\"\n        (PropTable.paramTable\n            None\n            (Some typeof<FabulosaValue>)\n            (Some typeof<BadgeChildren>))\n(**\n\n<div id=\"badges\">\n\n<h2 class=\"s-title\">Badge</h2>\n\nBadges are often used as unread number indicators.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"badge-params-table\"></div>\n\n#### Div or Span\n\nBadges can be rendered on top\nof div or span elements.\n\n<div class=\"demo\">\n    <span id=\"badge-div-demo\"></span>\n    <br/>\n    <span id=\"badge-span-demo\"></span>\n</div>\n\n*)\n(*** include: badge-div-span-sample ***)\n(**\n\n#### Button or Avatar\n\nBadges can also be render on top\nof the button and avatar components.\n\n<div class=\"demo\">\n    <span id=\"badge-button-demo\"></span>\n    <span id=\"badge-avatar-demo\"></span>\n</div>\n\n*)\n(*** include: badge-button-avatar-sample ***)\n(**\n\n</div>\n\n*)","namespace Fabulosa\n\nmodule Image =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n \n    type ImageKind =\n    | Responsive\n    | Contain\n    | Cover\n\n    type ImageOptional =\n        | Kind of ImageKind\n        interface IHTMLProp\n        \n    type Image = HTMLProps\n        \n    let private imageKind (prop: IHTMLProp) =\n        match prop with\n        | :? ImageOptional as opt ->\n            match opt with\n            | Kind Responsive -> className \"img-responsive\" |> Some\n            | Kind Contain -> className \"img-fit-contain\" |> Some\n            | Kind Cover -> className \"img-fit-cover\" |> Some\n        | _ -> None\n    \n    let image (opt: Image) = \n        opt\n        |> Unmerged\n        |> addOptionOrElse imageKind (ClassName \"img-responsive\")\n        |> merge\n        |> R.img","namespace Fabulosa\n\nmodule Video =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type VideoRatio =\n        | Ratio16x9\n        | Ratio4x3\n        | Ratio1x1\n\n    type VideoKind =\n        | Frame\n        | Source of string\n            \n    type VideoOptional =\n        | Ratio of VideoRatio\n        interface IHTMLProp\n\n    type VideoRequired = | Kind of VideoKind\n\n    type Video = HTMLProps * VideoRequired\n    \n    let private ratio (prop: IHTMLProp) =\n        match prop with\n        | :? VideoOptional as opt ->\n            match opt with\n            | Ratio Ratio16x9 -> className \"video-responsive-16-9\" |> Some\n            | Ratio Ratio4x3 -> className \"video-responsive-4-3\" |> Some\n            | Ratio Ratio1x1 -> className \"video-responsive-1-1\" |> Some\n        | _ -> None\n\n    let private videoTag props source =\n        props\n        |> Unmerged\n        |> addProp (Src source)\n        |> addProp (ClassName \"video-responsive\")\n        |> addOptionOrElse ratio (ClassName \"video-responsive-16-9\")\n        |> merge\n        |> R.video\n        <| []\n        \n    let private frameTag (props: HTMLProps ) =\n        [ ClassName \"video-responsive\" :> IHTMLProp]\n        |> Unmerged\n        |> addOptionOrElse ratio (ClassName \"video-responsive-16-9\")\n        |> merge \n        |> R.div\n        <| [ R.iframe props [] ]                   \n\n    let video (video: Video) = \n        let (props, (Kind kind)) = video\n        \n        match kind with \n        | Source source -> videoTag props source\n        | Frame -> frameTag props\n        ","namespace Fabulosa\n\nmodule Caption =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type CaptionDirection =\n        | Left\n        | Center\n        | Right\n\n    type CaptionOptional =\n        | Direction of CaptionDirection\n        interface IHTMLProp\n    \n    type CaptionChildren =\n        | Text of string\n        | Elements of ReactElement list            \n    \n    type Caption = HTMLProps * CaptionChildren\n    \n    let private renderChildren =\n        function\n        | Text text -> [ R.str text ]\n        | Elements elements -> elements\n\n    let private direction (prop: IHTMLProp) =\n        match prop with\n        | :? CaptionOptional as opt ->\n            match opt with\n            | Direction Left -> className \"text-left\" |> Some\n            | Direction Right -> className \"text-right\" |> Some\n            | Direction Center -> className \"text-center\" |> Some\n        | _ -> None\n    \n    let caption ((opt, chi): Caption) =\n        Unmerged opt\n        |> addProps [ ClassName \"figure-caption\"]\n        |> addOptionOrElse direction (ClassName \"text-center\")\n        |> merge\n        |> R.figcaption\n        <| renderChildren chi","﻿namespace Fabulosa\n\nmodule Figure =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n    open Fabulosa.Caption\n    open Fabulosa.Image\n                        \n    type FigureKind =\n        | Responsive\n        | Contain\n        | Cover\n    \n    type FigureOptional = \n        | Caption of Caption\n        interface IHTMLProp\n        \n    type FigureChildren =\n        | Image of Image\n        \n    type Figure = HTMLProps * FigureChildren        \n\n    let private figureCaption (prop: IHTMLProp) =\n        match prop with\n        | :? FigureOptional as opt ->\n            match opt with\n            | Caption cap -> caption cap |> Some\n        | _ -> None\n    \n    let figure ((opt, (Image chi)): Figure) =\n        opt\n        |> Unmerged\n        |> addProp (ClassName \"figure\")\n        |> merge\n        |> R.figure\n        <| [ image chi\n             List.tryPick figureCaption opt |> R.ofOption ]   \n           ","﻿module MediaPage\n\nopen Fabulosa\nmodule R = Fable.Helpers.React\nopen Fabulosa.Docs\nopen R.Props\nopen Fable.Import.React\nopen Renderer\nopen Fabulosa.Image\n\n(*** define: media-img-responsive-demo ***)\nlet demo =\n    image [ Src \"https://goo.gl/DbSvSD\" ]\n\nlet imageContainer containerWidth =\n    R.div\n        [ Style [ Width containerWidth ] ]\n        [ demo ]\n\n(*** hide ***)\nlet style =\n    Style\n        [ Background \"#f8f9fa\"\n          Height \"10rem\"\n          Width \"100%\" ]\n\n(*** define: media-img-fit-contain-demo ***)\nlet contain =\n    image [ Kind Contain\n            Src \"https://goo.gl/DbSvSD\"\n            style ] \n(*** define: media-img-fit-cover-demo ***)\nlet cover =\n    image [ Kind Cover \n            Src \"https://goo.gl/DbSvSD\"\n            style ] \n\n(*** hide ***)\nlet src = \"https://interactive-examples.mdn.mozilla.net/media/examples/stream_of_water.webm\"\nopen Fabulosa.Video\n\n(*** define: video-demo ***)\nlet videoDemo =\n    video ([], Kind (Source src) )\n\nlet youtube =\n    video (\n        [ HTMLAttr.Width 560\n          HTMLAttr.Height 315\n          Src \"https://www.youtube.com/embed/6AgiQWk4kqA\"\n          AllowFullScreen true ],\n          Kind Frame ) \n(*** hide ***)\nopen Fabulosa.Figure\n(*** define: figure-demo ***)\nlet figureDemo = \n    figure ([Caption ([], Fabulosa.Caption.Text \"Who controls the past controls the future: who controls the present controls the past.\")], \n             Image [Src \"https://wallpaper-house.com/data/out/10/wallpaper2you_385583.jpg\"])\n    \n(*** hide ***)\nlet render () = \n    tryMount \"media-img-responsive-demo-a\" (imageContainer \"5rem\")\n    tryMount \"media-img-responsive-demo-b\" (imageContainer \"12rem\")\n    tryMount \"media-img-responsive-demo-c\" (imageContainer \"18rem\")\n    tryMount \"media-img-fit-contain-demo\" contain\n    tryMount \"media-img-fit-cover-demo\" cover\n    // tryMount \"media-img-props-table\"\n    //     (PropTable.unionPropTable typeof<Media.Image.ImageOptional>)\n    // tryMount \"figure-props-table\"\n    //     (PropTable.unionPropTable typeof<Media.Figure.FigureOptional>)\n    // tryMount \"figure-demo\" figureDemo\n    // tryMount \"caption-props-table\"\n    //     (PropTable.unionPropTable typeof<Media.Caption.CaptionOptional> )\n    tryMount \"video-demo\" videoDemo\n    tryMount \"youtube-demo\" youtube\n    //     (PropTable.unionPropTable typeof<Media.Video.VideoOptional>)\n(**\n<div id=\"media\">\n<h2 class=\"s-title\">Media</h2>\n\nMedia includes responsive images, figures and video classes.\n\n</div>\n\n<div id=\"images\">\n<h3 class=\"s-title\">Images</h3>\n\nAdd the ```img-responsive``` class to <img> elements. The images will scale with the parent sizes.\n\n</div>\n\n<div id=\"image-props\">\n<h3 class=\"s-title\">Image Props</h3>\n<div class=\"props-table\" id=\"media-img-props-table\"></div>\n</div>\n\n<div id=\"image-responsive\">\n<h4 class=\"s-title\">Image Responsive</h4>\n<div class=\"demo\">\n<div class=\"columns\">\n<div class=\"column col-4 col-mr-auto\">\n<div class=\"bg-gray docs-block\">container width 5rem</div>\n</div>\n<div class=\"column col-8 col-mx-auto\">\n<div id=\"media-img-responsive-demo-a\"></div>\n</div>\n</div>\n<div class=\"columns\">\n<div class=\"column col-4 col-mr-auto\">\n<div class=\"bg-gray docs-block\">container width 12rem</div>\n</div>\n<div class=\"column col-8 col-mx-auto\">\n<div id=\"media-img-responsive-demo-b\"></div>\n</div>\n</div>\n<div class=\"columns\">\n<div class=\"column col-4 col-mr-auto\">\n<div class=\"bg-gray docs-block\">container width 18rem</div>\n</div>\n<div class=\"column col-8 col-mx-auto\">\n<div id=\"media-img-responsive-demo-c\"></div>\n</div>\n</div>\n</div>\n*)\n(*** include: media-img-responsive-demo ***)\n(**\n</div>\n*)\n\n(**\n<div id=\"image-contain\">\n<h4 class=\"s-title\">Image Contain</h4>\n<div class=\"columns\">\n<div class=\"column col-6 col-mx-auto\">\n<div id=\"media-img-fit-contain-demo\"></div>\n</div>\n</div>\n*)\n(*** include: media-img-fit-contain-demo ***)\n(**\n</div>\n*)\n\n(**\n<div id=\"image-cover\">\n<h4 class=\"s-title\">Image Cover</h4>\n<div class=\"columns\">\n<div class=\"column col-6 col-mx-auto\">\n<div id=\"media-img-fit-cover-demo\"></div>\n</div>\n</div>\n*)\n(*** include: media-img-fit-cover-demo ***)\n(**\n</div>\n*)\n\n\n(**\n<div id=\"video\">\n<h3 class=\"s-title\">Video</h3>\n\nA container for video elements\n\n</div>\n\n<div id=\"video-props\">\n<h4 class=\"s-title\">Video Props</h4>\n<div class=\"props-table\" id=\"video-props-table\"></div>\n</div>\n\n<div id=\"video-examples\">\n<h4 class=\"s-title\">Video Examples</h4>\n<div class=\"demo\">\n<div class=\"columns\">\n<div class=\"column col-6 col-mx-auto\">\n<div id=\"video-demo\"></div>\n</div>\n</div>\n<div class=\"columns\">\n<div class=\"column col-6 col-mx-auto\">\n<div id=\"youtube-demo\"></div>\n</div>\n</div>\n</div>    \n</div>\n**)\n\n(*** include: video-demo ***)\n\n(**\n<div id=\"figure\">\n<h3 class=\"s-title\">Figure/Caption</h3>\n\nFigure serves as a container for reponsive\nimages and caption. Caption defines the\ntext(or any ReactElement) that is displayed\nas metadata about the image.\n\n</div>\n\n<div id=\"figure-props\">\n<h4 class=\"s-title\">\nFigure Props\n</h4>\n<div class=\"props-table\" id=\"figure-props-table\"></div>\n</div>    \n\n<div id=\"caption-props\">\n<h4 class=\"s-title\">Caption Props</h4>\n<div class=\"props-table\" id=\"caption-props-table\"></div>\n</div>\n\n<div id=\"figure-examples\">\n\n<h4 class=\"s-title\">\nFigure Example\n</div>\n\n<div class=\"demo\">\n<div class=\"columns\">\n<div class=\"column col-6 col-mx-auto\">\n<div id=\"figure-demo\"></div>\n</div>\n</div>\n</div>\n*)\n\n(*** include: figure-demo ***)\n","﻿namespace Fabulosa\n\nmodule Grid =\n\n    open Fabulosa.Extensions\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type Kind =\n    | MLAuto\n    | MRAuto\n    | MXAuto\n\n    type private ColSize = int\n\n    type GridColumnOptional =\n        | Kind of Kind\n        | Size of ColSize\n        | XSSize of ColSize\n        | SMSize of ColSize\n        | MDSize of ColSize\n        | LGSize of ColSize\n        | XLSize of ColSize\n        interface P.IHTMLProp\n\n    type GridColumn = P.HTMLProps * ReactElement list\n\n    let private colPropToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? GridColumnOptional as opt ->\n            match opt with\n            | Kind MLAuto -> \"col-ml-auto\"\n            | Kind MRAuto -> \"col-mr-auto\"\n            | Kind MXAuto -> \"col-mx-auto\"\n            | Size n -> \"col-\" + string n\n            | XSSize n -> \"col-xs-\" + string n\n            | SMSize n -> \"col-sm-\" + string n\n            | MDSize n -> \"col-md-\" + string n\n            | LGSize n -> \"col-lg-\" + string n\n            | XLSize n -> \"col-xl-\" + string n\n            |> P.ClassName\n            :> P.IHTMLProp\n        | _ -> prop\n\n    let gridColumn ((opt, chi): GridColumn) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"column\")\n        |> P.map colPropToClassName\n        |> P.merge\n        |> R.div <| chi\n\n    type GridRowOptional =\n        | Gapless\n        | OneLine\n        interface P.IHTMLProp\n\n    type GridRowChild =\n        Column of GridColumn\n\n    type GridRowChildren = GridRowChild list\n\n    type GridRow = P.HTMLProps * GridRowChildren\n\n    let private rowPropToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? GridRowOptional as opt ->\n            match opt with\n            | Gapless -> \"col-gapless\"\n            | OneLine -> \"col-oneline\"\n            |> P.ClassName\n            :> P.IHTMLProp\n        | _ -> prop\n\n    let gridRow ((opt, chi): GridRow) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"columns\")\n        |> P.map rowPropToClassName\n        |> P.merge\n        |> R.div\n        <| Seq.map\n            (fun (Column col) -> gridColumn col)\n            chi\n\n    type GridChild =\n        Row of GridRow\n\n    type GridChildren =\n        GridChild list\n\n    type Grid = P.HTMLProps * GridChildren\n\n    let grid ((opt, chi): Grid) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"container\")\n        |> P.merge\n        |> R.div\n        <| Seq.map\n            (fun (Row row) -> gridRow row)\n            chi    ","﻿module GridPage\n\nopen Fabulosa.Grid\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Renderer\n\nlet style = P.Style [P.Background \"#f8f9fa\"]\n(*** define: grid-sample ***)\nlet def =\n    grid ([],\n      [ Row ([],\n          [ Column ([ Size 4 ], [ R.div [ style ] [ R.str \"First Column\" ] ])\n            Column ([ Size 8 ], [ R.div [ style ] [ R.str \"Second Column\" ] ]) ]) ])\n(*** define: row-sample ***)\nlet gapless =\n    grid ([],\n      [ Row ([ Gapless ],\n          [ Column ([ Size 4 ], [ R.div [ style ] [ R.str \"First Column\" ] ])\n            Column ([ Size 8 ], [ R.div [ style ] [ R.str \"Second Column\" ] ]) ]) ])\n\nlet oneline =\n    grid ([],\n      [ Row ([ OneLine ],\n          [ Column ([ Size 4 ],[ R.div [ style ] [ R.str \"First Column\" ] ])\n            Column ([ Size 12 ], [ R.div [ style ] [ R.str \"Second Column\" ] ]) ]) ])\n(*** define: column-sample ***)\nlet small =\n    grid ([],\n      [ Row ([],\n          [ Column ([ Size 4; SMSize 12 ], [ R.div [ style ] [ R.str \"First Column\" ] ])\n            Column ([ Size 8; SMSize 12 ], [ R.div [ style ] [ R.str \"Second Column\" ] ]) ]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"grid-demo\" def\n    tryMount \"row-gapless-demo\" gapless\n    tryMount \"row-oneline-demo\" oneline\n    tryMount \"column-demo\" small\n    tryMount \"grid-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<GridChild>))\n    tryMount \"row-params-table\"\n        (PropTable.paramTable\n            (Some typeof<GridRowOptional>)\n            None\n            (Some typeof<GridRowChild>))\n    tryMount \"column-params-table\"\n        (PropTable.paramTable\n            (Some typeof<GridColumnOptional>)\n            None\n            None)\n(**\n<div id=\"grid\">\n\n<h2 class=\"s-title\">Grid</h2>\n\nA flexbox based responsive grid system with 12 columns.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"grid-params-table\"></div>\n\n#### Example\n\nA simple grid with default settings.\n\n<div class=\"demo\" id=\"grid-demo\"></div>\n\n*)\n(*** include: grid-sample ***)\n(**\n\n</div>\n\n<div id=\"rows\">\n\n<h2 class=\"s-title\">Rows</h2>\n\nRows are children of the grid.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"row-params-table\"></div>\n\n#### Example\n\nRows can be gapless or one-line. Scroll horizontally\non the second example to see how one-line works.\n\n<div class=\"demo\">\n    <div id=\"row-gapless-demo\"></div>\n    <div id=\"row-oneline-demo\"></div>\n</div>\n\n*)\n(*** include: row-sample ***)\n(**\n\n</div>\n\n<div id=\"columns\">\n\n<h2 class=\"s-title\">Columns</h2>\n\nColumns are children of the rows.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"column-params-table\"></div>\n\n#### Example\n\nColumns can have different resposive sizes.\nResize horizontally to a very small size to\nview the columns stack.\n\n<div class=\"demo\"><div id=\"column-demo\"></div></div>\n\n*)\n(*** include: column-sample ***)\n(**\n\n</div>\n\n*)","﻿module IconPage\n\nopen Fabulosa.Icon\nopen Fabulosa.Docs\nopen Renderer\nmodule R = Fable.Helpers.React\nopen Fable.Import.React\n\n(*** define: icon-sample ***)\nlet def = icon ([], Kind Download)\n(*** define: icon-size-sample ***)\nlet x4 = icon ([ Size X4 ], Kind Upload)\n(*** hide ***)\nlet render () =\n    tryMount \"icon-demo\" def\n    tryMount \"icon-size-demo\" x4\n    tryMount \"icon-params-table\"\n        (PropTable.paramTable\n            (Some typeof<IconOptional>)\n            (Some typeof<IconRequired>)\n            None)\n\n(**\n\n<div id=\"icon\">\n\n<h2 class=\"s-title\">Icons</h2>\n\nIcons are single-element, responsive\nand pure CSS icons. You can include\nspectre-icons.css located in the dist\nfolder to your web <head> to have these CSS icons.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"icon-params-table\"></div>\n\n#### Kind\n\nThe kind of the icon to be shown\n\n<div class=\"demo\" id=\"icon-demo\"></div>\n\n*)\n(*** include: icon-sample ***)\n(**\n\n#### Size\n\nIcons can have doubled, tripled, or quadrupled sizes\n\n<div class=\"demo\" id=\"icon-size-demo\"></div>\n\n*)\n(*** include: icon-size-sample ***)\n(**\n\n</div>\n\n*)\n","﻿namespace Fabulosa\n\nmodule Navbar =\n\n    open Fable.Import.React\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type NavbarSection = HTMLProps * ReactElement list\n\n    let navbarSection ((opt, chi): NavbarSection) =\n        Unmerged opt\n        |> addProp (ClassName \"navbar-section\")\n        |> merge\n        |> R.section <| chi\n\n    type NavbarCenter = HTMLProps * ReactElement list\n\n    let navbarCenter ((opt, chi): NavbarCenter) =\n        Unmerged opt\n        |> addProp (ClassName \"navbar-center\")\n        |> merge\n        |> R.section <| chi\n\n    type NavbarBrand = HTMLProps * ReactElement list\n\n    let navbarBrand ((opt, chi): NavbarBrand) =\n        Unmerged opt\n        |> addProp (ClassName \"navbar-brand\")\n        |> merge\n        |> R.a <| chi\n\n    type NavbarChild =\n    | Brand of NavbarBrand\n    | Section of NavbarSection\n    | Center of NavbarCenter\n\n    type Navbar = HTMLProps * NavbarChild list\n\n    let navbar ((opt, chi): Navbar) =\n        Unmerged opt\n        |> addProp (ClassName \"navbar\")\n        |> merge\n        |> R.header\n        <| Seq.map\n            (function\n             | Brand brand ->\n                 navbarBrand brand\n             | Section section ->\n                 navbarSection section\n             | Center center ->\n                 navbarCenter center)\n            chi\n","﻿module NavbarPage\n\nopen Fabulosa.Navbar\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nopen Fable.Import.React\nopen R.Props\nopen Renderer\n\n(*** define: navbar-sample ***)\nlet def =\n    navbar ([],\n      [ Section ([],\n          [ R.a [ ClassName \"btn btn-link\"] [ R.str \"Left 1\" ]\n            R.a [ ClassName \"btn btn-link\"] [ R.str \"Left 2\" ] ])\n        Center ([], [ R.a [ ClassName \"btn btn-link\"] [ R.str \"Center\" ] ])\n        Section ([], [ R.a [ ClassName \"btn btn-link\"] [ R.str \"Right\" ] ]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"navbar-demo\" def\n    tryMount \"navbar-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<NavbarChild>))\n        \n(**\n\n<div id=\"navbar\">\n\n<h2 class=\"s-title\">Navbar</h2>\n\nThe navbar component can include\nlogo brand, nav links and buttons,\nsearch box or any combination of\nthose elements. Each section with\nthe navbar-section class will be\nevenly distributed in the container.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"navbar-params-table\"></div>\n\n#### Default\n\nA simple navbar\n\n<div class=\"demo\" id=\"navbar-demo\"></div>\n\n*)\n(*** include: navbar-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Responsive =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type Size =\n        | XS\n        | SM\n        | MD\n        | LG\n        | XL\n\n    type ResponsiveOptional =\n        | Hide of Size\n        | Show of Size\n        interface IHTMLProp\n\n    type Responsive = HTMLProps * ReactElement list\n\n    let private propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? ResponsiveOptional as opt ->\n            match opt with\n            | Hide XS -> \"hide-xs\"\n            | Hide SM -> \"hide-sm\"\n            | Hide MD -> \"hide-md\"\n            | Hide LG -> \"hide-lg\"\n            | Hide XL -> \"hide-xl\"\n            | Show XS -> \"show-xs\"\n            | Show SM -> \"show-sm\"\n            | Show MD -> \"show-md\"\n            | Show LG -> \"show-lg\"\n            | Show XL -> \"show-xl\"\n            |> className\n        | _ -> prop\n\n    let responsive ((opt, chi): Responsive) =\n        Unmerged opt\n        |> addProp (ClassName \"responsive\")\n        |> map propToClassName\n        |> merge\n        |> R.span <| chi\n        ","﻿module ResponsivePage\n\nopen Fabulosa.Responsive\nopen Fabulosa.Docs\nopen Fabulosa.Button\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Renderer\n\n(*** define: responsive-sample ***)\nlet hideSmall =\n    responsive\n        ([ Hide SM ], [ button ([], [ R.str \"Hide small\" ]) ])\n\nlet showLarge =\n    responsive\n        ([ Show LG ], [ button ([], [ R.str \"Show large\" ]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"responsive-demo-hide\" hideSmall\n    tryMount \"responsive-demo-show\" showLarge\n    tryMount \"responsive-params-table\"\n        (PropTable.paramTable\n            (Some typeof<ResponsiveOptional>)\n            None\n            None)\n(**\n\n<div id=\"responsive\">\n\n<h2 class=\"s-title\">Responsive</h2>\n\nSpectre provides a neat responsive\nlayout grid system and responsive\nvisibility utilities.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"responsive-params-table\"></div>\n\n#### Hide and Show\n\nShow or hide elements based\non the viewport size\n\n<div class=\"demo\" style=\"display:flex\">\n    <span id=\"responsive-demo-hide\"></span>\n    &nbsp;\n    <span id=\"responsive-demo-show\"></span>\n</div>\n\n*)\n(*** include: responsive-sample ***)\n(**\n\n</div>\n\n*)","﻿module TablePage\n\nopen Fabulosa\nopen Fabulosa.Table\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nopen Fable.Import.React\nopen Renderer\n\nlet bolso =\n    [ Column ([], [ R.str \"Jair\" ])\n      Column ([], [ R.str \"Bolsonaro\" ])\n      Column ([], [ R.str \"melhorjair@procanada.com\" ]) ]\nlet michel =\n    [ Column ([], [ R.str \"Michel\" ])\n      Column ([], [ R.str \"Temer\" ])\n      Column ([], [ R.str \"temquemanterissoai@vampiro.com\" ]) ]\n(*** define: table-columns-sample ***)\nlet donald =\n    [ Column ([], [ R.str \"Donald\" ])\n      Column ([], [ R.str \"Trump\" ])\n      Column ([], [ R.str \"wall@mexico.com\" ]) ]\n\nlet titles =\n    [ TitleColumn ([], [ R.str \"First Name\" ])\n      TitleColumn ([], [ R.str \"Last Name\" ])\n      TitleColumn ([], [ R.str \"Email\" ]) ]\n(*** define: table-row-active-sample ***)\nlet active = Row ([ Active ], bolso)\n(*** define: table-head-sample ***)\nlet head = Head ([], [ Row ([], titles) ])\n(*** define: table-body-sample ***)\nlet body =\n    Body ([],\n       [ active\n         Row ([], michel)\n         Row ([], donald) ])\n(*** define: table-default-sample ***)\nlet def = table ([], [head; body])\n(*** define: table-striped-sample ***)\nlet striped = table ([ Kind Striped ], [ head; body ])\n(*** define: table-hover-sample ***)\nlet hover = table ([ Kind Hover ], [ head; body ])\n(*** hide ***)\nlet render () =\n    tryMount \"table-default-demo\" def\n    tryMount \"table-striped-demo\" striped\n    tryMount \"table-hover-demo\" hover\n    tryMount \"table-params-table\"\n        (PropTable.paramTable\n            (Some typeof<TableOptional>)\n            None\n            (Some typeof<TableChild>))\n    tryMount \"table-row-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<TableRowChild>))\n(**\n\n<div id=\"table\">\n\n<h2 class=\"s-title\">Table</h2>\n\nTables include default styles\nfor tables and data sets.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"table-params-table\"></div>\n\n#### Row Parameters\n\n<div class=\"props-table\" id=\"table-row-params-table\"></div>\n\n#### Example\n\nThe default table.\n\n<div class=\"demo\" id=\"table-default-demo\"></div>\n\n*)\n(*** include: table-default-sample ***)\n(**\n\n#### Striped\n\nThe striped table.\n\n<div class=\"demo\" id=\"table-striped-demo\"></div>\n\n*)\n(*** include: table-striped-sample ***)\n(**\n\n#### Hover\n\nThe hover table.\n\n<div class=\"demo\" id=\"table-hover-demo\"></div>\n\n*)\n(*** include: table-hover-sample ***)\n(**\n\n#### Head\n\nThe table head.\n\n*)\n(*** include: table-head-sample ***)\n(**\n\n#### Body\n\nThe table body.\n\n*)\n(*** include: table-body-sample ***)\n(**\n\n#### Row Active\n\nRows can have an active status.\n\n*)\n(*** include: table-row-active-sample ***)\n(**\n\n#### Columns\n\nColumns can be title columns or default.\n\n*)\n(*** include: table-columns-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Bar =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type Color =\n        | Primary\n        | Secondary\n        | Dark\n        | Gray\n        | Success\n        | Warning\n        | Error\n        | Unset\n\n    type BarItemOptional =\n        | Tooltip\n        | Color of Color\n        interface P.IHTMLProp\n\n    type private BarItem =\n        P.HTMLProps * FabulosaValue\n\n    let private toPercent =\n        string >> (+) >> (|>) \"%\"\n\n    let private tooltip value (prop: P.IHTMLProp) =\n        match prop with\n        | :? BarItemOptional as opt ->\n            match opt with\n            | Tooltip ->\n                P.Unmerged []\n                |> P.addProps\n                    [ P.ClassName \"tooltip\"\n                      P.Data (\"tooltip\", toPercent value) ]\n                |> P.merge\n            | _ -> []\n        | _ -> []\n\n    let private style value =\n        let width = R.Props.CSSProp.Width (toPercent value)\n        Fable.Helpers.React.Props.Style [width]\n        :> P.IHTMLProp\n\n    let barItem ((opt, (Value value)): BarItem) =\n        P.Unmerged opt\n        |> P.addProps\n            (P.ClassName \"bar-item\" :> P.IHTMLProp\n            :: style value\n            :: (List.collect (tooltip value) opt))\n        |> P.merge\n        |> R.div <| []\n\n    type BarOptional =\n        | Small\n        interface P.IHTMLProp\n\n    type BarChild =\n        Item of BarItem\n\n    type private BarChildren =\n        BarChild list\n\n    type private Bar = P.HTMLProps * BarChildren\n\n    let private small (prop: P.IHTMLProp) =\n        match prop with\n        | :? BarOptional as opt ->\n            match opt with\n            | Small -> \"bar-sm\"\n            |> P.className\n        | _ -> prop\n\n    let bar ((opt, chi): Bar) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"bar\")\n        |> P.map small\n        |> P.merge\n        |> R.div\n        <| Seq.map\n            (fun (Item item) -> barItem item)\n            chi\n        \n    //[<RequireQualifiedAccess>]\n    //module Slider =\n\n        //let props = props\n\n        //let build (slider: T<Item.T>) =\n        //    let props, children = slider\n        //    props.HTMLProps\n        //    |> addProps\n        //        [ ClassName \"bar bar-slider\"\n        //          small props.Small ]\n        //    |> R.div\n        //    <| Seq.map\n        //        (fun item ->\n        //            let props, children = item\n        //            Item.ƒ\n        //                (props,\n        //                 [ button\n        //                     ([ ClassName \"bar-slider-btn\" ], []) ]))\n        //        children\n\n        //let ƒ = build","﻿module BarPage\n\nopen Fabulosa\nopen Fabulosa.Bar\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\n\n(*** define: bar-default-sample ***)\nlet def = bar ([], [ Item ([], Value 25) ])\n(*** define: bar-small-sample ***)\nlet small = bar ([ Small ], [ Item ([], Value 25) ])\n(*** define: bar-item-tooltip-sample ***)\nlet tooltip = bar ([], [ Item ([ Tooltip ], Value 25) ])\n(*** define: bar-item-multiple-sample ***)\nlet multiple =\n    bar ([],\n        [ Item ([], Value 25)\n          Item ([], Value 15)\n          Item ([], Value 5) ])\n(*** hide ***)\nlet render () =\n    tryMount \"bar-default-demo\" def\n    tryMount \"bar-small-demo\" small\n    tryMount \"bar-item-tooltip-demo\" tooltip\n    tryMount \"bar-item-multiple-demo\" multiple\n    tryMount \"bar-params-table\"\n        (PropTable.paramTable\n            (Some typeof<BarOptional>)\n            None\n            (Some typeof<BarChild>))\n    tryMount \"bar-item-params-table\"\n        (PropTable.paramTable\n            (Some typeof<BarItemOptional>)\n            (Some typeof<FabulosaValue>)\n            None)\n(**\n\n<div id=\"bars\">\n\n<h2 class=\"s-title\">Bars</h2>\n\nBars represent the progress of a task or the\nvalue within the known range. Bars are custom\ncomponents for displaying HTML5 progress, meter\nand input range elements.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"bar-params-table\"></div>\n\n#### Item Parameters\n\n<div class=\"props-table\" id=\"bar-item-params-table\"></div>\n\n#### Example\n\nA bar with default settings.\n\n<div class=\"demo\" id=\"bar-default-demo\"></div>\n\n*)\n(*** include: bar-default-sample ***)\n(**\n\n#### Small\n\nA small version of the bar\n\n<div class=\"demo\" id=\"bar-small-demo\"></div>\n\n*)\n(*** include: bar-small-sample ***)\n(**\n\n#### Tooltips\n\nBar items can have tooltips\n\n<div class=\"demo\" id=\"bar-item-tooltip-demo\"></div>\n\n*)\n(*** include: bar-item-tooltip-sample ***)\n(**\n\n#### Multiple items\n\nBar can also have multiple items\n\n<div class=\"demo\" id=\"bar-item-multiple-demo\"></div>\n\n*)\n(*** include: bar-item-multiple-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Tag =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Color =\n        | Primary\n        | Secondary\n        | Success\n        | Warning\n        | Error\n\n    type TagOptional =\n        | Rounded\n        | Color of Color\n        interface IHTMLProp\n\n    type Tag = HTMLProps * FabulosaText\n\n    let private propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? TagOptional as opt ->\n            match opt with\n            | Color Primary -> \"label-primary\"\n            | Color Secondary -> \"label-secondary\"\n            | Color Success -> \"label-success\"\n            | Color Warning -> \"label-warning\"\n            | Color Error -> \"label-error\"\n            | Rounded -> \"label-rounded\"\n            |> ClassName\n            :> IHTMLProp\n        | _ -> prop\n\n    let tag ((opt, (Text txt)): Tag) =\n        Unmerged opt\n        |> addProp (ClassName \"label\")\n        |> map propToClassName\n        |> merge\n        |> R.span <| [ R.str txt ]\n","﻿module TagPage\n\nopen Fabulosa\nopen Fabulosa.Tag\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Renderer\nopen Fabulosa.Extensions.Fable.Helpers.React.Props\nopen Fable.Import.React\n\n(*** define: tag-color-demo ***)\nlet def = tag ([], Text \"default label\")\n\nlet primary = tag ([ Color Primary ], Text \"primary label\")\n\nlet secondary = tag ([ Color Secondary ], Text \"secondary label\")\n\nlet success = tag ([ Color Success ], Text \"success label\")\n\nlet warning = tag ([ Color Warning ], Text \"warning label\")\n\nlet error = tag ([ Color Error ], Text \"error label\")\n(*** define: tag-rounded-demo ***)\nlet rounded = tag ([ Rounded ], Text \"rounded label\")\n(*** hide ***)\nlet colorDemo =    \n    R.div\n        [ P.ClassName \"tag-container\" ]\n        [ R.div [] [ def ]\n          R.div [] [ primary ]\n          R.div [] [ secondary ]\n          R.div [] [ success ]\n          R.div [] [ warning ]\n          R.div [] [ error ] ]\n\nlet roundedDemo =\n    R.div\n        [ P.ClassName \"tag-container\" ]\n        [ R.div [] [ rounded ] ]\n\nlet render () =\n    tryMount \"tag-params-table\"\n        (PropTable.paramTable\n            (Some typeof<TagOptional>)\n            None\n            (Some typeof<FabulosaText>))\n    tryMount \"tag-color-demo\" colorDemo\n    tryMount \"tag-rounded-demo\" roundedDemo\n(**\n<div id=\"tags\">\n\n<h2 class=\"s-title\">Tags</h2>\n\nTags are formatted text tags for highlighted,\ninformative information. Tags refere to\nSpectre.css [Labels](https://picturepan2.github.io/spectre/elements.html#labels)\n\n#### Parameters\n\n<div class=\"props-table\" id=\"tag-params-table\"></div>\n\n#### Color\n\n<div id=\"tag-color-demo\"></div>\n\n*)\n(*** include: tag-color-demo ***)\n(**\n\n#### Rounded\n\n<div id=\"tag-rounded-demo\"></div>\n\n*)\n(*** include: tag-rounded-demo ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Card =\n\n    open Fabulosa.Extensions\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fabulosa.Image\n\n    type Text = string\n\n    type ReactElements = ReactElement list\n\n    type HeaderTitle =\n        Title of Text\n\n    type HeaderSubTitle =\n        SubTitle of Text\n\n    type HeaderChildren =\n        HeaderTitle * HeaderSubTitle\n\n    type Header =\n        HTMLProps * HeaderChildren\n\n    let cardHeader ((opt, (Title title, SubTitle subTitle)): Header) =\n        Unmerged opt\n        |> addProp (ClassName \"card-header\")\n        |> merge\n        |> R.div\n        <| [ R.div\n              [ ClassName \"card-title h5\" ]\n              [ R.str title ]\n             R.div\n              [ ClassName \"card-subtitle text-gray\" ]\n              [ R.str subTitle ] ]\n\n    type Body = HTMLProps * ReactElements\n\n    let cardBody ((opt, chi): Body) =\n        if not (List.isEmpty chi) then\n            Unmerged opt\n            |> addProp (ClassName \"card-body\")\n            |> merge\n            |> R.div <| chi\n        else\n            R.ofOption None\n\n    type Footer =\n        HTMLProps * ReactElements\n\n    let cardFooter ((opt, chi): Footer) =\n        if not (List.isEmpty chi) then\n            Unmerged opt\n            |> addProp (ClassName \"card-footer\")\n            |> merge\n            |> R.div <| chi\n        else\n            R.ofOption None\n\n    type CardChild =\n        | Header of Header\n        | Body of Body\n        | Footer of Footer\n        | Image of Image\n\n    type CardChildren = CardChild list\n        \n    type Card =\n        HTMLProps * CardChildren\n\n    let card ((opt, chi): Card) =\n        Unmerged opt\n        |> addProp (ClassName \"card\")\n        |> merge\n        |> R.div\n        <| Seq.map\n            (function\n            | Header hdr -> cardHeader hdr\n            | Image img -> R.div [ ClassName \"card-image\" ] [ image img ]\n            | Body bod -> cardBody bod\n            | Footer ftr -> cardFooter ftr)\n            chi","﻿module CardPage\n\nopen Fabulosa\nopen Fabulosa.Grid\nopen Fabulosa.Card\nopen Fabulosa.Button\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\n\n(*** define: card-default-sample ***)\nlet def =\n    card ([],\n      [ Header ([], (Title \"Apple\", SubTitle \"Hardware and software\"))\n        Image ([P.Src \"Assets/macos-sierra-2.jpg\"])\n        Body ([],\n          [ R.p [] [ R.str \"To make a contribution to\n              the world by making tools for the mind\n              that advance humankind.\" ] ])\n        Footer ([], [ button ([], [ R.str \"Purchase\" ]) ]) ])\n(*** hide ***)\nlet demo =\n    grid ([],\n        [ Row ([],\n            [ Column ([ SMSize 12; Size 6 ], [ def ]) ]) ])\nlet render () =\n    tryMount \"card-default-demo\" demo\n    tryMount \"card-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<CardChild>))\n(**\n\n<div id=\"cards\">\n\n<h2 class=\"s-title\">Cards</h2>\n\nCards are flexible content containers.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"card-params-table\"></div>\n\n#### Example\n\nA card with default parameters.\n\n<div class=\"demo\" id=\"card-default-demo\"></div>\n\n*)\n(*** include: card-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Chip =\n\n    open Fable.Import.React\n    open Fabulosa.Extensions\n    open Fabulosa.Avatar\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type ChipOptional =\n        | OnRemove of (MouseEvent -> unit)\n        | Avatar of AvatarChildren\n        interface P.IHTMLProp\n\n    type Chip =\n        P.HTMLProps * FabulosaText\n\n    let private pick fn (props: P.HTMLProps) =\n        props |> List.tryPick fn\n\n    let private onRemove =\n        fun (prop: P.IHTMLProp) ->\n            match prop with\n            | :? ChipOptional as opt ->\n                match opt with\n                | OnRemove fn ->\n                    Some (R.a\n                      [ P.ClassName \"btn btn-clear\"\n                        P.Role \"button\"\n                        P.OnClick fn ] [])\n                | _ -> None\n            | _ -> None\n        |> pick\n\n    let private avatar =\n        fun (prop: P.IHTMLProp) ->\n            match prop with\n            | :? ChipOptional as opt ->\n                match opt with\n                | Avatar chi ->\n                    Some (avatar ([ Size Small ], chi))\n                | _ -> None\n            | _ -> None\n        |> pick\n\n    let private filter (props: P.HTMLProps) =\n        List.filter\n            (fun (prop: P.IHTMLProp) -> \n                match prop with\n                | :? ChipOptional as opt ->\n                    match opt with\n                    | OnRemove _ -> false\n                    | _ -> true\n                | _ -> true\n            )\n            props\n\n    let chip ((opt, (Text text)): Chip) =\n        let filtered = (filter opt)\n        P.Unmerged filtered\n        |> P.addProp (P.ClassName \"chip\")\n        |> P.merge\n        |> R.div <|\n        [ R.ofOption (avatar opt)\n          R.str text\n          R.ofOption (onRemove opt) ]\n","﻿module ChipPage\n\nopen Fabulosa\nopen Fabulosa.Chip\nopen Fabulosa.Docs\nopen Fabulosa.Avatar\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Fable.Import.React\nopen Renderer\nopen Fable.Import.JS\nopen Microsoft.FSharp.Core\n\n(*** define: chip-default-sample ***)\nlet def = chip ([], Text \"Chip\")\n(*** define: chip-removable-sample ***)\nlet fn _ = console.log \"removed\"\n\nlet removable = chip ([ OnRemove fn ], Text \"Chip\")\n(*** define: chip-avatar-sample ***)\nlet avatar = chip ([ Avatar (Url \"Assets/avatar-1.png\") ], Text \"Chip\")\n(*** hide ***)\nlet render () =\n    tryMount \"chip-default-demo\" def\n    tryMount \"chip-removable-demo\" removable\n    tryMount \"chip-avatar-demo\" avatar\n    tryMount \"chip-params-table\"\n        (PropTable.paramTable\n            (Some typeof<ChipOptional>)\n            None\n            (Some typeof<FabulosaText>))\n(**\n\n<div id=\"chips\">\n\n<h2 class=\"s-title\">Chips</h2>\n\nChips are complex entities in small blocks.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"chip-params-table\"></div>\n\n#### Example\n\nA simple chip with some text.\n\n<div class=\"demo\" id=\"chip-default-demo\"></div>\n\n*)\n(*** include: chip-default-sample ***)\n(**\n\n#### Removable\n\nA removable chip.\n\n<div class=\"demo\" id=\"chip-removable-demo\"></div>\n\n*)\n(*** include: chip-removable-sample ***)\n(**\n\n#### Avatar\n\nChips can also include an avatar.\nThe avatar size when inside the chip is always set to small.\n\n<div class=\"demo\" id=\"chip-avatar-demo\"></div>\n\n*)\n(*** include: chip-avatar-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Empty =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Icon\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    let emptyIcon ((opt, req): Icon) =\n        R.div\n            [ P.ClassName \"empty-icon\" ]\n            [ icon ([ Size X3 ], req) ]\n\n    type Title = string\n\n    let emptyTitle (comp: Title) =\n        R.p\n            [ P.ClassName \"empty-title h5\" ]\n            [ R.str comp ]\n\n    type Subtitle = string\n\n    let emptySubtitle (comp: Subtitle) =\n        R.p\n            [ P.ClassName \"empty-subtitle\" ]\n            [ R.str comp ]\n\n    type Action = ReactElement list\n\n    type EmptyChild =\n        | Icon of Icon\n        | Title of Title\n        | Subtitle of Subtitle\n        | Action of Action\n\n    let emptyAction (comp: Action) =\n        R.div\n            [ P.ClassName \"empty-action\" ]\n            comp\n\n    type EmptyChildren = EmptyChild list\n\n    type Empty =\n        P.HTMLProps * EmptyChildren\n\n    let empty ((opt, chi): Empty) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"empty\")\n        |> P.merge\n        |> R.div\n        <| Seq.map\n            (function\n            | Icon icn -> emptyIcon icn\n            | Title ttl -> emptyTitle ttl\n            | Subtitle stt -> emptySubtitle stt\n            | Action act -> emptyAction act)\n            chi\n        \n","﻿module EmptyPage\n\nopen Fabulosa.Empty\nopen Fabulosa.Button\nopen Fabulosa.Icon\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\n\n(*** define: empty-default-sample ***)\nlet def =\n    empty\n        ([],\n         [ Icon ([], Kind Mail)\n           Title \"You have no new messages\"\n           Subtitle \"Click the button to start a conversation\"\n           Action [ button ([], [ R.str \"Send a message\" ]) ] ])\n(*** hide ***)\nlet render () =\n    tryMount \"empty-default-demo\" def\n    tryMount \"empty-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<EmptyChild>))\n(**\n\n<div id=\"empty\">\n\n<h2 class=\"s-title\">Empty states</h2>\n\nEmpty states/blank states are commonly used\nas placeholders for first time use, empty\ndata and error screens.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"empty-params-table\"></div>\n\n#### Example\n\nThe empty state component.\nThe icon inside the empty state is always\n3x bigger. Actions can be any combination of React Elements.\n\n<div class=\"demo\" id=\"empty-default-demo\"></div>\n\n*)\n(*** include: empty-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Portal =\n\n    module R = Fable.Helpers.React\n    open Fable.Import\n    open Fable.Import.Browser\n\n    let ƒ selector element =\n        #if FABLE_COMPILER\n        let existing = document.getElementById selector\n        let root =\n            if existing = null then\n                let created = document.createElement \"div\"\n                created.id <- selector\n                document.body.appendChild created |> ignore\n                created\n            else existing\n        ReactDom.createPortal (element, root)\n        #else\n        element\n        #endif","﻿namespace Fabulosa\n\nmodule Menu =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Button\n    open Fable.Import\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    open Fable.Helpers.React.ReactiveComponents\n    module P = R.Props\n    \n    type MenuItem = ReactElement list\n\n    let menuItem (comp: MenuItem) =\n        R.li [ P.ClassName \"menu-item\" ] comp\n\n    type MenuDividerOptional =\n        | Text of string\n        interface P.IHTMLProp\n\n    type MenuDivider =\n        P.HTMLProps\n\n    let private menuDividerText (prop: P.IHTMLProp) =\n        match prop with\n         | :? MenuDividerOptional as opt ->\n             match opt with\n             | Text txt ->\n                 ([] |> List.cast<P.IHTMLProp>)\n                  @ [ P.Data (\"content\", txt) ]\n                 |> List.head\n         | _ -> prop \n\n    let menuDivider (opt: MenuDivider) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"divider\")\n        |> P.map menuDividerText\n        |> P.merge\n        |> R.li <| []\n\n    type TriggerMessage =\n        Click of int * int\n\n    type private TriggerRequired =\n        TriggerMessage -> unit\n\n    type TriggerChildren =\n        Button of Button\n\n    type private Trigger =\n        TriggerRequired * TriggerChildren\n\n    let private onTriggerClicked (e: MouseEvent) =\n        let element = e.currentTarget :?> Browser.Element\n        let rect = element.getBoundingClientRect ()\n        let x = (rect.left |> int) + (Browser.window.scrollX |> int)\n        let y = (rect.bottom |> int) + (Browser.window.scrollY |> int)\n        TriggerMessage.Click (x, y)\n\n    let menuTrigger ((req, (Button btn)): Trigger) =\n        let btnOpt, btnChi = btn\n        let withClick =\n           P.Unmerged btnOpt\n            |> P.addProps\n                [ P.ClassName \"btn\"\n                  P.OnClick (onTriggerClicked >> req) ]\n            |> P.merge\n        R.a withClick btnChi\n\n    type Position =\n        Position of int * int\n\n    type IsOpen =\n        | IsOpen of bool\n        interface P.IHTMLProp\n\n    type MenuContainerRequired =\n        Position * IsOpen\n\n    type MenuContainerChildren = ReactElement []\n\n    type private MenuContainer =\n        P.HTMLProps * MenuContainerRequired * MenuContainerChildren\n\n    let menuContainer (opt, (Position (x, y), IsOpen opn), chi) =\n        if opn then\n            opt\n            |> P.addProps\n                [ P.ClassName \"menu\"\n                  P.Style\n                      [ P.Position \"absolute\"\n                        P.Left x\n                        P.Top y ] ]\n            |> P.merge\n            |> R.ul <| chi\n            |> Some\n        else None\n        |> R.ofOption\n\n    type MenuChild =\n    | Item of MenuItem\n    | Divider of MenuDivider\n\n    type MenuChildren =\n        MenuChild list\n\n    type MenuRequired =\n        Trigger of Button\n\n    type Menu =\n        P.HTMLProps * MenuRequired * MenuChildren\n\n    type State =\n        { IsOpen: bool\n          Position: int * int }\n\n    let private init (opt, req) =\n        let maybeOpen =\n            opt\n            |> List.tryFind\n                (fun (prop: P.IHTMLProp) ->\n                    match prop with\n                    | :? IsOpen as opt ->\n                        match opt with\n                        | IsOpen opn -> true\n                    | _ -> false)\n        { IsOpen = maybeOpen.IsSome\n          Position = 0, 0 }\n\n    let private update message state =\n        match message with\n        | TriggerMessage.Click (x, y) ->\n            { state with\n                IsOpen = not state.IsOpen\n                Position = x, y }\n\n    let private view (model) dispatch =\n        let (opt: P.HTMLProps), (Trigger trig) = model.props\n        R.fragment [] \n            [ menuTrigger (dispatch, Button trig)\n              menuContainer\n                (P.Unmerged [], (Position model.state.Position, IsOpen model.state.IsOpen), \n                 model.children)\n              |> Portal.ƒ \"menu-container\" ]\n\n    let menu ((opt, req, chi): Menu) =\n        R.reactiveCom\n            init\n            update\n            view\n            \"\"\n            (opt, req)\n            (Seq.map\n                (function\n                 | Item elements -> menuItem elements\n                 | Divider divider -> menuDivider divider)\n                chi)\n                ","﻿module MenuPage\n\nopen Fabulosa.Menu\nopen Fabulosa.Icon\nopen Fabulosa.Docs\nopen Renderer\nmodule R = Fable.Helpers.React\nopen Fable.Import.React\n                \n(*** define: menu-default-sample ***)\nlet def =\n    menu\n        ([], Trigger ([], [ icon ([], Kind Menu) ]),\n         [ Item [ R.a [] [ R.str \"Links\" ] ]\n           Divider ([])\n           Item [ R.a [] [ R.str \"Link 1\" ] ]\n           Divider ([ Text \"DIVIDER\" ])\n           Item [ R.a [] [ R.str \"Link 2\" ] ] ])\n(*** hide ***)\nlet render () =\n    tryMount \"menu-default-demo\" def\n    tryMount \"menu-params-table\"\n        (PropTable.paramTable\n            None\n            (Some typeof<MenuRequired>)\n            (Some typeof<MenuChild>))\n(**\n\n<div id=\"menus\">\n\n<h2 class=\"s-title\">Menus</h2>\n\nMenus are vertical list of links or\nbuttons for actions and navigation.\n\nThe menu is rendered to its own container through\nReact Portals.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"menu-params-table\"></div>\n\n#### Example\n\nA simple menu with default parametes.\n\n<div class=\"demo\" style=\"width: 50%\" id=\"menu-default-demo\"></div>\n\n*)\n(*** include: menu-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Breadcrumb =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open Fable.Import.React\n    module P = R.Props\n    \n    type Href = string\n        \n    type BreadcrumbLinkRequired =\n        | Href of Href\n\n    type BreadcrumbLink =\n        P.HTMLProps * BreadcrumbLinkRequired * FabulosaText\n\n    let breadcrumbLink ((opt, (Href hrf), (Text txt)): BreadcrumbLink) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"breadcrumb-item\")\n        |> P.merge\n        |> R.div\n        <| [ R.a [ P.Href hrf ] [ R.str txt ] ]\n\n    type BreadcrumbTextOptional = P.HTMLProps\n    \n    type BreadcrumbText =\n        BreadcrumbTextOptional * FabulosaText\n\n    let breadcrumbText ((opt, (Text txt)): BreadcrumbText) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"breadcrumb-item\")\n        |> P.merge\n        |> R.div\n        <| [ R.str txt ]\n    \n    type BreadcrumbElementsChildren = ReactElement list\n\n    type BreadcrumbElements =\n        P.HTMLProps * BreadcrumbElementsChildren\n\n    let breadcrumbElements ((opt, chi): BreadcrumbElements) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"breadcrumb-item\")\n        |> P.merge\n        |> R.div\n        <| chi\n\n    type BreadcrumbOptional = P.HTMLProps\n    \n    type BreadcrumbChildren =\n        | Elements of BreadcrumbElements\n        | Link of BreadcrumbLink\n        | String of BreadcrumbText\n\n    type Breadcrumb =\n        BreadcrumbOptional * BreadcrumbChildren list\n\n    let breadcrumb ((opt, chi): Breadcrumb) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"breadcrumb\")\n        |> P.merge\n        |> R.ul\n        <| List.map\n            (function\n             | Elements elements -> breadcrumbElements elements\n             | Link link -> breadcrumbLink link\n             | String text -> breadcrumbText text)\n            chi\n","﻿module BreadcrumbPage\n\nopen Fabulosa\nopen Fabulosa.Breadcrumb\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\n\n(*** define: breadcrumbs-demo ***)\nlet element =\n    breadcrumb ([],\n        [ String ([], Text \"Text\")\n          Link ([], Href \"#\", Text \"Link\")\n          Elements ([], [ R.str \"Hey: \"; R.a [] [ R.str \"Jude\" ] ]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"breadcrumbs-demo\" element\n    tryMount \"breadcrumb-params-table\"\n        (PropTable.paramTable\n            (Some typeof<BreadcrumbOptional>)\n            None\n            (Some typeof<BreadcrumbChildren>))\n    tryMount \"breadcrumb-string-params-table\"\n        (PropTable.paramTable\n            (Some typeof<BreadcrumbTextOptional>)\n            None\n            (Some typeof<FabulosaText>))\n    tryMount \"breadcrumb-link-params-table\"\n        (PropTable.paramTable\n            None\n            (Some typeof<BreadcrumbLinkRequired>)\n            (Some typeof<FabulosaText>))\n(**\n\n<div id=\"breadcrumbs\">\n\n<h2 class=\"s-title\">Breadcrumbs</h2>\n\nBreadcrumbs are used as navigational\nhierarchies to indicate current location.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"breadcrumb-params-table\"></div>\n\n#### Text Parameters\n\n<div class=\"props-table\" id=\"breadcrumb-string-params-table\"></div>\n\n#### Link Parameters\n\n<div class=\"props-table\" id=\"breadcrumb-link-params-table\"></div>\n\n#### Example\n\nA breadcrumb with different kinds of children\n\n<div class=\"demo\" id=\"breadcrumbs-demo\"></div>\n\n*)\n(*** include: breadcrumbs-demo ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule rec Nav =\n\n    open Fabulosa.Extensions\n    open Fable.Helpers.React.Props\n    module R = Fable.Helpers.React\n\n    type NavItem =\n        HTMLProps * FabulosaText\n\n    let navItem ((opt, (Text txt)): NavItem) =\n        R.li\n            [ ClassName \"nav-item\" ]\n            [ R.a opt [ R.str txt ] ]\n\n    type NavChildren = NavChild list\n\n    type Nav = HTMLProps * NavChildren\n\n    type NavChild =\n    | Item of NavItem\n    | Nav of Nav\n\n    let nav ((opt, chi): Nav) =\n        Unmerged opt\n        |> addProp (ClassName \"nav\")\n        |> merge\n        |> R.ul\n        <| Seq.map\n            (function\n             | Item item -> navItem item\n             | Nav (sOpt, sChi) -> nav (sOpt, sChi))\n            chi\n","﻿module NavPage\n\nopen Fabulosa\nopen Fabulosa.Nav\nopen Fabulosa.Docs\nopen Renderer\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Fable.Import.React\n                \n(*** define: nav-default-sample ***)\nlet def =\n    nav ([],\n      [ Item ([], Text \"Item One\")\n        Nav ([], [ Item ([], Text \"Item One Nested\") ])\n        Item ([], Text \"Item Two\") ])\n(*** hide ***)\nlet render () =\n    tryMount \"nav-default-demo\" def\n    tryMount \"nav-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<NavChild>))\n    tryMount \"nav-item-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<FabulosaText>))\n(**\n\n<div id=\"navs\">\n\n<h2 class=\"s-title\">Navs</h2>\n\nNavs is the default component\nfor navigation lists\n\n#### Parameters\n\n<div class=\"props-table\" id=\"nav-params-table\"></div>\n\n#### Item Parameters\n\n<div class=\"props-table\" id=\"nav-item-params-table\"></div>\n\n#### Example\n\nThe default nav component.\n\n<div class=\"demo\" style=\"width: 50%\" id=\"nav-default-demo\"></div>\n\n*)\n(*** include: nav-default-sample ***)\n(**\n\n</div>\n\n*)","namespace Fabulosa\n\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Fabulosa.Extensions\nopen Fabulosa.Button\n\nmodule Modal =\n    open Fable.Import.React\n    open Extensions.Fable.Helpers.React.Props\n    \n    type HeaderChildren =\n        | Elements of ReactElement list\n        | Text of string\n        \n    type FooterChildren =\n        | Elements of ReactElement list\n        | Buttons of Button list\n    \n    type HeaderData = HTMLProps * HeaderChildren    \n    type FooterData = HTMLProps * FooterChildren\n            \n    type ModalHeader =\n        | Header of HeaderData option\n        \n    type ModalFooter =\n        | Footer of FooterData option\n    \n    let header (header: HeaderData) =\n        let props, children = header\n        let children =\n            match children with \n            | Text t -> [R.div [ClassName \"modal-title h5\"] [R.str t]]\n            | HeaderChildren.Elements e -> [R.div [ClassName \"modal-title\"] e]\n        R.span props children\n\n    let footer (footer: FooterData) =\n        let props, children = footer\n        let children =\n            match children with\n            | Elements e -> e\n            | Buttons b -> b |> List.map button \n     \n        props\n        |> Unmerged\n        |> addProp (ClassName \"modal-footer\")\n        |> merge\n        |> R.div \n        <| children\n    \n    type Size =\n    | Small\n    | Medium\n    | Large\n    \n    type OnClose = MouseEvent -> unit\n   \n    type ModalOptional =\n        | OnRequestClose of OnClose\n        | Size of Size\n        | Open of bool\n        interface IHTMLProp\n           \n    type ModalBody = \n        | Body of ReactElement list \n    \n    type ModalChildren = ModalHeader * ModalBody * ModalFooter\n\n    type Modal = HTMLProps * ModalChildren\n\n    let modalOverLay onRequestClose =\n        [ ClassName \"modal-overlay\" :> IHTMLProp]\n        |> Unmerged\n        |> addPropOpt onRequestClose\n        |> merge\n        |> R.a\n        <| []\n    \n    let ƒheader headerData (onRequestClose: IHTMLProp option) =\n        match headerData, onRequestClose with \n        | Some h, Some onClick -> R.div [ClassName \"modal-header\"] [R.a [ClassName \"btn btn-clear float-right\"; onClick] []; header h] |> Some\n        | Some h, None -> R.div [ClassName \"modal-header\"] [ header h] |> Some\n        | None, Some onClick -> R.div [ClassName \"modal-header\"] [R.a [ClassName \"btn btn-clear float-right\"; onClick] []] |> Some\n        | None, None -> None\n        \n    let ƒfooter =\n        function\n        | Some footerElement -> R.div [ClassName \"modal-footer\"] [footer footerElement] |> Some\n        | None -> None\n    \n    let private onRequestClose =\n        fun (prop: IHTMLProp) ->\n            match prop with\n            | :? ModalOptional as opt ->\n                match opt with\n                | OnRequestClose fn -> OnClick fn :> IHTMLProp |> Some\n                | _ -> None\n            | _ -> None\n        |> List.tryPick\n    \n    let private isOpen props =\n        let getOpenValue =\n            fun (prop: IHTMLProp) ->\n                match prop with\n                | :? ModalOptional as opt ->\n                    match opt with\n                    | Open o -> Some o                        \n                    | _ -> None\n                | _ -> None\n        props\n        |> List.tryPick getOpenValue\n        |> Option.defaultValue false \n    \n    let private sizeClass =\n        function\n        | Small -> ClassName \"modal-sm\"                        \n        | Medium -> ClassName \"modal-md\"                        \n        | Large -> ClassName \"modal-lg\"                        \n    \n    let size (props: HTMLProps) =\n         let getSize =\n             fun (prop: IHTMLProp) ->\n                 match prop with\n                 | :? ModalOptional as opt ->\n                     match opt with\n                     | Size s -> Some s                        \n                     | _ -> None\n                 | _ -> None\n         props\n         |> List.tryPick getSize\n         |> Option.defaultValue Medium \n    \n    let modal (modal: Modal) =\n        let props, children = modal\n        let (Header header), (Body body), (Footer footer) = children\n        let onRequestClose = onRequestClose props\n        \n        match isOpen props with \n        | true ->\n            props\n            |> Unmerged\n            |> addProp (ClassName \"modal active\")\n            |> addProp (props |> size |> sizeClass)\n            |> merge\n            |> R.div \n            <| [\n                modalOverLay onRequestClose\n                R.div [ClassName \"modal-container\"] [\n                    ƒheader header onRequestClose |> R.ofOption\n                    R.div [ClassName \"modal-body\"] body\n                    ƒfooter footer |> R.ofOption\n                ]\n            ] |> Portal.ƒ \"modal-portal\"\n        | false -> null\n    \n    let addProps (p : HTMLProps) (modal: Modal) =\n        let props, children = modal\n        let props: HTMLProps = \n            props\n            |> Unmerged\n            |> addProps p\n            |> merge\n            \n        props, children\n    \n    let setOpen newValue (modal: Modal)  =\n        let props, children = modal\n        let props: HTMLProps = \n            props\n            |> Unmerged\n            |> addProp (Open newValue)\n            |> merge\n            \n        props, children\n    \n    let setOnRequestClose newValue (modal: Modal)  =\n        let props, children = modal\n        let props: HTMLProps = \n            props\n            |> Unmerged\n            |> addProp (OnRequestClose newValue)\n            |> merge\n            \n        props, children\n        \n\n    ","module ModalPage\n\nopen Fabulosa\nopen Fabulosa.Docs\nopen Fabulosa.Button\nopen Fabulosa.Grid\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\nopen Fabulosa.Figure\nopen Fabulosa.Modal\nopen Fabulosa.Button\n\nlet button1: Button = ([], [R.str \"Click me!\"])\nlet header: HeaderData option = (Some ([], Text \"A quote\"))\nlet body = [ R.str \"History repeats itself, first as tragedy, second as farce.\" ]\nlet footer = Some ([], Buttons [ button1 ]) \n(*** define: modal-sample ***)\nlet def =\n    modal ([], \n        (Header header, \n         Body body, \n         Footer footer))\n(*** hide ***)\nlet modalData: Modal = \n    [], \n    ( Header header, \n      Body body, \n      Footer footer ) \n    \nmodule Container =\n\n    open Fabulosa.Extensions\n    open Fable.Import\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    open Fable.Helpers.React.ReactiveComponents\n    module P = R.Props\n    \n    type State = { Opened: bool}\n    type Message = \n        | Open\n        | Close\n    \n    type private Dispatch = Message -> unit\n    \n    let private init _ = { Opened = false }\n    \n    let private update message state =\n        match message with \n        | Open -> { state with Opened = true }\n        | Close -> { state with Opened = false }\n    \n    let private view (model: Model<Modal * Size, State>) (dispatch: Dispatch) =\n        let props, size = model.props\n        \n        let modalData = \n            props\n            |> Modal.addProps \n                [ Modal.Open model.state.Opened \n                  Size size  \n                  OnRequestClose (fun _ -> dispatch Close) ]\n                \n        R.fragment [][\n            button ([ Button.Kind Primary; P.OnClick (fun _ -> dispatch Open) ], [R.str (sprintf \"Open %A Modal\" size)]) \n            modal modalData\n        ]\n    \n    let container (content : Modal * Size) =\n        R.reactiveCom\n            init\n            update\n            view\n            \"\"\n            content\n            []\n            \nlet style = P.Style [P.Background \"#f8f9fa\"; P.TextAlign \"center\"; P.Padding \"20px\"]\nlet demo = R.div [style] [ \n        grid\n            ([],\n             [ Row\n                 ([],\n                  [ Column\n                      ([ Grid.Size 4; SMSize 12 ],\n                       [ Container.container (modalData, Small) ])\n                    Column\n                      ([ Grid.Size 4; SMSize 12 ],\n                       [ Container.container (modalData, Medium)  ])\n                    Column\n                      ([ Grid.Size 4; SMSize 12 ],\n                       [ Container.container (modalData, Large)  ]) ]) ])\n    ]\n\nlet render () =\n    tryMount \"modal-demo\" demo\n    tryMount \"modal-props-table\"\n        (PropTable.paramTable\n            (Some typeof<ModalOptional>)\n            None\n            (Some typeof<ModalChildren>))\n(**\n\n<div id=\"modal\">\n\n<h2 class=\"s-title\">Modal</h2>\n\nModals are flexible dialog prompts.\n\n#### Modal Parameters\n\n<div class=\"props-table\" id=\"modal-props-table\"></div>\n\n#### Example\n\nModals come in 3 different sizes:\n\n<div class=\"demo\" id=\"modal-demo\"></div>\n\n*)\n(*** include: modal-sample ***)\n(**\n\n</div>\n\n*)\n","namespace Fabulosa\n\nmodule Pagination =\n\n    open Fable.Import\n    open Fabulosa.Extensions\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type PaginationItemOptional =\n        | Disabled\n        interface P.IHTMLProp\n\n    type OnPageChanged =\n        | OnPageChanged of (int -> unit)\n\n    type PaginationItemRequired =\n        OnPageChanged * FabulosaValue\n\n    type PaginationItem =\n        P.HTMLProps * PaginationItemRequired * FabulosaText\n\n    let private (|Int|_|) str =\n       match System.Int32.TryParse(str) with\n       | (true, int) -> Some int\n       | _ -> None\n\n    let private onClick (e: MouseEvent) =\n        let element = e.currentTarget :?> Browser.HTMLElement\n        match element.getAttribute \"data-value\" with\n        | Int value -> value\n        | _ -> -99\n\n    let private propToClassName (prop: P.IHTMLProp) =\n        match prop with\n        | :? PaginationItemOptional as opt ->\n            match opt with\n            | Disabled -> P.className \"disabled\"\n        | :? FabulosaActive as opt ->\n            match opt with\n            | Active -> P.className \"active\"\n        | _ -> prop\n\n    let paginationItem ((opt, (OnPageChanged pc, Value v), (Text txt)): PaginationItem) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"page-item\")\n        |> P.map propToClassName\n        |> P.merge\n        |> R.li\n        <| [ R.a\n               [ P.OnClick (onClick >> pc)\n                 P.Data (\"value\", v)\n                 P.Href \"#\" ]\n               [ R.str txt ] ]\n\n    type PaginationChild =\n        | Item of PaginationItem\n\n    type Pagination =\n        P.HTMLProps * PaginationChild list\n\n    let pagination ((opt, chi): Pagination) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"pagination\")\n        |> P.merge\n        |> R.ul\n        <| Seq.map\n            (fun (Item item) -> paginationItem item)\n            chi\n","﻿module PaginationPage\n\nopen Fabulosa\nopen Fabulosa.Pagination\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Fable.Import.JS\nopen Renderer\nopen Microsoft.FSharp.Core\n\n(*** define: pagination-default-sample ***)\nlet pagCh = OnPageChanged (fun page -> console.log page)\n\nlet pages =\n    seq { 1 .. 9 }\n    |> Seq.map\n         (fun n ->\n            if n = 5 then Item ([ Active ], (pagCh, Value n), Text (string n))\n            else Item ([], (pagCh, Value n), Text (string n)))\n    |> Seq.toList\n\nlet def =\n    pagination\n        ([],\n         Item ([], (pagCh, Value -2), Text \"Prev\")\n         :: pages @ [ Item ([], (pagCh, Value -1), Text \"Next\") ])\n(*** hide ***)\nlet render () =\n    tryMount \"pagination-default-demo\" def\n    tryMount \"pagination-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<PaginationChild>))\n    tryMount \"pagination-item-params-table\"\n        (PropTable.paramTable\n            (Some typeof<PaginationItemOptional>)\n            (Some typeof<PaginationItemRequired>)\n            None)\n(**\n\n<div id=\"pagination\">\n\n<h2 class=\"s-title\">Pagination</h2>\n\nThe pagination component is fully customizable,\nwith props for active, disabled, and a callback\nthat gives you the clicked page\n\n#### Parameters\n\n<div class=\"props-table\" id=\"pagination-params-table\"></div>\n\n#### Page Item\n\nPage items are child elements for pagination\n\n#### Parameters\n\n<div class=\"props-table\" id=\"pagination-item-params-table\"></div>\n\n#### Example\n\nA simple pagination component that shows all pages.\nIf you want collapsed pages you can use the disabled prop.\n\n<div class=\"demo\" id=\"pagination-default-demo\"></div>\n\n*)\n(*** include: pagination-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule PageNav =\n\n    open Fabulosa.Extensions\n    open Fable.Import.React\n    module R = Fable.Helpers.React\n    module P = R.Props\n\n    type Action =\n        | Link of string\n        | OnPageChanged of (MouseEvent -> unit)\n\n    type Title =\n        Title of string\n\n    type Subtitle =\n        Subtitle of string\n\n    type PageNavItemChildren = Title * Subtitle * Action\n\n    type PageNavItem =\n        P.HTMLProps * PageNavItemChildren\n\n    type PageNavPrev =\n        | Prev of (PageNavItem option)\n\n    type PageNavNext =\n        | Next of (PageNavItem option)\n\n    type PageNavChildren = PageNavPrev * PageNavNext\n\n    type PageNav = P.HTMLProps * PageNavChildren\n\n    let private action =\n        function\n        | Link href -> [ (P.Href href) :> P.IHTMLProp ]\n        | OnPageChanged fn -> [ (P.OnClick fn) :> P.IHTMLProp ]\n\n    let pageNavItem kind ((opt, (Title t, Subtitle st, act))) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName (\"page-item page-\" + kind))\n        |> P.merge\n        |> R.li\n        <| [ R.a\n                (action act)\n                [ R.div\n                    [ P.ClassName \"page-item-subtitle\" ]\n                    [ R.str st ]\n                  R.div\n                    [ P.ClassName \"page-item-title h5\" ]\n                    [ R.str t ] ] ]\n\n    let pageNav ((opt, (Prev prv, Next nxt)): PageNav) =\n        P.Unmerged opt\n        |> P.addProp (P.ClassName \"pagination\")\n        |> P.merge\n        |> R.ul <|\n        [ prv\n          |> Option.map (pageNavItem \"prev\")\n          |> R.ofOption\n          nxt\n          |> Option.map (pageNavItem \"next\")\n          |> R.ofOption ]\n","﻿module PageNavPage\n\nopen Fabulosa.PageNav\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Fable.Import.JS\nopen Renderer\nopen Microsoft.FSharp.Core\n\n(*** define: pagenav-default-sample ***)\nlet def =\n    pageNav ([],\n      (Prev\n         (Some ([],\n            (Title \"Page 1\",\n             Subtitle \"Previous\",\n             Link \"\"))),\n       Next\n         (Some([],\n            (Title \"Page 3\",\n             Subtitle \"Next\",\n             Link \"\")))))\n(*** hide ***)\nlet render () =\n    tryMount \"pagenav-default-demo\" def\n    tryMount \"pagenav-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<PageNavChildren>))\n    tryMount \"pagenav-item-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<PageNavItemChildren>))\n(**\n\n<div id=\"pagenav\">\n\n<h2 class=\"s-title\">Page Nav</h2>\n\nThe page nav component is used for navigation with\nprevious and next pages only. \n\n#### Parameters\n\n<div class=\"props-table\" id=\"pagenav-params-table\"></div>\n\n#### Item Parameters\n\n<div class=\"props-table\" id=\"pagenav-item-params-table\"></div>\n\n#### Example\n\nA simple pagenav component with a previous and\nnext page.\n\n<div class=\"demo\" id=\"pagenav-default-demo\"></div>\n\n*)\n(*** include: pagenav-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Tab =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type TabItem =\n        HTMLProps * ReactElement list\n\n    let private itemPropToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaActive as opt ->\n            match opt with\n            | Active -> className \"active\"\n        | _ -> prop\n\n    let tabItem ((opt, chi): TabItem) =\n        Unmerged opt\n        |> addProp (ClassName \"tab-item\")\n        |> map itemPropToClassName\n        |> merge\n        |> R.li <| chi\n\n    type TabOptional =\n        | Block\n        interface IHTMLProp\n\n    type TabChild =\n        Item of TabItem\n\n    type Tab = HTMLProps * TabChild list\n\n    let private propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? TabOptional as opt ->\n            match opt with\n            | Block -> className \"tab-block\"\n        | _ -> prop\n\n    let tab ((opt, chi): Tab) =\n        Unmerged opt\n        |> addProp (ClassName \"tab\")\n        |> map propToClassName\n        |> merge\n        |> R.ul\n        <| (List.map (fun (Item item) -> tabItem item) chi)\n","﻿namespace Fabulosa\n\nmodule Panel =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Tab\n    open Fabulosa.Pagination\n    open Fabulosa.Breadcrumb\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type PanelHeaderChild =\n        | Title of string\n        | Subtitle of string\n        | Elements of ReactElement list\n\n    type PanelHeaderChildren =\n        PanelHeaderChild list\n\n    type PanelHeader =\n        HTMLProps * PanelHeaderChildren\n\n    let panelHeaderChildren =\n        function\n        | Title title ->\n            R.div\n                [ ClassName \"panel-subtitle\" ]\n                [ R.str title ]\n        | Subtitle subtitle ->\n            R.div\n                [ ClassName \"panel-subtitle\" ]\n                [ R.str subtitle ]\n        | Elements elements ->\n            R.fragment [] elements\n\n    let panelHeader ((opt, chi): PanelHeader) =\n        Unmerged opt\n        |> addProp (ClassName \"panel-header\")\n        |> merge\n        |> R.div\n        <| [ R.div\n               [ ClassName \"panel-title h6\"]\n               (Seq.map panelHeaderChildren chi) ]\n\n    type PanelNavChild =\n        | Breadcrumb of Breadcrumb\n        | Pagination of Pagination\n        | Tab of Tab\n\n    type PanelNav =\n        HTMLProps * PanelNavChild\n\n    let private panelNavChild =\n        function\n        | Breadcrumb bc -> breadcrumb bc\n        | Pagination pg -> pagination pg\n        | Tab tb -> tab tb\n\n    let panelNav ((opt, chi): PanelNav) =\n        Unmerged opt\n        |> addProp (ClassName \"panel-nav\")\n        |> merge\n        |> R.div\n        <| [ panelNavChild chi ]\n\n    type PanelBody =\n        HTMLProps * ReactElement list\n\n    let panelBody ((opt, chi): PanelBody) =\n        Unmerged opt\n        |> addProp (ClassName \"panel-body\")\n        |> merge\n        |> R.div <| chi\n\n    type PanelFooter =\n        HTMLProps * ReactElement list\n\n    let panelFooter ((opt, chi): PanelFooter) =\n        Unmerged opt\n        |> addProp (ClassName \"panel-footer\")\n        |> merge\n        |> R.div <| chi\n\n    type PanelChild =\n        | Header of PanelHeader\n        | Nav of PanelNav\n        | Body of PanelBody\n        | Footer of PanelFooter\n\n    type Panel =\n        HTMLProps * PanelChild list\n\n    let private panelChild =\n        function\n        | Header header -> panelHeader header\n        | Nav nav -> panelNav nav\n        | Body body -> panelBody body\n        | Footer footer -> panelFooter footer\n\n    let panel ((opt, chi): Panel) =\n        Unmerged opt\n        |> addProp (ClassName \"panel\")\n        |> merge\n        |> R.div\n        <| Seq.map panelChild chi\n","﻿module PanelPage\n\nopen Fabulosa\nopen Fabulosa.Panel\nopen Fabulosa.Docs\nopen Fabulosa.Button\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\nopen Microsoft.FSharp.Core\nopen Fabulosa.InputGroup\n\nlet header =\n    [ R.str \"Comments\" ]\n    \nlet body =\n    [ R.div []\n    [ R.p [] [ R.str\n          \"Earth's Mightiest Heroes joined\n          forces to take on threats that were\n          too big for any one hero to tackle...\" ]\n      R.p [] [ R.str\n          \"Earth's Mightiest Heroes joined\n          forces to take on threats that were\n          too big for any one hero to tackle...\" ]\n      R.p [] [ R.str\n          \"Earth's Mightiest Heroes joined\n          forces to take on threats that were\n          too big for any one hero to tackle...\" ]\n      R.p [] [ R.str\n          \"Earth's Mightiest Heroes joined\n          forces to take on threats that were\n          too big for any one hero to tackle...\" ]\n      R.p [] [ R.str\n          \"Earth's Mightiest Heroes joined\n          forces to take on threats that were\n          too big for any one hero to tackle...\" ] ] ]\n\nlet footer =\n    [ inputGroup ([],\n        (OptText None,\n         [ Input [ P.Placeholder \"Say Hello!\" ] ],\n         OptButton (Some([ Kind Primary ], [ R.str \"Send\" ])))) ]\n\n(*** define: panel-default-sample ***)\nlet def =\n    panel ([],\n      [ Header ([], [ Title \"Comments\" ])\n        Body ([], body)\n        Footer ([], footer) ])\n(*** hide ***)\nlet render () =\n    tryMount \"panel-default-demo\" (R.div [ P.Style [ P.CSSProp.Width \"50%\" ] ] [ def ])\n    tryMount \"panel-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<PanelChild>))\n(**\n\n<div id=\"panel\">\n\n<h2 class=\"s-title\">Panel</h2>\n\nPanels are flexible view container with\nauto-expand content section\n\n#### Parameters\n\n<div class=\"props-table\" id=\"panel-params-table\"></div>\n\n#### Example\n\nA simple panel component with a header, body, and footer\n\n<div class=\"demo\" id=\"panel-default-demo\"></div>\n\n*)\n(*** include: panel-default-sample ***)\n(**\n\n</div>\n\n*)","namespace Fabulosa\n\nmodule Popover =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type Position =\n        | Top\n        | Right\n        | Bottom\n        | Left\n\n    type PopoverOptional =\n        | Position of Position\n        interface IHTMLProp\n\n    type PopoverTrigger =\n        Trigger of ReactElement list\n\n    type PopoverContent =\n        Content of ReactElement list\n\n    type PopoverChildren =\n        PopoverTrigger * PopoverContent\n\n    type Popover =\n        HTMLProps * PopoverChildren\n\n    let private propToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? PopoverOptional as opt ->\n            match opt with\n            | Position Top -> className \"\"\n            | Position Right -> className \"popover-right\"\n            | Position Bottom -> className \"popover-bottom\"\n            | Position Left -> className \"popover-left\"\n        | _ -> prop\n\n    let popover ((opt, (Trigger tri, Content con)): Popover) =\n        Unmerged opt\n        |> addProp (ClassName \"popover\")\n        |> map propToClassName\n        |> merge\n        |> R.div\n        <| [ R.fragment [] tri\n             R.div [ClassName \"popover-container\"] con ] \n","module PopoverPage\n\nopen Fabulosa.Popover\nopen Fabulosa.Button\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\nopen Microsoft.FSharp.Core\n\n(*** define: popover-default-sample ***)\nlet def =\n    popover ([ Position Right ],\n        (Trigger [ button ([], [ R.str \"Popover\" ]) ],\n         Content [ CardPage.def ]))\n(*** hide ***)\nlet render () =\n    tryMount \"popover-default-demo\" def\n    tryMount \"popover-params-table\"\n        (PropTable.paramTable\n            (Some typeof<PopoverOptional>)\n            None\n            (Some typeof<PopoverChildren>))\n(**\n\n<div id=\"popover\">\n\n<h2 class=\"s-title\">Popover</h2>\n\nPopovers are small overlay content containers.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"popover-params-table\"></div>\n\n#### Example\n\nA simple popover component that pops upwards.\n\n<div class=\"demo\" id=\"popover-default-demo\"></div>\n\n*)\n(*** include: popover-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Step =\n\n    open Fabulosa.Extensions\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type StepItem =\n        HTMLProps * ReactElement list\n\n    let private hasActive (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaActive as opt ->\n            match opt with\n            | Active -> true\n        | _ -> false\n\n    let private itemPropToClassName (prop: IHTMLProp) =\n        match prop with\n        | :? FabulosaActive as opt ->\n            match opt with\n            | Active -> className \"active\"\n        | _ -> prop\n\n    let stepItem ((opt, chi): StepItem) =\n        let withActive, withoutActive =\n            List.partition hasActive opt\n        Unmerged withActive\n        |> addProp (ClassName \"step-item\")\n        |> map itemPropToClassName\n        |> merge\n        |> R.li\n        <| [ R.a withoutActive chi ]\n\n    type StepChild =\n        Item of StepItem\n\n    type Step =\n        HTMLProps * StepChild list\n\n    let step ((opt, chi): Step) =\n        Unmerged opt\n        |> addProp (ClassName \"step\")\n        |> merge\n        |> R.div\n        <| Seq.map (fun (Item item) -> stepItem item) chi\n","﻿module StepPage\n\nopen Fabulosa\nopen Fabulosa.Step\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nopen Fable.Import.React\nopen Renderer\n\n(*** define: step-default-sample ***)\nlet def =\n    step ([],\n      [ Item ([], [ R.str \"Step 1\" ])\n        Item ([ Active ], [ R.str \"Step 2\" ])\n        Item ([], [ R.str \"Step 3\" ]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"step-default-demo\" def\n    tryMount \"step-params-table\"\n        (PropTable.paramTable\n            None\n            None\n            (Some typeof<StepChild>))\n(**\n\n<div id=\"step\">\n\n<h2 class=\"s-title\">Step</h2>\n\nSteps are progress indicators of a\nsequence of task steps\n\n#### Parameters\n\n<div class=\"props-table\" id=\"step-params-table\"></div>\n\n#### Example\n\nA simple step component with three steps\nand an active step\n\n<div class=\"demo\" id=\"step-default-demo\"></div>\n\n*)\n(*** include: step-default-sample ***)\n(**\n\n</div>\n\n*)","﻿module TabPage\n\nopen Fabulosa\nopen Fabulosa.Badge\nopen Fabulosa.Tab\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\nopen Microsoft.FSharp.Core\n\n(*** define: tab-default-sample ***)\nlet def =\n    tab ([],\n      [ Item ([], [ R.a [] [ R.str \"Tab 1\" ] ])\n        Item ([ Active ], [ R.a [] [ R.str \"Tab 2\" ] ])\n        Item ([],\n          [ badge ([], Value 1, Anchor ([], [ R.str \"Tab 3\" ])) ]) ])\n(*** hide ***)\nlet render () =\n    tryMount \"tab-default-demo\" def\n    tryMount \"tab-params-table\"\n        (PropTable.paramTable\n            (Some typeof<TabOptional>)\n            None\n            (Some typeof<TabChild>))\n(**\n\n<div id=\"tab\">\n\n<h2 class=\"s-title\">Tab</h2>\n\nTabs enable quick switch between different views\n\n#### Parameters\n\n<div class=\"props-table\" id=\"tab-params-table\"></div>\n\n#### Example\n\nA simple tab component\n\n<div class=\"demo\" id=\"tab-default-demo\"></div>\n\n*)\n(*** include: tab-default-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Tile =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Icon\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type TileContentTitle =\n        Title of string\n\n    type TileContentSubtitle =\n        Subtitle of string\n\n    type private TileContentChildren =\n        TileContentTitle * TileContentSubtitle\n\n    type private TileContent =\n        HTMLProps * TileContentChildren\n\n    let tileContent (comp: TileContent) =\n        let opt, (Title ttl, Subtitle sttl) = comp\n        Unmerged opt\n        |> addProp (ClassName \"tile-content\")\n        |> merge\n        |> R.div\n        <| [ R.p\n               [ ClassName \"tile-title\" ]\n               [ R.str ttl ]\n             R.p\n               [ ClassName \"tile-subtitle text-gray\" ]\n               [ R.str sttl ] ]\n\n    type private TileAction =\n        HTMLProps * ReactElement list\n\n    let tileAction (comp: TileAction) =\n        let opt, chi = comp\n        Unmerged opt\n        |> addProp (ClassName \"tile-action\")\n        |> merge\n        |> R.div <| chi\n\n    type TileOptional =\n        | Compact\n        | Icon of Icon\n        interface IHTMLProp\n\n    type Content =\n        Content of TileContent\n\n    type Action =\n        Action of TileAction\n\n    type TileChildren =\n        Content * Action\n\n    type private Tile =\n        HTMLProps * TileChildren\n\n    let private compact (prop: IHTMLProp) =\n        match prop with\n        | :? TileOptional as opt ->\n            match opt with\n            | Compact -> className \"tile-centered\"\n            | _ -> prop\n        | _ -> prop\n\n    let private tileIcon (props: HTMLProps) =\n        props\n        |> List.tryPick\n            (function\n            | :? TileOptional as opt ->\n                match opt with\n                | Icon icn ->\n                    Some (R.div [ ClassName \"tile-icon example-tile-icon\" ] [ icon icn ])\n                | _ -> None\n            | _ -> None)\n        |> R.ofOption\n\n    let tile (comp: Tile) =\n        let opt, (Content con, Action act) = comp\n        Unmerged opt\n        |> addProp (ClassName \"tile\")\n        |> map compact\n        |> merge\n        |> R.div\n        <| [ tileIcon opt\n             tileContent con\n             tileAction act ]\n","﻿module TilePage\n\nopen Fabulosa.Docs\nopen Fabulosa.Tile\nopen Fabulosa.Button\nopen Fabulosa.Icon\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\n\n(*** define: tile-default-sample ***)\nlet def =\n    tile ([Icon ([], Kind People)],\n      (Content ([],\n         (Title \"The Avengers\",\n          Subtitle\n            \"Earth's Mightiest Heroes joined\n             forces to take on threats that were too\n             big for any one hero to tackle...\")),\n       Action ([],\n         [ button\n             ([ ButtonOptional.Kind Primary ],\n              [ R.str \"Action\" ]) ]) ))\n(*** define: tile-compact-sample ***)\nlet compact =\n    tile([ Compact; Icon ([], Kind Mail) ],\n      (Content ([],\n         (Title \"fabulosa-docs.pdf\",\n          Subtitle \"14MB · Public · 1 Jan, 2017\")),\n       Action ([],\n         [ icon ([], Kind MoreHoriz) ]) ))\n(*** hide ***)\nlet render () =\n    tryMount \"tile-default-demo\" def\n    tryMount \"tile-compact-demo\" compact\n    tryMount \"tile-params-table\"\n        (PropTable.paramTable\n            (Some typeof<TileOptional>)\n            None\n            (Some typeof<TileChildren>))\n(**\n\n<div id=\"tile\">\n\n<h2 class=\"s-title\">Tile</h2>\n\nTiles are repeatable or embeddable information blocks.\n\n#### Parameters\n\n<div class=\"props-table\" id=\"tile-params-table\"></div>\n\n#### Example\n\nA simple tile component with an icon,\ncontent and action.\n\n<div class=\"demo\" id=\"tile-default-demo\"></div>\n\n*)\n(*** include: tile-default-sample ***)\n(**\n\n#### Compact\n\nA compact tile.\n\n<div class=\"demo\" id=\"tile-compact-demo\"></div>\n\n*)\n(*** include: tile-compact-sample ***)\n(**\n\n</div>\n\n*)","﻿namespace Fabulosa\n\nmodule Toast =\n\n    open Fabulosa.Extensions\n    open Fabulosa.Button\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n\n    type Color =\n        | Primary\n        | Success\n        | Warning\n        | Error\n\n    type ToastOptional =\n        | Color of Color\n        | OnRequestClose of (MouseEvent -> unit)\n        interface IHTMLProp\n\n    type Toast = HTMLProps * FabulosaText\n\n    let private color (prop: IHTMLProp) =\n        match prop with\n        | :? ToastOptional as opt ->\n            match opt with\n            | Color Primary -> className \"toast-primary\"\n            | Color Success -> className \"toast-success\"\n            | Color Warning -> className \"toast-warning\"\n            | Color Error -> className \"toast-error\"\n            | _ -> prop\n        | _ -> prop\n\n    let private onRequestClose (props: HTMLProps) =\n        props\n        |> List.tryPick\n            (function\n            | :? ToastOptional as opt ->\n                match opt with\n                | OnRequestClose fn ->\n                    Some (button\n                        ([ ClassName \"btn-clear float-right\"\n                           OnClick fn], []))\n                | _ -> None\n            | _ -> None)\n        |> R.ofOption\n\n    let toast (comp: Toast) =\n        let opt, (Text txt) = comp\n        Unmerged opt\n        |> addProp (ClassName \"toast\")\n        |> map color\n        |> merge\n        |> R.div\n        <| [ onRequestClose opt\n             R.str txt ]\n        |> Portal.ƒ \"toast-container\"\n        ","﻿module ToastPage\n\nopen Fabulosa\nopen Fabulosa.Docs\nopen Fabulosa.Button\nopen Fabulosa.Toast\nmodule R = Fable.Helpers.React\nmodule P = R.Props\nopen Fable.Import.React\nopen Renderer\nopen Microsoft.FSharp.Core\nopen Fable.Helpers.React.ReactiveComponents\n\ntype State =\n    { Opened: bool }\n\ntype Message = \n    | Toggle\n\ntype Dispatch = Message -> unit\n\nlet init _ =\n    { Opened = false }\n\nlet update message state =\n    match message with \n    | Toggle ->\n        { state with Opened = not state.Opened }\n\nlet toggler dispatch opened =\n    button\n        ([ ButtonOptional.Kind Kind.Primary\n           P.OnClick\n             (fun _ ->\n                dispatch Toggle\n                Fable.Import.JS.setTimeout\n                  (fun () -> dispatch Toggle)\n                  3000 |> ignore)\n           P.Disabled opened ],\n         [ R.str \"Open\" ])\n\nlet trigger dispatch opened =\n    button\n        ([ ButtonOptional.Kind Kind.Primary\n           P.OnClick (fun _ -> dispatch Toggle)\n           P.Disabled opened ],\n         [ R.str \"Open\" ])\n\n(*** define: toast-default-sample ***)\nlet def = toast ([], Text \"Default toast\")\n(*** define: toast-primary-sample ***)\nlet primary dispatch =\n    toast\n        ([ Color Primary\n           OnRequestClose (fun _ -> dispatch Toggle ) ],\n         Text \"You can close me!\")\n(*** hide ***)\n\nlet defaultView (model: Model<unit, State>) dispatch =\n    let renderToast =\n        if model.state.Opened then\n            def\n        else R.ofOption None\n    R.div [] \n        [ toggler dispatch model.state.Opened\n          renderToast ]\n\nlet primaryView (model: Model<unit, State>) dispatch =\n    let renderToast =\n        if model.state.Opened then\n            primary dispatch\n        else R.ofOption None\n    R.div [] \n        [ trigger dispatch model.state.Opened\n          renderToast ]\n\nlet demo view  =\n    R.reactiveCom init update view \"\" () []\n\n(*** hide ***)\nlet render () =\n    tryMount \"toast-default-demo\" <| demo defaultView\n    tryMount \"toast-primary-demo\" <| demo primaryView\n    tryMount \"toast-params-table\"\n        (PropTable.paramTable\n            (Some typeof<ToastOptional>)\n            None\n            (Some typeof<FabulosaText>))\n(**\n\n<div id=\"toast\">\n\n<h2 class=\"s-title\">Toast</h2>\n\nToasts are used to show alert\nor information to users\n\n#### Paramaters\n\n<div class=\"props-table\" id=\"toast-params-table\"></div>\n\n#### Example\n\nA simple toast component with all defaults.\n\n<div class=\"demo\" id=\"toast-default-demo\"></div>\n\n*)\n(*** include: toast-default-sample ***)\n(**\n\n#### Primary & Closeable\n\nA toast with primary color\nthat you can close\n\n<div class=\"demo\" id=\"toast-primary-demo\"></div>\n\n*)\n(*** include: toast-primary-sample ***)\n(**\n\n</div>\n\n*)","namespace Fabulosa\n\n\ntype BoundingRect = {\n    Top: int\n    Right: int\n    Bottom: int\n    Left: int\n    Width: int\n    Height: int\n}\n\nmodule BoundingRect =\n    open System\n    open Fable.Import.Browser\n    \n    let OfClientRectType (rect: ClientRect) =\n        {\n            Top = Convert.ToInt32(rect.top)\n            Right = Convert.ToInt32(rect.right)\n            Bottom = Convert.ToInt32(rect.bottom)\n            Left = Convert.ToInt32(rect.left)\n            Width = Convert.ToInt32(rect.width)\n            Height = Convert.ToInt32(rect.height)\n        }\n            ","namespace Fabulosa\nopen Fable.Import.React\n\nopen Fable.Import\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Extensions.Fable.Helpers.React.Props\nopen Fable.Core\nopen Fable.Helpers\n\nmodule Tooltip =\n    module R = Fable.Helpers.React\n    open R.Props\n    open Fable.Import.React\n    \n    type Orientation =\n        | Top\n        | Bottom\n        | Right\n        | Left \n\n    type TooltipChildren = \n        | Children of ReactElement list\n        \n    type TooltipContent =\n        | Content of ReactElement list\n    \n    type TooltipOptional =\n        | Orientation of Orientation\n        interface IHTMLProp\n    \n    type Tooltip = HTMLProps * TooltipContent * TooltipChildren       \n    \n    let private pick fn (props:HTMLProps) =\n                props |> List.tryPick fn\n    \n    let private orientation =\n        fun (prop: IHTMLProp) ->\n            match prop with\n            | :? TooltipOptional as opt ->\n                let (Orientation ori) = opt\n                Some ori\n            | _ -> None\n        |> pick\n        \n    module BaseTooltip =\n        module R = Fable.Helpers.React\n        open R.Props\n        open Fable.Import.React\n        open Fabulosa.Extensions\n        open Extensions.Fable.Helpers.React.Props\n        open Fable.Import\n        \n        type BaseTooltipOptional =\n            | Reference of (Browser.Element -> unit)\n            | BaseOrientation of Orientation\n            interface IHTMLProp\n        \n        type BaseTooltip = HTMLProps * TooltipContent\n                  \n        let positionClassName =\n            function\n                | Some Orientation.Top -> \"tooltip-top\"\n                | Some Orientation.Right -> \"tooltip-right\"\n                | Some Orientation.Bottom -> \"tooltip-bottom\"\n                | Some Orientation.Left -> \"tooltip-left\"\n                | None -> \"tooltip-top\"\n                >> ClassName    \n                      \n        let private reference =\n            fun (prop: IHTMLProp) ->\n                match prop with\n                | :? BaseTooltipOptional as opt ->\n                    match opt with\n                    | Reference ref ->\n                        Some (Prop.Ref ref)\n                    | _ -> None\n                | _ -> None\n            |> pick      \n      \n        let private orientation =\n            fun (prop: IHTMLProp) ->\n                match prop with\n                | :? BaseTooltipOptional as opt ->\n                    match opt with\n                    | BaseOrientation Orientation.Top -> className \"tooltip-top\" |> Some                        \n                    | BaseOrientation Orientation.Left -> className \"tooltip-left\" |> Some                        \n                    | BaseOrientation Orientation.Right -> className \"tooltip-right\" |> Some                        \n                    | BaseOrientation Orientation.Bottom -> className \"tooltip-bottom\" |> Some                        \n                    | _ -> None\n                | _ -> None\n            \n        let baseTooltip (tooltip: BaseTooltip) =\n            let opt, TooltipContent.Content children = tooltip\n\n            opt\n            |> Unmerged\n            |> addProps [ ClassName \"fab-tooltip\"]\n            |> addOptionOrElse orientation (ClassName \"tooltip-top\")\n            |> addPropOpt (opt |> reference |> Option.map (fun x -> upcast x))\n            |> merge\n            |> R.span\n            <| children\n        \n\n    [<RequireQualifiedAccess>]\n    module Hover =\n        module R = Fable.Helpers.React\n        open Extensions\n        open R.Props\n        open Fable.Import.React\n        open Extensions.Fable.Helpers.React.Props\n        open Fable.Import\n        open Fabulosa\n        open Fabulosa.Extensions\n                \n        type Hover = \n        | Hovering\n        | NotHovering   \n        \n        type Props =\n            { HTMLProps: IHTMLProp list\n              Orientation: Orientation \n              TooltipContent: TooltipContent }\n                 \n        type State = { Style: HTMLAttr; Hover: Hover }\n               \n        type HoverClass(refCallBack) =\n            inherit PureComponent<Props, State>(refCallBack)\n            do base.setInitState { Style =  Style []; Hover = NotHovering }\n                  \n            let mutable targetElement = None\n            let mutable tooltipElement = None  \n\n            let padding = 10                \n                \n            let bottomPosition (target: BoundingRect) (tooltip: BoundingRect) =\n                let horizontalCenter = target.Left + (target.Width / 2) - (tooltip.Width / 2)\n                Style [Top (sprintf \"%dpx\" (target.Bottom + padding));Left (sprintf \"%dpx\" horizontalCenter)]\n            \n            let topPosition (target: BoundingRect) (tooltip: BoundingRect) =\n                let horizontalCenter = target.Left + (target.Width / 2) - (tooltip.Width / 2)\n                Style [Top (sprintf \"%dpx\" (target.Top - tooltip.Height - padding));Left (sprintf \"%dpx\" horizontalCenter)]\n                \n            let leftPosition (target: BoundingRect) (tooltip: BoundingRect) =\n                let verticalCenter = target.Top + (target.Height / 2) - (tooltip.Height / 2)\n                Style [Top (sprintf \"%dpx\" verticalCenter);Left (sprintf \"%dpx\" (target.Left - tooltip.Width - padding))]\n            \n            let rightPosition (target: BoundingRect) (tooltip: BoundingRect) =\n                let verticalCenter = target.Top + (target.Height / 2) - (tooltip.Height / 2)\n                Style [Top (sprintf \"%dpx\" verticalCenter); Left (sprintf \"%dpx\" (target.Left + target.Width + padding))]\n                                        \n            let calculatePosition (targetElement:Browser.Element) (tooltipElement:Browser.Element) orientation =\n                let targetBoundaries = targetElement.getBoundingClientRect() |> BoundingRect.OfClientRectType\n                let tooltipBoundaries = tooltipElement.getBoundingClientRect() |> BoundingRect.OfClientRectType\n                match orientation with \n                 | Orientation.Top -> topPosition\n                 | Orientation.Right -> rightPosition\n                 | Orientation.Bottom -> bottomPosition\n                 | Orientation.Left -> leftPosition\n                <|| (targetBoundaries, tooltipBoundaries)\n                \n            let setTooltipRef (ref:Browser.Element) = \n                if ref <> null then\n                    tooltipElement <- Some ref\n            \n            let setTargetRef (ref:Browser.Element) = \n                if ref <> null then\n                    targetElement <- Some ref\n            \n            let hoverClassName =\n                function\n                | Hovering -> ClassName \"tooltip-active\" :> IHTMLProp |> Some \n                | NotHovering -> None\n                        \n            override this.componentDidMount () = this.updatePosition NotHovering\n            \n            member this.onMouseEnter (event: MouseEvent) =\n                this.updatePosition Hovering\n                \n            member this.onMouseLeave (event: MouseEvent) =\n                this.updatePosition NotHovering\n                \n            member this.updatePosition hover =\n                let mapElements target tooltip = \n                    let style = calculatePosition target tooltip this.props.Orientation\n                    this.setState { Style = style; Hover = hover}\n                    \n                Option.map2 mapElements targetElement tooltipElement\n                |> ignore \n                \n            member this.basetooltipProps () =\n                Unmerged this.props.HTMLProps\n                |> addPropOpt (hoverClassName this.state.Hover)\n                |> addProps \n                  [ this.state.Style\n                    Ref setTooltipRef\n                    BaseTooltip.BaseOrientation this.props.Orientation ]\n                |> merge\n            \n            override this.render() =\n                R.fragment [] \n                    [ R.span [Ref setTargetRef; OnMouseEnter this.onMouseEnter; OnMouseLeave this.onMouseLeave; Style [Display \"inline-block\"]] this.children\n                      BaseTooltip.baseTooltip (this.basetooltipProps(), this.props.TooltipContent)\n                      |> Portal.ƒ \"tooltip-portal\"]\n            \n    let tooltip (tooltip: Tooltip) =\n        let opt, content, TooltipChildren.Children children = tooltip\n        \n        let tooltipOrientation =\n            match orientation opt with \n            | Some s -> s\n            | None -> Orientation.Top\n                                    \n        React.ofType<Hover.HoverClass, Hover.Props, _> \n            { HTMLProps = opt\n              Orientation = tooltipOrientation\n              TooltipContent = content }\n            children\n      ","namespace Fabulosa.Extensions\n\nmodule Option =\n    let map2 f x y =\n        match x, y with \n        | Some a, Some b -> Some (f a b)\n        | _ -> None\n        ","module TooltipPage\n\nopen Fabulosa\nopen Fabulosa.Docs\nmodule R = Fable.Helpers.React\nopen R.Props\nopen Fable.Import.React\nopen Renderer\nopen Fabulosa.Grid\nopen Fabulosa.Button\nopen Fabulosa.Tooltip\n\nlet style = Style [Background \"#f8f9fa\"]\n\n(*** define: tooltip-sample ***)\nlet demo = \n    let tooltipExample orientation =   \n        let tooltipText = sprintf \"%A\" orientation  \n        let buttonText = sprintf \"%A tooltip\" orientation  \n        Column ([ Grid.Size 3 ], [\n                tooltip ([Orientation orientation], Content [R.str tooltipText], Children [ button ([ Kind Primary ], [ R.str buttonText ]) ] )\n            ])\n            \n    grid ([],\n          [ Row ([],\n              [ tooltipExample Orientation.Left\n                tooltipExample Orientation.Top\n                tooltipExample Orientation.Bottom\n                tooltipExample Orientation.Right ]) ])\n(*** hide ***)\n\nlet render () =\n    tryMount \"tooltip-demo\" demo\n(**\n\n<div id=\"tooltip\">\n\n<h2 class=\"s-title\">Tooltips</h2>\n\nTooltips provide context information labels that appear on hover and focus.\n\n#### Example\n\n<div class=\"demo\" id=\"tooltip-demo\"></div>\n\n*)\n(*** include: tooltip-sample ***)\n(**\n\n</div>\n\n*)\n"],"sourceRoot":""}